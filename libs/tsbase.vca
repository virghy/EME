SccTextX Version 1.0.0.1
PLATFORM C(8,0),UNIQUEID C(10,0),TIMESTAMP N(10,0),CLASS M(4,0),CLASSLOC M(4,0),BASECLASS M(4,0),OBJNAME M(4,0),PARENT M(4,0),PROPERTIES M(4,0),PROTECTED M(4,0),METHODS M(4,0),OBJCODE M(4,0),OLE M(4,0),OLE2 M(4,0),RESERVED1 M(4,0),RESERVED2 M(4,0),RESERVED3 M(4,0),RESERVED4 M(4,0),RESERVED5 M(4,0),RESERVED6 M(4,0),RESERVED7 M(4,0),RESERVED8 M(4,0),USER M(4,0)
1252

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] Class     
[START RESERVED1]
VERSION =  0.029[END RESERVED1]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0T50R6ZYR
[CLASS] form
[BASECLASS] form
[OBJNAME] anular
[START PROPERTIES]
AutoCenter = .T.
Caption = "Form"
DoCreate = .T.
MaxButton = .F.
MinButton = .F.
Name = "anular"
WindowType = 1
[END PROPERTIES]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
3[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] anular
[PARENT] anular
[START PROPERTIES]
Caption = "Confirmar"
Height = 24
Left = 84
Name = "anular"
Top = 192
Width = 96
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0T50RE18V
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] Cancelar
[PARENT] anular
[START PROPERTIES]
Caption = "Cancelar"
Height = 24
Left = 204
Name = "Cancelar"
Top = 192
Width = 96
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
THISFORM.RELEASE
ENDPROC
**
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] anular
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
Arial, 1, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSVA
[CLASS] container
[BASECLASS] container
[OBJNAME] asiento
[START PROPERTIES]
BorderWidth = 0
Height = 323
Name = "asiento"
Style = 3
Width = 602
controlsource = 
recordsource = Datos!cnt_Asientos
sufijotabla = 
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
LPARAMETERS LCSUFIJO
THIS.SUFIJOTABLA = LCSUFIJO
THIS.TRAERDATOS()
THIS.GRDVDETALLE.VALOR = "oApp.Empresa, oApp.Ejercicio, vxAsientos"+RTRIM(THIS.SUFIJOTABLA)+".idAsiento"
DO CASE
CASE EMPTY(THISFORM.TABLA2)
THISFORM.TABLA2 = 'vxAsientos'+THIS.SUFIJOTABLA
THISFORM.TABLA3 = 'vxDetalle'+THIS.SUFIJOTABLA
CASE EMPTY(THISFORM.TABLA3)
THISFORM.TABLA3 = 'vxAsientos'+THIS.SUFIJOTABLA
THISFORM.TABLA4 = 'vxDetalle'+THIS.SUFIJOTABLA
CASE EMPTY(THISFORM.TABLA4)
THISFORM.TABLA4 = 'vxAsientos'+THIS.SUFIJOTABLA
THISFORM.TABLA5 = 'vxDetalle'+THIS.SUFIJOTABLA
CASE EMPTY(THISFORM.TABLA5)
THISFORM.TABLA5 = 'vxAsientos'+THIS.SUFIJOTABLA
THISFORM.TABLA6 = 'vxDetalle'+THIS.SUFIJOTABLA
OTHERWISE
MESSAGEBOX('No se pudo registrar las tablas de asientos', 16, "Futura Software")
ENDCASE
IF THIS.WIDTH>THIS.PARENT.PARENT.WIDTH
THIS.PARENT.PARENT.WIDTH = THIS.WIDTH+25
THISFORM.WIDTH = THIS.WIDTH+25
ENDIF
ENDPROC
PROCEDURE Refresh
THISFORM.LOCKSCREEN = .T.
IF  .NOT. THISFORM.EDITMODE .OR.  .NOT. THISFORM.DATACHANGED("vxAsientos"+THIS.SUFIJOTABLA)
M.IDASIENTO = EVALUATE(THIS.CONTROLSOURCE)
THIS.TRAERDATOS()
ENDIF
THISFORM.LOCKSCREEN = .F.
ENDPROC
PROCEDURE UIEnable
LPARAMETERS LENABLE
IF LENABLE
THIS.REFRESH()
ENDIF
ENDPROC
PROCEDURE asentar
LPARAMETERS LCIDASIENTO
LOCAL LCCAMPONRO, LNCAMPOTAM, LCALIAS, LDFECHA, LCDESCRIPCION, LCSUCURSAL, LCNROASIENTO, LCCUENTA, LCTIPO, LNIMPORTE, LCCAMPO, CCOMANDOSQL, LCCONDICION, LNCOTIZACION
LCALIAS = ALIAS()
WAIT WINDOW NOCLEAR NOWAIT 'Confeccionando el Asiento...'
SELECT * FROM Datos!sysAsientos WHERE LCIDASIENTO=IDASIENTO INTO CURSOR cxAsentar
LCCAMPONRO = THISFORM.CAMPONRO
LNCAMPOTAM = THISFORM.CAMPOTAM
IF USED('asientos_Base')
	USE IN ASIENTOS_BASE
ENDIF
LCTIPO = EVALUATE(cxAsentar.TIPO)
IF LCTIPO<>"D" .OR. LCTIPO<>"C"
	LCTIPO = 'D'
ENDIF
LDFECHA = EVALUATE(cxAsentar.FECHA)
IF  .NOT. EMPTY(alltrim(cxAsentar.DESCRIPCION))
	LCDESCRIPCION = EVALUATE(cxAsentar.DESCRIPCION)
ELSE
	LCDESCRIPCION = ''
ENDIF

IF  .NOT. EMPTY(cxAsentar.SUCURSAL)
	LCSUCURSAL = EVALUATE(cxAsentar.SUCURSAL)
ELSE
	LCSUCURSAL = '01'
ENDIF
*SET STEP ON
IF  .NOT. EMPTY(ALLTRIM(cxAsentar.COTIZACION))
	LNCOTIZACION = EVALUATE(cxAsentar.COTIZACION)
ELSE
	LNCOTIZACION = COTIZACION('U$S', 'V', LDFECHA)
ENDIF
SELECT *, IIF(LCTIPO='D', IIF(INVERTIDO, 'H', 'D'), IIF(INVERTIDO, 'D', 'H')) AS ORDEN FROM cxAsentar ORDER BY ORDEN INTO CURSOR _lcAsentar
THIS.PARENT.PARENT.ACTIVEPAGE = THIS.PARENT.PAGEORDER
SELECT _lcAsentar
INSERT INTO ('vxAsientos'+THIS.SUFIJOTABLA) (IDEMPRESA, IDASIENTO, EJERCICIO, FECHA, DESCRIPCIÓN, SUCURSAL, COTIZACION) VALUES (OAPP.EMPRESA, NEWID('CNT_ASIENTOS'), YEAR(ldFecha), LDFECHA, LCDESCRIPCION, LCSUCURSAL, LNCOTIZACION)
REPLACE (THIS.CONTROLSOURCE) WITH EVALUATE("vxAsientos"+RTRIM(THIS.SUFIJOTABLA)+".idasiento")
GOTO TOP IN _lcAsentar
WAIT WINDOW NOCLEAR NOWAIT 'Asentando...'
DO WHILE  .NOT. EOF('_lcAsentar')
	IF  .NOT. EMPTY(_lcAsentar.ORIGENSQL)
		CCOMANDOSQL = 'Select '+_lcAsentar.CUENTA+' as cuenta, '+'('+_lcAsentar.IMPORTE+') as importe'
		IF  .NOT. EMPTY(alltrim(_lcAsentar.DETALLE))
			CCOMANDOSQL = CCOMANDOSQL+", "+_lcAsentar.DETALLE+' as detalle'
		ELSE
			CCOMANDOSQL = CCOMANDOSQL+', SPACE(20) as detalle'
		ENDIF
		
		IF  .NOT. EMPTY(_lcAsentar.CENTRO)
			CCOMANDOSQL = CCOMANDOSQL+", "+_lcAsentar.CENTRO+' as Centro'
		ELSE
			CCOMANDOSQL = CCOMANDOSQL+', SPACE(3)  as Centro'
		ENDIF
		
		IF  .NOT. EMPTY(_lcAsentar.IDCONCEPTO)
			CCOMANDOSQL = CCOMANDOSQL+', '+_lcAsentar.IDCONCEPTO+' as IdConcepto'
		ELSE
			CCOMANDOSQL = CCOMANDOSQL+', SPACE(2)  as IdConcepto'
		ENDIF
		
		IF  .NOT. EMPTY(_lcAsentar.DOCUMENTO)
			CCOMANDOSQL = CCOMANDOSQL+', '+_lcAsentar.DOCUMENTO+' as Documento'
		ELSE
			CCOMANDOSQL = CCOMANDOSQL+', SPACE(20) as Documento'
		ENDIF
		
		CCOMANDOSQL = CCOMANDOSQL+' From '+_lcAsentar.ORIGENSQL
		IF  .NOT. EMPTY(_lcAsentar.CONDICION)
			CCOMANDOSQL = CCOMANDOSQL+' Where '+_lcAsentar.CONDICION
		ENDIF
		
		SQL(CCOMANDOSQL, 'cDet')
		SELECT CUENTA, SUM(IMPORTE) AS IMPORTE, DETALLE, CENTRO, IDCONCEPTO, DOCUMENTO FROM cDet GROUP BY CUENTA, DETALLE, CENTRO, IDCONCEPTO, DOCUMENTO INTO CURSOR cAsentarDet
		
		IF RECCOUNT('cAsentarDet')>0
			DO WHILE  .NOT. EOF('cAsentarDet')
				IF cAsentarDet.IMPORTE=0
					SKIP IN cAsentarDet
					LOOP
				ENDIF
				LCCUENTA = cAsentarDet.CUENTA
				LCDOCUMENTO = cAsentarDet.DOCUMENTO
				LNIMPORTE = cAsentarDet.IMPORTE
				THIS.GRDVDETALLE.AGREGARITEM()
				REPLACE CUENTA WITH NVL(LCCUENTA, ''), DOCUMENTO WITH LCDOCUMENTO, detalle WITH cAsentarDet.Detalle IN ("vxDetalle"+RTRIM(THIS.SUFIJOTABLA))
				DO CASE
					CASE LCTIPO='D'
						IF _lcAsentar.INVERTIDO
							LCCAMPO = 'Haber'
						ELSE
							LCCAMPO = 'Debe'
						ENDIF
					CASE LCTIPO='C'
						IF _lcAsentar.INVERTIDO
							LCCAMPO = 'Debe'
						ELSE
							LCCAMPO = 'Haber'
						ENDIF
				ENDCASE
				REPLACE &LCCAMPO WITH NVL(LNIMPORTE,0), Ejercicio WITH YEAR(ldFecha) IN ("vxDetalle" + RTRIM(THIS.SUFIJOTABLA))
				SKIP IN cAsentarDet
			ENDDO
		ENDIF
	ELSE
		IF  .NOT. EMPTY(_lcAsentar.CUENTA)
			LCCUENTA = EVALUATE(_lcAsentar.CUENTA)
		ELSE
			LCCUENTA = ''
		ENDIF
		IF  .NOT. EMPTY(_lcAsentar.DOCUMENTO)
			LCDOCUMENTO = EVALUATE(_lcAsentar.DOCUMENTO)
		ELSE
			LCDOCUMENTO = ''
		ENDIF
		IF  .NOT. EMPTY(alltrim(_lcAsentar.DETALLE))
			LCDetalle = EVALUATE(_lcAsentar.Detalle)
		ELSE
			LCDetalle = ''
		ENDIF

		IF  .NOT. EMPTY(_lcAsentar.IMPORTE)
			LNIMPORTE = EVALUATE(_lcAsentar.IMPORTE)
		ELSE
			LNIMPORTE = 0
		ENDIF
		
		IF LNIMPORTE<>0
			THIS.GRDVDETALLE.AGREGARITEM()
			REPLACE CUENTA WITH NVL(LCCUENTA, ''), DOCUMENTO WITH LCDOCUMENTO, detalle WITH LCDetalle  IN ("vxDetalle"+RTRIM(THIS.SUFIJOTABLA))
			DO CASE
				CASE LCTIPO='D'
					IF _lcAsentar.INVERTIDO
						LCCAMPO = 'Haber'
					ELSE
						LCCAMPO = 'Debe'
					ENDIF
				CASE LCTIPO='C'
					IF _lcAsentar.INVERTIDO
						LCCAMPO = 'Debe'
					ELSE
						LCCAMPO = 'Haber'
					ENDIF
			ENDCASE
			REPLACE &LCCAMPO WITH NVL(LNIMPORTE,0),Ejercicio WITH YEAR(ldFecha)  IN ("vxDetalle" + RTRIM(THIS.SUFIJOTABLA))
		ENDIF
	ENDIF
	SKIP IN _lcAsentar
ENDDO
SELECT (LCALIAS)

IF THIS.PARENT.PARENT.PageCount>2
	THIS.PARENT.PARENT.ACTIVEPAGE = 3
ENDIF


THIS.REFRESH()
THISFORM.CAMPONRO = LCCAMPONRO
THISFORM.CAMPOTAM = LNCAMPOTAM
WAIT CLEAR
ENDPROC
PROCEDURE enlazardatos
THIS.TXTNÚMERO.CONTROLSOURCE = 'vxAsientos'+RTRIM(THIS.SUFIJOTABLA)+'.número'
THIS.TXTNRO_ASIENTO.CONTROLSOURCE = 'vxAsientos'+RTRIM(THIS.SUFIJOTABLA)+'.nro_asiento'
THIS.TXTFECHA.CONTROLSOURCE = 'vxAsientos'+RTRIM(THIS.SUFIJOTABLA)+'.Fecha'
THIS.CBOSUCURSAL1.CONTROLSOURCE = 'vxAsientos'+RTRIM(THIS.SUFIJOTABLA)+'.Sucursal'
THIS.TXTDESCRIPCIÓN.CONTROLSOURCE = 'vxAsientos'+RTRIM(THIS.SUFIJOTABLA)+'.Descripción'
THIS.COTIZA.CONTROLSOURCE = 'vxAsientos'+RTRIM(THIS.SUFIJOTABLA)+'.Cotizacion'
WITH THIS.GRDVDETALLE
.RECORDSOURCE = 'vxdetalle'+RTRIM(THIS.SUFIJOTABLA)
.CUENTA.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.cuenta'
.DESCRIPCION.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.Descripción'
.DEBE.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.Debe'
.HABER.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.Haber'
.CENTRO.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.Centro'
.CONCEPTO.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.IdConcepto'
.DOCUMENTO.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.Documento'
.DETALLE.CONTROLSOURCE = 'vxDetalle'+RTRIM(THIS.SUFIJOTABLA)+'.Detalle'
.COLUMN0.WIDTH = 0
ENDWITH
ENDPROC
PROCEDURE traerdatos
HNDCONN = CURSORGETPROP("ConnectHandle", THISFORM.TABLA1)
IF EMPTY(THIS.CONTROLSOURCE)
	M.IDASIENTO = 0
ELSE
	M.IDASIENTO = EVALUATE(THIS.CONTROLSOURCE)
ENDIF

THIS.GRDVDETALLE.RECORDSOURCE = ''

*Filtrar solo por el IdAsiento

TEXT TO CMDSQL NOSHOW
	SELECT Cn_asientos.idempresa, Cn_asientos.idasiento,
	  Cn_asientos.ejercicio, Cn_asientos.número, Cn_asientos.fecha,
	  Cn_asientos.descripción, Cn_asientos.tipo, Cn_asientos.procesado,
	  Cn_asientos.sucursal, Cn_asientos.nro_asiento, Cn_asientos.cotizacion,
	  Cn_asientos.idmoneda
	 FROM dbo.cn_asientos Cn_asientos
	 WHERE Cn_asientos.idasiento = ?m.idasiento
ENDTEXT


= SQLEXEC(HNDCONN, CMDSQL, 'vxAsientos'+THIS.SUFIJOTABLA)

SELECT ('vxAsientos'+THIS.SUFIJOTABLA)
= CURSORSETPROP("KeyFieldList", 'IdEmpresa,IdAsiento')
= CURSORSETPROP("UpdatableFieldList", "idempresa, idasiento, ejercicio, número, fecha, descripción, tipo, procesado, sucursal, nro_asiento, idmoneda, cotizacion")
= CURSORSETPROP("UpdateNameList", "idempresa dbo.cn_asientos.idempresa, idasiento dbo.cn_asientos.idasiento, ejercicio dbo.cn_asientos.ejercicio, número dbo.cn_asientos.número, fecha dbo.cn_asientos.fecha, descripción dbo.cn_asientos.descripción, tipo dbo.cn_asientos.tipo,"+" procesado dbo.cn_asientos.procesado, sucursal dbo.cn_asientos.sucursal, nro_asiento dbo.cn_asientos.nro_asiento, idmoneda dbo.cn_asientos.idmoneda, cotizacion dbo.cn_asientos.cotizacion")
= CURSORSETPROP("Tables", 'dbo.cn_asientos')
= CURSORSETPROP("SendUpdates", .T.)
TEXT TO CMDSQL NOSHOW

SELECT Cn_detalle.iddetalle, Cn_detalle.idempresa, 
  Cn_detalle.idasiento, Cn_detalle.ejercicio, Cn_detalle.cuenta,
  Cn_detalle.debe, Cn_detalle.haber, Cn_detalle.moneda_extr,
  Cn_detalle.cotiza, Cn_detalle.detalle, Cn_detalle.centro,
  Cn_detalle.documento, Cn_detalle.idconcepto, Cn_cuentas.Descripción
 FROM dbo.cn_detalle Cn_detalle left join dbo.cn_cuentas Cn_cuentas 
 ON Cn_detalle.idempresa = Cn_cuentas.IdEmpresa 
   AND Cn_detalle.cuenta = Cn_cuentas.Cuenta 
   AND Cn_detalle.ejercicio = Cn_cuentas.Ejercicio
 WHERE 
  Cn_detalle.idasiento = ?m.idasiento
  order by IdDetalle


ENDTEXT
= SQLEXEC(HNDCONN, CMDSQL, 'vxdetalle'+THIS.SUFIJOTABLA)
SELECT ('vxDetalle'+THIS.SUFIJOTABLA)
RESULT = CURSORSETPROP("KeyFieldList", 'IdDetalle')
RESULT = CURSORSETPROP("UpdatableFieldList", "idempresa, idasiento, ejercicio, cuenta, debe, haber, moneda_extr, cotiza, detalle, centro, documento, idconcepto")
RESULT = CURSORSETPROP("UpdateNameList", "IdDetalle dbo.cn_detalle.IdDetalle, idempresa dbo.cn_detalle.idempresa, idasiento dbo.cn_detalle.idasiento, ejercicio dbo.cn_detalle.ejercicio, "+" cuenta dbo.cn_detalle.cuenta, debe dbo.cn_detalle.debe, haber dbo.cn_detalle.haber, moneda_extr dbo.cn_detalle.moneda_extr, cotiza dbo.cn_detalle.cotiza, detalle dbo.cn_detalle.detalle, "+" centro dbo.cn_detalle.centro, documento dbo.cn_detalle.documento, idconcepto dbo.cn_detalle.idconcepto")
RESULT = CURSORSETPROP("Tables", 'dbo.cn_detalle')
RESULT = CURSORSETPROP("SendUpdates", .T.)
= CURSORSETPROP('BUFFERING', 5, 'vxDetalle'+THIS.SUFIJOTABLA)
= CURSORSETPROP('BUFFERING', 5, 'vxAsientos'+THIS.SUFIJOTABLA)
this.enlazardatos()


ENDPROC
PROCEDURE validar
this.totales.Refresh()
IF This.totales.TotalDebe.Value<>This.totales.TotalHaber.Value
	MESSAGEBOX("El asiento no balancea. Verifique y vuelva a intentarlo",64,"Futura Software")
	RETURN .f.
ENDIF
	


ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
40[END RESERVED2]
[START RESERVED3]
*asentar 
*enlazardatos 
*traerdatos 
*validar 
controlsource Especifica el campo al que esta enlazado el control.
recordsource Especifica el origen de datos al que esta enlazado el control Asiento.
sufijotabla Sufijo utilizado para las tablas cuando exista mas de una instancia.
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] Bifurcar
[PARENT] asiento
[START PROPERTIES]
Caption = "\<Bifurcar"
FontBold = .F.
Height = 28
Left = 455
Name = "Bifurcar"
SpecialEffect = 2
ToolTipText = "Bifurca esta operación del asiento actual."
Top = 9
Width = 48
editable = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
LOCAL LCALIAS
LCALIAS = SUBSTR(THIS.PARENT.CONTROLSOURCE, 1, AT('.', THIS.PARENT.CONTROLSOURCE, 1)-1)
REPLACE (THIS.PARENT.CONTROLSOURCE) WITH 0 IN (LCALIAS)
THIS.PARENT.REFRESH()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0X713P7BY
[CLASS] cbosucursal
[CLASSLOC] futura.vcx
[BASECLASS] combobox
[OBJNAME] Cbosucursal1
[PARENT] asiento
[START PROPERTIES]
Left = 76
Name = "Cbosucursal1"
Top = 47
Width = 185
cursor = cboSucursal
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0X80KJVKH
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] cotiza
[PARENT] asiento
[START PROPERTIES]
Comment = ""
ControlSource = ""
Height = 22
InputMask = "9,999.99"
Left = 502
Name = "cotiza"
TabIndex = 9
Top = 49
Width = 99
editable = .T.
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] Enlazar
[PARENT] asiento
[START PROPERTIES]
Caption = "\<Enlazar"
FontBold = .F.
Height = 28
Left = 503
Name = "Enlazar"
SpecialEffect = 2
ToolTipText = "Enlaza esta operación con un Asiento ya existente."
Top = 9
Width = 48
editable = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
THIS.PARENT.TXTNÚMERO.COMMENT = THIS.PARENT.TXTNÚMERO.CONTROLSOURCE
THIS.PARENT.TXTNÚMERO.CONTROLSOURCE = ""
THIS.PARENT.TXTNÚMERO.ENABLED = .T.
THIS.PARENT.TXTNÚMERO.SETFOCUS()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJQ4
[CLASS] tsgrid
[CLASSLOC] tsbase.vcx
[BASECLASS] grid
[OBJNAME] grdVdetalle
[PARENT] asiento
[START PROPERTIES]
Column1.ControlSource = ""
Column1.FontSize = 8
Column1.Name = "Cuenta"
Column1.Visible = .T.
Column1.Width = 58
Column2.BackColor = 228,228,228
Column2.ControlSource = ""
Column2.FontSize = 8
Column2.Name = "Descripcion"
Column2.Visible = .T.
Column2.Width = 176
Column3.ControlSource = ""
Column3.FontSize = 8
Column3.InputMask = "999,999,999,999"
Column3.Name = "Debe"
Column3.Visible = .T.
Column3.Width = 92
Column4.ControlSource = ""
Column4.FontSize = 8
Column4.InputMask = "999,999,999,999"
Column4.Name = "Haber"
Column4.Visible = .T.
Column4.Width = 90
Column5.Bound = .T.
Column5.ControlSource = ""
Column5.CurrentControl = "Cbocentro1"
Column5.FontSize = 8
Column5.Name = "Centro"
Column5.ReadOnly = .F.
Column5.Sparse = .T.
Column5.Visible = .T.
Column5.Width = 34
Column6.ControlSource = ""
Column6.CurrentControl = "Cboconcepto1"
Column6.FontSize = 8
Column6.Name = "Concepto"
Column6.Visible = .T.
Column6.Width = 47
Column7.ControlSource = ""
Column7.FontSize = 8
Column7.Name = "Documento"
Column7.Visible = .T.
Column7.Width = 79
Column8.ControlSource = ""
Column8.FontSize = 8
Column8.Name = "Detalle"
Column8.Visible = .T.
Column8.Width = 234
ColumnCount = 8
FontSize = 8
GridLines = 0
Height = 164
Left = 2
Name = "grdVdetalle"
Panel = 1
RecordMark = .T.
RecordSourceType = 1
RowHeight = 22
ScrollBars = 3
TabIndex = 10
Top = 108
Width = 600
campo = IdEmpresa, Ejercicio, idAsiento
cfieldtosum = debe,haber
editable = .T.
valor = oApp.Empresa, oApp.Ejercicio, vxAsientos2.idAsiento
[END PROPERTIES]
[START METHODS]
PROCEDURE Refresh
DODEFAULT()
THIS.DESCRIPCION.ENABLED = .F.
*THIS.SUMCOLUMN()
THIS.PARENT.TOTALES.REFRESH()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJTD
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Centro
[START PROPERTIES]
Caption = "Centro Costo"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0X80KJVIT
[CLASS] cbocentro
[CLASSLOC] futura.vcx
[BASECLASS] combobox
[OBJNAME] Cbocentro1
[PARENT] asiento.grdVdetalle.Centro
[START PROPERTIES]
ControlSource = ""
Left = 17
Name = "Cbocentro1"
Style = 0
Top = 21
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJTW
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Concepto
[START PROPERTIES]
Caption = "Concepto"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0X80KJVJ3
[CLASS] cboconcepto
[CLASSLOC] futura.vcx
[BASECLASS] combobox
[OBJNAME] Cboconcepto1
[PARENT] asiento.grdVdetalle.Concepto
[START PROPERTIES]
ControlSource = ""
Left = 27
Name = "Cboconcepto1"
Style = 0
Top = 31
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJR6
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Cuenta
[START PROPERTIES]
Caption = "Cuenta"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJRC
[CLASS] campo_clave
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] Campo_clave1
[PARENT] asiento.grdVdetalle.Cuenta
[START PROPERTIES]
BackStyle = 0
BorderStyle = 0
Left = 359
Name = "Campo_clave1"
SelectedBackColor = 247,223,187
SelectedForeColor = 0,64,128
Top = 46
Visible = .T.
condicion_en_edicion = Vigente=1
condicionextra = asentable=1 and IdEmpresa=?oApp.Empresa and Ejercicio = ?oApp.Ejercicio
datoayuda = Cuentas Contables
indice = cuenta
indice1 = abreviatura
mensajeerror = El codigo de la cuenta no es válido o no es asentable.
objeto = this.parent.parent.descripcion.text1
objeto2 = This.Parent.Parent.Parent.totales.SaldoCuenta
origen = R
resulrepe = .T.
retorna = descripción
retorna2 = cuenta
tabla = cn_cuentas
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
DODEFAULT()
WAIT CLEAR
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJS5
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Debe
[START PROPERTIES]
Caption = "Debe"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJSA
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] Text1
[PARENT] asiento.grdVdetalle.Debe
[START PROPERTIES]
BackColor = 255,255,255
BorderStyle = 0
FontSize = 8
ForeColor = 0,0,0
InputMask = "999,999,999,999"
Margin = 0
Name = "Text1"
SelectedBackColor = 247,223,187
SelectedForeColor = 0,64,128
Visible = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
THIS.TAG = STR(THIS.VALUE)
ENDPROC
PROCEDURE LostFocus
IF THIS.TAG<>STR(THIS.VALUE)
THIS.PARENT.PARENT.PARENT.TOTALES.REFRESH()
ENDIF
ENDPROC
PROCEDURE When
RETURN EVALUATE('vxDetalle'+THIS.PARENT.PARENT.PARENT.SUFIJOTABLA+'.haber ')=0
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJRR
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Descripcion
[START PROPERTIES]
Caption = "Descripción"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJRX
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] Text1
[PARENT] asiento.grdVdetalle.Descripcion
[START PROPERTIES]
BackColor = 228,228,228
BorderStyle = 0
DisabledBackColor = 228,228,228
Enabled = .F.
FontSize = 8
ForeColor = 0,0,0
Margin = 0
Name = "Text1"
SelectedBackColor = 247,223,187
SelectedForeColor = 0,64,128
Visible = .T.
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJUP
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Detalle
[START PROPERTIES]
Caption = "Detalle"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJUV
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] Text1
[PARENT] asiento.grdVdetalle.Detalle
[START PROPERTIES]
BackColor = 255,255,255
BorderStyle = 0
FontSize = 8
ForeColor = 0,0,0
Margin = 0
Name = "Text1"
SelectedBackColor = 247,223,187
SelectedForeColor = 0,64,128
Visible = .T.
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJUC
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Documento
[START PROPERTIES]
Caption = "Documento"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJUI
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] Text1
[PARENT] asiento.grdVdetalle.Documento
[START PROPERTIES]
BackColor = 255,255,255
BorderStyle = 0
ControlSource = "vdetalle.detalle"
FontSize = 8
ForeColor = 0,0,0
Margin = 0
Name = "Text1"
SelectedBackColor = 247,223,187
SelectedForeColor = 0,64,128
Visible = .T.
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJSP
[CLASS] header
[BASECLASS] header
[OBJNAME] Header1
[PARENT] asiento.grdVdetalle.Haber
[START PROPERTIES]
Caption = "Haber"
FontSize = 8
Name = "Header1"
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0MEJSY
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] Text1
[PARENT] asiento.grdVdetalle.Haber
[START PROPERTIES]
BackColor = 255,255,255
BorderStyle = 0
FontSize = 8
ForeColor = 0,0,0
InputMask = "999,999,999,999"
Margin = 0
Name = "Text1"
SelectedBackColor = 247,223,187
SelectedForeColor = 0,64,128
Visible = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
THIS.TAG = STR(THIS.VALUE)
ENDPROC
PROCEDURE LostFocus
IF THIS.TAG<>STR(THIS.VALUE)
THIS.PARENT.PARENT.PARENT.TOTALES.REFRESH()
ENDIF
ENDPROC
PROCEDURE When
RETURN EVALUATE('vxDetalle'+THIS.PARENT.PARENT.PARENT.SUFIJOTABLA+'.Debe ')=0
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1QL10N90J
[CLASS] campo_clave
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] IdDescripcion
[PARENT] asiento
[START PROPERTIES]
Height = 22
Left = 76
Name = "IdDescripcion"
OLEDropEffects = 0
TabIndex = 4
Top = 72
Width = 51
actualizar = .F.
condicionextra = IdEmpresa=?oApp.Empresa
datoayuda = Descripcion Asiento
indice = IdDescripcion
mensajeerror = No se encuentra la Descripcion.
objeto = this.parent.txtDescripción
origen = R
retorna = Descripcion
tabla = cn_Descripciones
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSWY
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] lblDescripción
[PARENT] asiento
[START PROPERTIES]
Caption = "Descripción"
Height = 16
Left = 0
Name = "lblDescripción"
TabIndex = 8
Top = 72
Width = 67
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSWR
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] lblFecha
[PARENT] asiento
[START PROPERTIES]
Caption = "Fecha"
Height = 16
Left = 0
Name = "lblFecha"
TabIndex = 4
Top = 24
Width = 34
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSWK
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] lblNúmero
[PARENT] asiento
[START PROPERTIES]
Caption = "Número"
Height = 16
Left = 0
Name = "lblNúmero"
TabIndex = 1
Top = 0
Width = 46
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSWC
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] lblSucursal
[PARENT] asiento
[START PROPERTIES]
Caption = "Sucursal"
Height = 16
Left = 0
Name = "lblSucursal"
TabIndex = 6
Top = 48
Width = 50
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWT2L
[CLASS] container
[BASECLASS] container
[OBJNAME] totales
[PARENT] asiento
[START PROPERTIES]
Height = 34
Left = 2
Name = "totales"
SpecialEffect = 1
TabIndex = 12
Top = 289
Width = 600
ZOrderSet = 22
[END PROPERTIES]
[START METHODS]
PROCEDURE Refresh
THIS.PARENT.GRDVDETALLE.SUMCOLUMN()
THIS.TOTALDEBE.VALUE = THIS.PARENT.GRDVDETALLE.TOTALES(1)
THIS.TOTALHABER.VALUE = THIS.PARENT.GRDVDETALLE.TOTALES(2)
THIS.SALDO.VALUE = THIS.TOTALDEBE.VALUE-THIS.TOTALHABER.VALUE
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWT3G
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] Saldo
[PARENT] asiento.totales
[START PROPERTIES]
Alignment = 3
BackColor = 0,128,255
Comment = ""
ControlSource = ""
DisabledForeColor = 0,128,0
Enabled = .F.
FontBold = .T.
Height = 24
InputMask = "999,999,999,999"
Left = 430
Name = "Saldo"
TabIndex = 4
Top = 5
Value = 0
Width = 89
[END PROPERTIES]
[START METHODS]
PROCEDURE Refresh
DO CASE
CASE THIS.VALUE>0
THIS.DISABLEDFORECOLOR = RGB(0, 128, 0)
CASE THIS.VALUE<0
THIS.DISABLEDFORECOLOR = RGB(255, 0, 0)
CASE THIS.VALUE=0
THIS.DISABLEDFORECOLOR = RGB(0, 0, 0)
ENDCASE
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWT43
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] SaldoCuenta
[PARENT] asiento.totales
[START PROPERTIES]
BackColor = 192,192,192
ControlSource = ""
DisabledForeColor = 0,0,0
Enabled = .F.
FontBold = .F.
Height = 24
InputMask = "999,999,999,999"
Left = 72
Name = "SaldoCuenta"
TabIndex = 1
Top = 5
Visible = .F.
Width = 94
[END PROPERTIES]
[START METHODS]
PROCEDURE ProgrammaticChange
LOCAL CUENTA, SALDO
IF  .NOT. EMPTY(THIS.VALUE)
M.CUENTA = THIS.VALUE
TEXT TO CMDSQL TEXTMERGE NOSHOW
	     Exec cn_saldoCuentas ?<<"vxDetalle" + RTRIM(This.parent.parent.sufijotabla)>>.Cuenta, ?oApp.Empresa, ?oApp.Ejercicio
ENDTEXT
IF SQL(CMDSQL, 'saldo')>0
M.SALDO = SALDO.DEBE-SALDO.HABER
ELSE
M.SALDO = 0
ENDIF
M.SALDO = TRANSFORM(M.SALDO, '999,999,999,999')
WAIT WINDOW NOWAIT "Saldo actual : "+M.SALDO
ENDIF
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWT2W
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] TotalDebe
[PARENT] asiento.totales
[START PROPERTIES]
BackColor = 192,192,192
ControlSource = ""
DisabledForeColor = 0,0,0
Enabled = .F.
FontBold = .T.
Height = 24
InputMask = "999,999,999,999"
Left = 245
Name = "TotalDebe"
TabIndex = 1
Top = 5
Width = 94
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWT35
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] TotalHaber
[PARENT] asiento.totales
[START PROPERTIES]
BackColor = 192,192,192
ControlSource = ""
DisabledForeColor = 0,0,0
Enabled = .F.
FontBold = .T.
Height = 24
InputMask = "999,999,999,999"
Left = 340
Name = "TotalHaber"
TabIndex = 2
Top = 5
Width = 89
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWT3T
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] Tslabel7
[PARENT] asiento.totales
[START PROPERTIES]
BackColor = 0,0,0
Caption = "Totales"
Height = 12
Left = 130
Name = "Tslabel7"
TabIndex = 8
Top = 5
Width = 96
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1U60UWYY3
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] Tscommandbutton1
[PARENT] asiento
[START PROPERTIES]
Caption = "E\<liminar"
FontBold = .F.
Height = 28
Left = 551
Name = "Tscommandbutton1"
SpecialEffect = 2
ToolTipText = "Elimina el asiento actual."
Top = 9
Width = 48
editable = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
LOCAL M.IDASIENTO
M.IDASIENTO = 0
IF  .NOT. EMPTY(NVL(EVALUATE(THISFORM.ASIENTORECORDSOURCE), 0))
M.IDASIENTO = STR(EVALUATE(THISFORM.ASIENTORECORDSOURCE), 10, 0)
ENDIF
IF  .NOT. EMPTY(M.IDASIENTO)
IF MESSAGEBOX('Esta seguro de que desea eliminar el asiento de esta operación?', 0292, "Futura Software")=6
IF THISFORM.RUNSQL("Delete cn_Asientos where idAsiento = "+M.IDASIENTO, 'cn_Borrar')>0
THIS.PARENT.BIFURCAR.CLICK()
ENDIF
ENDIF
ENDIF
ENDPROC
PROCEDURE Refresh
this.Enabled=!thisform.editmode

ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _2HQ122C20
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] Tscommandbutton2
[PARENT] asiento
[START PROPERTIES]
AutoSize = .F.
Caption = "Crear desde una Plantilla"
Enabled = .T.
FontBold = .F.
FontSize = 8
Height = 27
Left = 326
Name = "Tscommandbutton2"
TabIndex = 14
Top = 9
Width = 128
editable = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
Local M.IDPLANTILLA, M.CRETORNO, M.IMPORTE, M.VALOR
Do Form "cn_PlantillaAsiento" To M.CRETORNO
If  .Not. Empty(M.CRETORNO)
	m.IDPLANTILLA = Substr(M.CRETORNO, 1, At(",", M.CRETORNO)-1)
	m.IMPORTE = Val(Substr(M.CRETORNO, At(",", M.CRETORNO)+1))
	CMDSQL = "Select a.*,b.Descripción From cn_planDet a inner join cn_Cuentas b on a.Cuenta = b.Cuenta "+" where b.IdEmpresa = ?oApp.Empresa and b.Ejercicio = ?oApp.Ejercicio and IdPlantilla="+M.IDPLANTILLA
	If Sql(CMDSQL, "cPlantilla")>0
		If Reccount("cPlantilla")>0
			This.SetFocus()
			Select CPLANTILLA
			Scan
				If CPLANTILLA.TIPOAPLICACION="P"
					m.VALOR = IMPORTE*CPLANTILLA.VALOR/100
				Else
					If Empty(Nvl(CPLANTILLA.VALOR, 0))
						m.VALOR = M.IMPORTE
					Else
						m.VALOR = CPLANTILLA.VALOR
					Endif
				Endif
				Select ("vxDetalle"+RTRIM(THIS.parent.SUFIJOTABLA))
				Thisform.AGREGARITEM()
				If CPLANTILLA.TIPOCUENTA='D'
					Replace CUENTA With CPLANTILLA.CUENTA, DESCRIPCIÓN With CPLANTILLA.DESCRIPCIÓN, DEBE With M.VALOR, Centro WITH NVL(CPLANTILLA.Centro,'') In ("vxDetalle"+RTRIM(THIS.parent.SUFIJOTABLA))
				Else
					Replace CUENTA With CPLANTILLA.CUENTA, DESCRIPCIÓN With CPLANTILLA.DESCRIPCIÓN, HABER With M.VALOR,Centro WITH NVL(CPLANTILLA.Centro,'') In ("vxDetalle"+RTRIM(THIS.parent.SUFIJOTABLA))
				Endif
				Select CPLANTILLA
			Endscan
		Endif
	Endif
Endif
ENDPROC
PROCEDURE Refresh
DODEFAULT()
*THIS.ENABLED = THISFORM.ESNUEVO
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0X80KJVKI
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] Tslabel2
[PARENT] asiento
[START PROPERTIES]
Caption = "Cotizacion Moneda Extranjera"
Height = 16
Left = 330
Name = "Tslabel2"
TabIndex = 8
Top = 50
Width = 165
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSVX
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] txtDescripción
[PARENT] asiento
[START PROPERTIES]
Comment = ""
Height = 22
Left = 128
Name = "txtDescripción"
TabIndex = 9
Top = 72
Width = 473
editable = .T.
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0X80KJVK7
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] txtFecha
[PARENT] asiento
[START PROPERTIES]
Comment = ""
Height = 22
Left = 76
Name = "txtFecha"
TabIndex = 5
Top = 23
Width = 99
editable = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE LostFocus
IF THIS.TAG<>DTOC(THIS.VALUE)
THIS.PARENT.COTIZA.VALUE = COTIZACION('U$S', 'V', THIS.VALUE)
ENDIF
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSW4
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] txtNro_asiento
[PARENT] asiento
[START PROPERTIES]
Comment = ""
Enabled = .F.
Height = 22
Left = 126
Name = "txtNro_asiento"
TabIndex = 3
Top = 0
Width = 49
editable = .F.
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0DN0JWSVH
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] txtNúmero
[PARENT] asiento
[START PROPERTIES]
Comment = ""
ControlSource = ""
Enabled = .F.
Height = 22
Left = 76
Name = "txtNúmero"
TabIndex = 2
Top = 0
Width = 49
datoayuda = Asientos
editable = .F.
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
DODEFAULT()
IF EMPTY(THIS.CONTROLSOURCE)
THIS.CONTROLSOURCE = THIS.PARENT.CONTROLSOURCE
ENDIF
ENDPROC
PROCEDURE LostFocus
IF  .NOT. EMPTY(THIS.VALUE)
THIS.ENABLED = .F.
THIS.PARENT.REFRESH()
ENDIF
IF EMPTY(THIS.CONTROLSOURCE)
THIS.CONTROLSOURCE = THIS.COMMENT
ENDIF
ENDPROC
PROCEDURE Valid
IF  .NOT. EMPTY(THIS.VALUE)
IF THISFORM.RUNSQL("Select IdAsiento from cn_Asientos where IdEmpresa=?oApp.Empresa and Ejercicio = ?oApp.Ejercicio and Número = "+STR(THIS.VALUE), 'cAsiento')>0
IF RECCOUNT('cAsiento')>0
REPLACE (THIS.PARENT.CONTROLSOURCE) WITH CASIENTO.IDASIENTO IN (THISFORM.TABLA1)
ELSE
MESSAGEBOX('No se encuentra el Asiento.', 64, "Futura Software")
RETURN 0
ENDIF
ENDIF
ENDIF
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] asiento
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
Arial, 1, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RVY0P45R4
[CLASS] form
[BASECLASS] form
[OBJNAME] busqueda
[START PROPERTIES]
AutoCenter = .T.
Caption = "Búsqueda"
DoCreate = .T.
Height = 128
LockScreen = .F.
MaxButton = .F.
MinButton = .F.
Name = "busqueda"
Width = 399
WindowType = 1
archivo = cta_cte
campos = descripcion,idcta_cte
devuelve = idcta_cte
orden = descripcion
[END PROPERTIES]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
6[END RESERVED2]
[START RESERVED3]
archivo Nombre del archivo para origen de los datos
campos Lista de campos a seleccionar
devuelve Nombre del campo a retornar
orden Nombre de campo por el cual se va a ordenar
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Formulario de busqueda para ayuda.[END RESERVED7]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RW50OPOA4
[CLASS] tsifcombo
[CLASSLOC] tsbase.vcx
[BASECLASS] combobox
[OBJNAME] buscar
[PARENT] busqueda
[START PROPERTIES]
Height = 21
Left = 24
Name = "buscar"
RowSource = ""
Top = 24
Width = 360
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RVY0P45UV
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] Command1
[PARENT] busqueda
[START PROPERTIES]
Caption = "\<Aceptar"
Default = .T.
FontBold = .T.
FontSize = 8
Height = 27
Left = 192
Name = "Command1"
Top = 84
Width = 72
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RVY0P45VO
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] Command2
[PARENT] busqueda
[START PROPERTIES]
Cancel = .T.
Caption = "\<Cancelar"
FontBold = .T.
FontSize = 8
Height = 27
Left = 276
Name = "Command2"
Top = 84
Width = 72
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RVY0P45UB
[CLASS] label
[BASECLASS] label
[OBJNAME] Label1
[PARENT] busqueda
[START PROPERTIES]
AutoSize = .F.
Caption = "1  \<Escriba las primeras letras de la palabra que está buscando."
FontSize = 8
Height = 17
Left = 12
Name = "Label1"
Top = 12
Width = 375
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RVY0P45WI
[CLASS] label
[BASECLASS] label
[OBJNAME] Label2
[PARENT] busqueda
[START PROPERTIES]
AutoSize = .F.
Caption = '2  \<Haga click en "Aceptar" cuando termine.'
FontSize = 8
Height = 17
Left = 12
Name = "Label2"
Top = 56
Width = 375
[END PROPERTIES]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] busqueda
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 12, 3, 0
Arial, 0, 9, 5, 15, 12, 13, 3, 0
Arial, 1, 8, 5, 14, 11, 12, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _S5W0P4EZ6
[CLASS] container
[BASECLASS] container
[OBJNAME] caja
[START PROPERTIES]
BackStyle = 1
Height = 37
Name = "caja"
SpecialEffect = 0
Width = 269
cambio = .F.
nombvar = 
nombvar2 = 
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
IF THIS.REQUERY
IF THIS.LISTA.VISIBLE
THIS.LISTA.REQUERY()
ENDIF
ENDIF
ENDPROC
PROCEDURE LostFocus
VARIABLE = THIS.NOMBVAR
VARIABLE2 = THIS.NOMBVAR2
IF THIS.TEXTO.VISIBLE
IF TYPE('THIS.texto.VALUE')='C'
&VARIABLE=ALLTRIM(THIS.TEXTO.VALUE)
ELSE
&VARIABLE=THIS.TEXTO.VALUE
ENDIF
IF THIS.TEXTO2.VISIBLE
IF TYPE('THIS.texto2.VALUE')='C'
&VARIABLE2=ALLTRIM(THIS.TEXTO2.VALUE)
ELSE
&VARIABLE2=THIS.TEXTO2.VALUE
ENDIF
ENDIF
ELSE
IF TYPE('THIS.Lista.VALUE')='C'
&VARIABLE=ALLTRIM(THIS.LISTA.VALUE)
ELSE
&VARIABLE=THIS.LISTA.VALUE
ENDIF
ENDIF
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
5[END RESERVED2]
[START RESERVED3]
cambio
nombvar Nombre de la variable asignada.
nombvar2 Si se utiliza contiene el nombre de la segunda variable asignada.
requery Indica si se ejecuta el evento requery del control cuando recibe el enfoque.
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _04K0RAFTJ
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] etiq
[PARENT] caja
[START PROPERTIES]
Alignment = 0
AutoSize = .F.
Caption = "Etiqueta"
FontBold = .F.
Height = 13
Left = 6
Name = "etiq"
Top = 0
Width = 259
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _04K0RAFUB
[CLASS] tscombobox
[CLASSLOC] tsbase.vcx
[BASECLASS] combobox
[OBJNAME] Lista
[PARENT] caja
[START PROPERTIES]
BoundColumn = 2
ColumnCount = 2
ColumnLines = .F.
ColumnWidths = "250,0"
FontSize = 8
Height = 20
Left = 3
Name = "Lista"
Style = 2
Top = 14
Visible = .F.
Width = 264
editable = .F.
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] texto
[PARENT] caja
[START PROPERTIES]
Alignment = 0
BackStyle = 1
Height = 20
Left = 3
Name = "texto"
Style = 0
Top = 14
Width = 262
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0IC0LNMGO
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] texto2
[PARENT] caja
[START PROPERTIES]
Alignment = 0
BackStyle = 1
Height = 20
Left = 150
Name = "texto2"
Style = 0
Top = 14
Visible = .F.
Width = 116
[END PROPERTIES]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] caja
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1O90YHALB
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] campo_busca
[START PROPERTIES]
BorderColor = 250,170,5
Name = "campo_busca"
SpecialEffect = 1
Style = 0
Themes = .F.
condicionbusqueda = 
controlsourceoriginal = 
[END PROPERTIES]
[START PROTECTED]
controlsourceoriginal
[END PROTECTED]
[START METHODS]
PROCEDURE GotFocus
DODEFAULT()
IF  .NOT. EMPTY(THIS.VAL_POS)
THIS.VALUE = THIS.VAL_POS
THIS.VAL_POS = ''
ENDIF
ENDPROC
PROCEDURE Init
DODEFAULT()
IF  .NOT. EMPTY(THIS.CONTROLSOURCE)
THIS.CONTROLSOURCEORIGINAL = THIS.CONTROLSOURCE
THIS.CONTROLSOURCE = ''
ENDIF
ENDPROC
PROCEDURE LostFocus
IF THISFORM.EDITMODE .OR. EMPTY(THIS.VALUE)
RETURN
ENDIF
LOCAL CVALUE
IF LASTKEY()=-4
THIS.COMMENT = 'A'
ENDIF
DO CASE
CASE TYPE('this.value')="C"
CVALUE = IIF(ISNULL(THIS.VALUE), '', THIS.VALUE)
CASE TYPE('this.value')="N" .OR. TYPE('this.value')="Y"
CVALUE = STR(IIF(ISNULL(THIS.VALUE), 0, THIS.VALUE))
CASE TYPE('this.value')="D"
CVALUE = DTOC(IIF(ISNULL(THIS.VALUE), {}, THIS.VALUE))
ENDCASE
IF THIS.TAG<>CVALUE .AND. EMPTY(THIS.COMMENT)
LOCAL FRM AS FORM, LCCAMPO
SET CLASSLIB TO buscar ADDITIVE
LCCAMPO = SUBSTR(THIS.CONTROLSOURCEORIGINAL, AT('.', THIS.CONTROLSOURCEORIGINAL)+1)
FRM = CREATEOBJECT('SearchForm', THISFORM.TABLACONSULTA, LCCAMPO, THIS.VALUE)
CSQL = FRM.FULLSQL
FRM.RELEASE()
THISFORM.CONSULTAR(CSQL)
THISFORM.REFRESHFORM()
IF  .NOT. EMPTY(THISFORM.CTOOLBAR) .AND. TYPE("oApp.oToolbar")=="O"
OAPP.OTOOLBAR.REFRESH()
ENDIF
ENDIF
ENDPROC
PROCEDURE Refresh
IF THISFORM.EDITMODE
THIS.CONTROLSOURCE = THIS.CONTROLSOURCEORIGINAL
ELSE
THIS.CONTROLSOURCE = ''
ENDIF
IF  .NOT. EMPTY(THIS.CONTROLSOURCEORIGINAL)
THIS.VALUE = EVALUATE(THIS.CONTROLSOURCEORIGINAL)
ENDIF
DODEFAULT()
THIS.ENABLED = .T.
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
busquedaavanzada
condicionbusqueda Condicion adicional que debe cumplir la busqueda.
controlsourceoriginal
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] campo_busca
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RVD0OP3TO
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] campo_clave
[START PROPERTIES]
BackStyle = 1
BorderStyle = 1
ControlSource = ""
Format = ""
Height = 23
Name = "campo_clave"
SelectOnEntry = .T.
SelectedBackColor = 0,128,255
SelectedForeColor = 255,255,255
TabIndex = 1
Width = 100
actualizar = .T.
condicion_en_edicion = 
condicionextra = 
copiarcampos = 
indice = 
indice1 = 
inputmaskdinamico = 
mensajeerror = No se encuentra el valor.
objeto = 
objeto2 = 
objeto3 = 
objeto4 = 
objeto5 = 
origen = L
pegarcampos = 
prefijo = *
retorna = 
retorna2 = 
retorna3 = 
retorna4 = 
retorna5 = 
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
Do Case
Case Type('this.value')="C"
	This.Tag = Iif(Isnull(This.Value), '', This.Value)
Case Type('this.value')="N" .Or. Type('this.value')="Y"
	This.Tag = Str(Iif(Isnull(This.Value), 0, This.Value))
Case Type('this.value')="D"
	This.Tag = Dtoc(Iif(Isnull(This.Value), {}, This.Value))
Endcase
ENDPROC
PROCEDURE Init
DODEFAULT()
IF THIS.PARENT.BASECLASS='Column'
THIS.BORDERSTYLE = 0
THIS.SPECIALEFFECT = 1
ENDIF
ENDPROC
PROCEDURE KeyPress
LPARAMETERS NKEYCODE, NSHIFTALTCTRL
TSTEXTBOX::KEYPRESS()
ENDPROC
PROCEDURE LostFocus

if EMPTY(THIS.VALUE) AND !EMPTY(this.Objeto) AND THIS.ACTUALIZAR
        cObjeto = this.Objeto
		&cObjeto..value=''
		&cObjeto..refresh()

		IF !EMPTY(this.objeto2)
	        cObjeto = this.Objeto2
			&cObjeto..value=''
			&cObjeto..refresh()
		ENDIF
		IF !EMPTY(this.objeto3)
	        cObjeto = this.Objeto3
			&cObjeto..value=''
			&cObjeto..refresh()
		ENDIF
	
	***************  08/junio/06
	IF !EMPTY(this.objeto4)
	        cObjeto = this.Objeto4
			&cObjeto..value=''
			&cObjeto..refresh()
		ENDIF	

	**************

endif	



RETURN

*******Codigo Anterior****

This.CAMBIO = .F.
If Empty(This.Value) .And.  .Not. Empty(This.OBJETO) .And. This.ACTUALIZAR
	COBJETO = This.OBJETO
	&COBJETO..Value=''
	&COBJETO..Refresh()
Endif
ENDPROC
PROCEDURE Refresh
dodefault()
		

if this.actualizar AND !THISFORM.EDITMODE
	this.valid()
endif	

if (EMPTY(THIS.VALUE) OR ISNULL(this.Value)) AND !EMPTY(this.Objeto) AND THIS.ACTUALIZAR
        cObjeto = this.Objeto
		&cObjeto..value=''
		&cObjeto..refresh()

		IF !EMPTY(this.objeto2)
	        cObjeto = this.Objeto2
			&cObjeto..value=''
			&cObjeto..refresh()
		ENDIF
		IF !EMPTY(this.objeto3)
	        cObjeto = this.Objeto3
			&cObjeto..value=''
			&cObjeto..refresh()
		ENDIF
			
		**** 08/junio/06 ***
		IF !EMPTY(this.objeto4)
	        cObjeto = this.Objeto4
			&cObjeto..value=''
			&cObjeto..refresh()
		ENDIF
		*********************	
		
endif	
ENDPROC
PROCEDURE Valid
local ctabla,cindice,;
	cvalor,cretorna,;
	OldAlias,xAux,;
	cCondicion, cCodigo,;
	lcTag, lcSQL,lnHndConn, LCALIAS, LCPEGARCAMPOS

**07-06-2008 
**Tener en cuenta cuand no tiene controlsource o cuando no es una tabla su controlsource


***Para que no pueda usar la barra de herramienta cuando el valid retorna .f.
***11/11/2003	11:06		VG
thisform.valido=.t.
thisform.mensajeNoValido = ''	
	
*(1) Modificado para que pueda validar solamente sin traer ningun valor	18/10/2001 18:14 (VG)
**DEBUGOUT IIF(EMPTY(this.Comment),"Comment Vacio","Comment " + this.Comment)
LOCAL cCampo
cCampo = this.ControlSource


IF !EMPTY(cCampo) AND USED(SUBSTR(cCampo ,AT(".",cCampo )+1)) AND ALLTRIM(STR(GETFLDSTATE(SUBSTR(cCampo ,AT(".",cCampo )+1),SUBSTR(cCampo ,1,AT(".",cCampo )-1)))) $ "13" ;
	AND NOT THIS.ACTualizar
	RETURN 1
ENDIF

DEBUGOUT THIS.Tag
DEBUGOUT THIS.Text
IF ALLTRIM(THIS.Tag) = ALLTRIM(THIS.Text)
	RETURN 1
ENDIF




IF THIS.validar = .F. && Para obligarle a validar
	IF TYPE('this.value')="C"
**		IF (EMPTY(THIS.VALUE) OR THIS.TAG=THIS.VALUE OR ISNULL(THIS.VALUE))  **** VG 09-11-2004 para que valide siempre
		IF (EMPTY(THIS.VALUE) OR ISNULL(THIS.VALUE)) 
			IF EMPTY(THIS.VALUE) OR ISNULL(THIS.VALUE)
			*	cObjeto = THIS.Objeto
			*	&cObjeto..VALUE=''
			*	&cObjeto..REFRESH()
			ENDIF
			RETURN 1
		ENDIF
	ELSE
**		IF EMPTY(THIS.VALUE) OR THIS.TAG=STR(THIS.VALUE) OR ISNULL(THIS.VALUE)
		IF EMPTY(THIS.VALUE) OR ISNULL(THIS.VALUE)
			IF EMPTY(THIS.VALUE) OR ISNULL(THIS.VALUE)
			*	cObjeto = THIS.Objeto
			*	&cObjeto..VALUE=''
			*	&cObjeto..REFRESH()
			ENDIF
			RETURN 1
		ENDIF
	ENDIF
ENDIF
THIS.validar = .F.

*go recno()


if !empty(this.indice1) and left(this.value,1)=this.prefijo && Utilizo el prefijo

	cindice=this.indice1
	cvalor=substr(this.value,2)

else

	cindice=this.indice
	cvalor=this.value

endif
	
ctabla=this.tabla
cCodigo = this.indice


if !empty(this.retorna)				&& (1)
	cretorna=this.retorna
else
	cRetorna = "space(1)"
endif		

cObjeto=this.objeto

cretorna2=this.retorna2
cObjeto2=this.objeto2

cretorna3=this.retorna3
cObjeto3=this.objeto3

***** 08/junio/06 ******
cretorna4=this.retorna4
cObjeto4=this.objeto4
************************


OldAlias=Alias()

*!*	if !empty(this.CondicionExtra)
*!*	*	cCondicion=this.CondicionExtra+this.CodicionValor
cCondicion=this.CondicionExtra
*!*	else
*!*		cCondicion='.t.'
*!*	endif		


*** Modificado para que pueda ejecutar en Servidores Remotos	(VG) 03/12/2002 08:48
	lcSQL = 'Select '+;
		cCodigo +' as codigo,'+;
		cretorna +' as resultado '


if ! empty(this.retorna2)
	lcSQL = lcSQL + ','+ cretorna2 +' as resultado2 '
endif

if ! empty(this.retorna3)
	lcSQL = lcSQL + ','+ cretorna3 +' as resultado3 '
endif

******* 08/junio/06***
if ! empty(this.retorna4)
	lcSQL = lcSQL + ','+ cretorna4 +' as resultado4 '
ENDIF
**********************
IF  .NOT. EMPTY(THIS.RETORNA5)
	LCSQL = LCSQL+','+CRETORNA5+' as resultado5 '
ENDIF
IF  .NOT. EMPTY(THIS.COPIARCAMPOS)
	LCSQL = LCSQL+','+THIS.COPIARCAMPOS
ENDIF

IF THISFORM.EDITMODE
	IF EMPTY(CCONDICION)
		CCONDICION = THIS.CONDICION_EN_EDICION
	ELSE
		IF  .NOT. EMPTY(THIS.CONDICION_EN_EDICION)
			CCONDICION = CCONDICION+" AND "+THIS.CONDICION_EN_EDICION
		ENDIF
	ENDIF
ENDIF



lcSQL = lcSQL +	' from ' + cTabla +;
		' where ' + cindice +' = ?cvalor '++IIF(EMPTY(CCONDICION), '', ' and '+CCONDICION)

*!*		select &cCodigo as codigo, &cretorna as resultado, &cRetorna2 as resultado2 ;
*!*		from &cTabla;
*!*		where &cindice=cvalor and &cCondicion;
*!*		into cursor xclave
*endif


*** Indica si es un Origen Remoto
IF this.origen='R'

	lnHndConn = SQLCONNECT(oApp.Sistema)
	IF lnHndConn > 0
		IF SQLEXEC(lnHndConn,lcSQL,'xClave')<0
			thisform.Error()
		ENDIF
		SQLMORERESULTS(lnHndConn)
		SQLCANCEL(lnHndConn)
		SQLDISCONNECT(lnHndConn)
	ENDIF
	
ELSE
	lcSQL = lcSQL + ' into cursor xClave'
	&lcSQL
ENDIF

	


if not empty(oldalias)
	select &OldAlias
endif

if RECCOUNT('xClave')>0

	if !empty(this.indice1) AND left(this.value,1)=this.prefijo && Utilizo el prefijo
		this.value = xclave.codigo
	endif
		
	if Empty(this.retorna)			&& (1)
		return 1
	endif	
	
	&cObjeto..value=xclave.resultado

	
	**Para no actualizar el 2º Objeto Si tiene ControlSource y no se modificó el campo Clave (VG 14/05/2002 16:25)
	** Ojo: funciona solamente para caracter y numerico

	if TYPE('THIS.VALUE') = 'C'
		lcTag = this.value
	else
		lcTag = str(this.value)
	endif

	DEBUGOUT "This.value en Validar:" + lctag
	DEBUGOUT "this.tag en Validar:" + this.Tag
				
	

	** Para no cargar objetos que tengan ControlSource si no está editando
	if !empty(this.objeto2)	;
		and (empty(&cObjeto2..ControlSource) or (thisform.editmode and lcTag <> this.tag))
		&cObjeto2..value=xclave.resultado2
	    &cObjeto2..refresh()			
	endif	

	if !empty(this.objeto3)	;
		and (empty(&cObjeto3..ControlSource) or (thisform.editmode and lcTag <> this.tag))
		&cObjeto3..value=xclave.resultado3
	    &cObjeto3..refresh()			
	endif	
	
	******	08/junio/06 ***
	if !empty(this.objeto4)	;
		and (empty(&cObjeto4..ControlSource) or (thisform.editmode and lcTag <> this.tag))
		&cObjeto4..value=xclave.resultado4
	    &cObjeto4..refresh()			
	endif	
	***********************
	IF  .NOT. EMPTY(THIS.OBJETO5)
		IF  (THISFORM.EDITMODE) AND !EMPTY(THIS.RETORNA5)   AND (&COBJETO5..VALUE <> XCLAVE.RESULTADO5 ) OR THIS.RESULREPE=.T.
			&COBJETO5..VALUE=XCLAVE.RESULTADO5
			&COBJETO5..REFRESH()
		ENDIF
	ENDIF
	IF THISFORM.EDITMODE .AND.  .NOT. EMPTY(THIS.PEGARCAMPOS)
		LCPEGARCAMPOS = THIS.PEGARCAMPOS
		SELECT XCLAVE
		SCATTER MEMVAR MEMO FIELDS &LCPEGARCAMPOS
		LCALIAS = SUBSTR(THIS.CONTROLSOURCE, 1, AT(".", THIS.CONTROLSOURCE)-1)
		IF  .NOT. EMPTY(LCALIAS)
			SELECT (LCALIAS)
		ENDIF
		GATHER MEMVAR MEMO FIELDS &LCPEGARCAMPOS
	ENDIF
	THIS.RETAYUDA = '0'	
	
*	go recno(ctabla) in &ctabla
	&cObjeto..refresh()

	if used('xclave')
		use in xclave
	endif
	return 1
else
	if used('xclave')
		use in xclave
	endif
	Messagebox(this.mensajeError,64,TASTRADE_LOC)
	THIS.NOVALIDO_EVENT()
	***Para que no pueda usar la barra de herramienta cuando el valid retorna .f.
	***11/11/2003	11:06		VG
	thisform.valido=.f.
	thisform.mensajeNoValido=this.mensajeerror
	return 0
endif		


********************
RETURN
********************
* Codigo Anterior
********************

LOCAL CTABLA, CINDICE, CVALOR, CRETORNA, OLDALIAS, XAUX, CCONDICION, CCODIGO, LCTAG, LCSQL, LNHNDCONN, LCALIAS, LCPEGARCAMPOS
THISFORM.VALIDO = .T.
THISFORM.MENSAJENOVALIDO = ''

*this.actualizar=.t.

IF  (.NOT. THIS.CAMBIO) .AND. THISFORM.EDITMODE
	this.actualizar=.f.
	RETURN 1
ENDIF

DEBUGOUT this.ControlSource
IF THIS.CAMBIO 
	IF TYPE('this.value')="C"
		IF THIS.TAG=THIS.VALUE
			RETURN 1
		ENDIF
	ELSE
		IF THIS.TAG=STR(THIS.VALUE)
			RETURN 1
		ENDIF
	ENDIF
ENDIF

DEBUGOUT "Ingreso2"
COBJETO = THIS.OBJETO
CRETORNA2 = THIS.RETORNA2
COBJETO2 = THIS.OBJETO2
CRETORNA3 = THIS.RETORNA3
COBJETO3 = THIS.OBJETO3
CRETORNA4 = THIS.RETORNA4
COBJETO4 = THIS.OBJETO4
CRETORNA5 = THIS.RETORNA5
COBJETO5 = THIS.OBJETO5
OLDALIAS = ALIAS()
CCONDICION = THIS.CONDICIONEXTRA
*IF THIS.VALIDAR=.F.
*IF THIS.CAMBIO 
*!*		IF TYPE('this.value')="C"
*!*			IF EMPTY(THIS.VALUE) .OR. ISNULL(THIS.VALUE)
*!*				RETURN 1
*!*				
*!*			ENDIF
*!*		ELSE
		IF EMPTY(THIS.VALUE) OR ISNULL(THIS.VALUE)
			DEBUGOUT EMPTY(THIS.VALUE)
			DEBUGOUT ISNULL(THIS.VALUE)
			DEBUGOUT this.Value
			DEBUGOUT "Salir"
			&COBJETO..VALUE=""
			&COBJETO..REFRESH()
			RETURN 1
			
		ENDIF
*	ENDIF
*ENDIF

DEBUGOUT "Ingreso3"
*THIS.VALIDAR = .F.

CCADENAERROR = ''
IF EMPTY(THIS.INDICE) .OR. EMPTY(THIS.TABLA)
	CCADENAERROR = 'Debe indicar el valor a las propiedades: Indice y Tabla del Campo Clave'
	ERROR CCADENAERROR
	RETURN 0
ENDIF
IF  .NOT. EMPTY(THIS.INDICE1) .AND. LEFT(THIS.VALUE, 1)=THIS.PREFIJO
	CINDICE = THIS.INDICE1
	CVALOR = SUBSTR(THIS.VALUE, 2)
ELSE
	CINDICE = THIS.INDICE
	CVALOR = THIS.VALUE
ENDIF

CTABLA = THIS.TABLA
CCODIGO = THIS.INDICE
IF  .NOT. EMPTY(THIS.RETORNA)
	CRETORNA = THIS.RETORNA
ELSE
	CRETORNA = "space(1)"
ENDIF

IF THISFORM.EDITMODE
	IF EMPTY(CCONDICION)
		CCONDICION = THIS.CONDICION_EN_EDICION
	ELSE
		IF  .NOT. EMPTY(THIS.CONDICION_EN_EDICION)
			CCONDICION = CCONDICION+" AND "+THIS.CONDICION_EN_EDICION
		ENDIF
	ENDIF
ENDIF

LCSQL = 'Select '+CCODIGO+' as codigo,'+CRETORNA+' as resultado '
IF  .NOT. EMPTY(THIS.RETORNA2)
	LCSQL = LCSQL+','+CRETORNA2+' as resultado2 '
ENDIF
IF  .NOT. EMPTY(THIS.RETORNA3)
	LCSQL = LCSQL+','+CRETORNA3+' as resultado3 '
ENDIF
IF  .NOT. EMPTY(THIS.RETORNA4)
	LCSQL = LCSQL+','+CRETORNA4+' as resultado4 '
ENDIF
IF  .NOT. EMPTY(THIS.RETORNA5)
	LCSQL = LCSQL+','+CRETORNA5+' as resultado5 '
ENDIF
IF  .NOT. EMPTY(THIS.COPIARCAMPOS)
	LCSQL = LCSQL+','+THIS.COPIARCAMPOS
ENDIF
LCSQL = LCSQL+' from '+CTABLA+' where '+CINDICE+' = ?cvalor '+IIF(EMPTY(CCONDICION), '', ' and '+CCONDICION)
IF THIS.ORIGEN='R'
	LNHNDCONN = SQLCONNECT(OAPP.SISTEMA)
	IF LNHNDCONN>0
		IF SQLEXEC(LNHNDCONN, LCSQL, 'xClave')<0
			THISFORM.ERROR()
		ENDIF
		SQLMORERESULTS(LNHNDCONN)
		SQLCANCEL(LNHNDCONN)
		SQLDISCONNECT(LNHNDCONN)
	ENDIF
ELSE
	LCSQL = LCSQL+' into cursor xClave'
	&LCSQL
ENDIF
IF  .NOT. EMPTY(OLDALIAS)
	SELECT &OLDALIAS
ENDIF

DEBUGOUT "Buscando"

IF RECCOUNT('xClave')>0
	IF  .NOT. EMPTY(THIS.INDICE1) .AND. LEFT(THIS.VALUE, 1)=THIS.PREFIJO
		THIS.VALUE = XCLAVE.CODIGO
	ENDIF
	IF EMPTY(THIS.RETORNA)
		RETURN 1
	ENDIF

*!*		IF &COBJETO..VALUE = XCLAVE.RESULTADO AND THIS.RESULREPE=.F.
*!*			RETURN 1
*!*		ENDIF
	
	&COBJETO..VALUE=XCLAVE.RESULTADO
	&COBJETO..REFRESH()
	IF TYPE('THIS.VALUE')='C'
		LCTAG = THIS.VALUE
	ELSE
		LCTAG = STR(THIS.VALUE)
	ENDIF
	IF  .NOT. EMPTY(THIS.OBJETO2)
		IF  THISFORM.EDITMODE AND !EMPTY(THIS.RETORNA2) AND (&COBJETO2..VALUE <> XCLAVE.RESULTADO2 ) OR THIS.RESULREPE=.T.
			&COBJETO2..VALUE=XCLAVE.RESULTADO2
			&COBJETO2..REFRESH()
		ENDIF
	ENDIF
	IF  .NOT. EMPTY(THIS.OBJETO3)
		IF  (THISFORM.EDITMODE) AND !EMPTY(THIS.RETORNA3)   AND (&COBJETO3..VALUE <> XCLAVE.RESULTADO3 ) OR THIS.RESULREPE=.T.
			&COBJETO3..VALUE=XCLAVE.RESULTADO3
			&COBJETO3..REFRESH()
		ENDIF
	ENDIF
	IF  .NOT. EMPTY(THIS.OBJETO4)
		IF  (THISFORM.EDITMODE) AND !EMPTY(THIS.RETORNA4)   AND (&COBJETO4..VALUE <> XCLAVE.RESULTADO4 ) OR THIS.RESULREPE=.T.
			&COBJETO4..VALUE=XCLAVE.RESULTADO4
			&COBJETO4..REFRESH()
		ENDIF
	ENDIF
	IF  .NOT. EMPTY(THIS.OBJETO5)
		IF  (THISFORM.EDITMODE) AND !EMPTY(THIS.RETORNA5)   AND (&COBJETO5..VALUE <> XCLAVE.RESULTADO5 ) OR THIS.RESULREPE=.T.
			&COBJETO5..VALUE=XCLAVE.RESULTADO5
			&COBJETO5..REFRESH()
		ENDIF
	ENDIF
	IF THISFORM.EDITMODE .AND.  .NOT. EMPTY(THIS.PEGARCAMPOS)
		LCPEGARCAMPOS = THIS.PEGARCAMPOS
		SELECT XCLAVE
		SCATTER MEMVAR MEMO FIELDS &LCPEGARCAMPOS
		LCALIAS = SUBSTR(THIS.CONTROLSOURCE, 1, AT(".", THIS.CONTROLSOURCE)-1)
		IF  .NOT. EMPTY(LCALIAS)
			SELECT (LCALIAS)
		ENDIF
		GATHER MEMVAR MEMO FIELDS &LCPEGARCAMPOS
	ENDIF
	THIS.RETAYUDA = '0'
*	&COBJETO..REFRESH()
	IF USED('xclave')
		USE IN XCLAVE
	ENDIF
	DEBUGOUT "Fin"
	RETURN 1
ELSE
	IF USED('xclave')
		USE IN XCLAVE
	ENDIF
	MESSAGEBOX(THIS.MENSAJEERROR, 64, "Futura Software")
	THIS.NOVALIDO_EVENT()
	THISFORM.VALIDO = .F.
	THISFORM.MENSAJENOVALIDO = THIS.MENSAJEERROR
	RETURN 0
ENDIF
ENDPROC
PROCEDURE condicionvalor_access
Local LCPARAMETRO
If  .Not. Empty(This.CODICIONEXTRA)
	LCPARAMETRO = Evaluate(This.CONDICIONVALOR)
Else
	LCPARAMETRO = ' '
Endif
Return LCPARAMETRO
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*condicionvalor_access 
*novalido_event Ocurre cuando el valid() devuelve falso
actualizar Indica si actualiza el control dependiente.
condicion_en_edicion (Validar) Una condicion adicional que debe cumplir el registro a ser devuelto cuando esta en modo de edicion.
condicionextra (Validar) Una condicion adicional que debe cumplir el registro a ser devuelto.
condicionvalor
copiarcampos Indica los campos a ser copiados para luego pegar.
indice (Validar) Indice de la tabla en donde va a buscar.
indice1 Indice alternativo en donde se busca cuando utiliza el prefijo.
mensajeerror (Validar) Mensaje que se va a mostrar si no se encuentra.
objeto (Validar) El nombre del objeto que va a actualizar si encuentra.
objeto2 (Validar) El nombre del segundo objeto que va a actualizar si encuentra.
objeto3 (Validar) El nombre del tercer objeto que va a actualizar si encuentra.
objeto4 (Validar) El nombre del cuarto objeto que va a actualizar si encuentra.
objeto5 (Validar) El nombre del quinto objeto que va a actualizar si encuentra.
origen Indica si la consulta se realiza en datos locales (L) o remotos (R)
pegarcampos (Validar) Indica los campos a pegar desde la validacion.
prefijo Simbolo que se utiliza para validar sobre el indice alternativo.
resulrepe Para poder buscar en caso de que devuelva valor repetido 
retorna (validar) Indica el valor que va a retornar si encuentra.
retorna2 (validar) Indica el segundo valor que va a retornar si encuentra.
retorna3
retorna4 (validar) Indica el cuarto valor que va a retornar si encuentra.
retorna5 (validar) Indica el quinto valor que va a retornar si encuentra.
tabla (Validar) Tabla en donde va a buscar.
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Permite cargar campos para claves principales y validar.[END RESERVED7]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] campo_clave
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _24W0VYAHK
[CLASS] dataenvironment
[BASECLASS] dataenvironment
[OBJNAME] debase
[START PROPERTIES]
DataSource = DRIVER=SQL Native Client;SERVER=vgo\sqlexpress;APP=Gestion Comercial;DATABASE=FUTURA;LANGUAGE=Español;UID=FuturaApp;PWD=AppFutura;Trusted_Connection=No
DataSourceType = "ODBC"
Name = "debase"
[END PROPERTIES]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] debase

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _02H0QOONS
[CLASS] commandgroup
[BASECLASS] commandgroup
[OBJNAME] detalle
[START PROPERTIES]
AutoSize = .F.
ButtonCount = 2
Command1.AutoSize = .F.
Command1.Caption = ""
Command1.Height = 31
Command1.Left = 5
Command1.Name = "additem"
Command1.Picture = ..\bitmaps\wzplus.bmp
Command1.SpecialEffect = 0
Command1.ToolTipText = "Agrega una linea en la cuadrícula"
Command1.Top = 5
Command1.Width = 31
Command2.AutoSize = .F.
Command2.Caption = ""
Command2.Height = 31
Command2.Left = 36
Command2.Name = "removeitem"
Command2.Picture = ..\bitmaps\wzdelete.bmp
Command2.ToolTipText = "Elimina una linea en la cuadrícula"
Command2.Top = 5
Command2.Width = 30
Height = 41
Name = "detalle"
SpecialEffect = 0
Value = 1
Width = 71
foco = 
tabla = ""
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
**
** ReFox - este procedimiento es vacío **
**
ENDPROC
**
PROCEDURE Refresh
IF THIS.EDITABLE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
DODEFAULT()
ENDPROC
**
PROCEDURE additem.Click
LOCAL TABLA, OBJETO, CTABLA, CVALOR, CCAMPO, CCODIGO, LCFOCO
LCFOCO = "This.parent.parent."+THIS.PARENT.FOCO
CCAMPO = THIS.PARENT.CAMPO
CTABLA = THIS.PARENT.TABLA
CVALOR = THIS.PARENT.VALOR
CCODIGO = THIS.PARENT.CODIGO
TABLA = THIS.PARENT.TABLA
OBJETO = "This.parent.parent."+THIS.PARENT.ENLACE
IF  .NOT. EMPTY(CCODIGO)
DELETE ALL FOR EMPTY(&CCODIGO)IN &CTABLA
&OBJETO..REFRESH()
ENDIF
INSERT INTO &CTABLA(&CCAMPO) VALUE(&CVALOR)
&OBJETO..ENABLED = .t.
&OBJETO..REFRESH()
&OBJETO..SETFOCUS()
&OBJETO..ACTIVATECELL(&OBJETO..ACTIVEROW+1, 1)
ENDPROC
**
PROCEDURE additem.Refresh
IF THIS.PARENT.EDITABLE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
DODEFAULT()
ENDPROC
**
PROCEDURE removeitem.Click
LOCAL TABLA, OBJETO
TABLA = THIS.PARENT.TABLA
DELETE IN &TABLA
GO RECNO(TABLA) IN &TABLA
OBJETO = "This.parent.parent."+THIS.PARENT.ENLACE
&OBJETO..REFRESH()
&OBJETO..SETFOCUS()
ENDPROC
**
PROCEDURE removeitem.Refresh
IF THIS.PARENT.EDITABLE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
DODEFAULT()
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
campo Indica los campos que se agregan en el nuevo registro.
codigo Representa el campo clave de la tabla en donde se inserta el nuevo registro.
editable
enlace Es el objeto enlazado al control.
foco El foco que tendra despue del agregar
tabla Indica la tabla en donde se agrega el nuevo registro.
valor Indica los valores con los que se actualiza los nuevos campos agregados.
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED8]
..\include\strings.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] detalle
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1C20PN7SG
[CLASS] label
[BASECLASS] label
[OBJNAME] label_boton
[START PROPERTIES]
AutoSize = .T.
BackStyle = 0
Caption = "Etiqueta Botpón"
FontBold = .T.
FontName = "Times New Roman"
ForeColor = 0,0,128
Height = 18
Name = "label_boton"
Width = 86
[END PROPERTIES]
[START METHODS]
PROCEDURE MouseEnter
LPARAMETERS NBUTTON, NSHIFT, NXCOORD, NYCOORD
THIS.FORECOLOR = 16711680
THIS.FONTSIZE = THIS.FONTSIZE+1
THIS.FONTBOLD = .T.
THIS.FONTUNDERLINE = .T.
ENDPROC
**
PROCEDURE MouseLeave
LPARAMETERS NBUTTON, NSHIFT, NXCOORD, NYCOORD
THIS.FORECOLOR = 8388608
THIS.FONTSIZE = THIS.FONTSIZE-1
THIS.FONTBOLD = .F.
THIS.FONTUNDERLINE = .F.
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] label_boton

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0VZ0PVR61
[CLASS] form
[BASECLASS] form
[OBJNAME] opcionesimpresion
[START PROPERTIES]
AlwaysOnTop = .T.
AutoCenter = .T.
BorderStyle = 2
Caption = "Opciones de Impresion"
DoCreate = .T.
HalfHeightCaption = .T.
Height = 155
Icon = ..\bitmaps\default.ico
MaxButton = .F.
MinButton = .F.
Name = "opcionesimpresion"
WhatsThisButton = .T.
Width = 375
WindowType = 1
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
THISFORM.MARGEN.VALUE = VAL(LEERINI('Margen', 'System'))
THISFORM.MARGENTOP.VALUE = VAL(LEERINI('MargenTOP', 'System'))
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
10[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] Command1
[PARENT] opcionesimpresion
[START PROPERTIES]
Caption = "Aceptar"
FontSize = 8
Height = 21
Left = 192
Name = "Command1"
Top = 125
Width = 73
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
= ESCRIBIRINI(STR(THISFORM.MARGEN.VALUE, 5, 2), 'Margen', 'System')
= ESCRIBIRINI(STR(THISFORM.MARGENTOP.VALUE, 5, 2), 'MargenTOP', 'System')
THISFORM.RELEASE()
ENDPROC
**
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0VZ0PZYSE
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] Command2
[PARENT] opcionesimpresion
[START PROPERTIES]
Cancel = .T.
Caption = "Cancelar"
FontSize = 8
Height = 21
Left = 288
Name = "Command2"
Top = 125
Width = 73
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
THISFORM.RELEASE()
ENDPROC
**
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] RESERVED  
[CLASS] spinner
[BASECLASS] spinner
[OBJNAME] Margen
[PARENT] opcionesimpresion
[START PROPERTIES]
FontSize = 8
Height = 20
InputMask = "99.99"
KeyboardHighValue = 50
KeyboardLowValue = 0
Left = 144
Name = "Margen"
SpinnerHighValue =  50.00
SpinnerLowValue =   0.00
Top = 24
Value = 0.00
Width = 60
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1RD0RBB6E
[CLASS] spinner
[BASECLASS] spinner
[OBJNAME] MargenTOP
[PARENT] opcionesimpresion
[START PROPERTIES]
FontSize = 8
Height = 20
InputMask = "99.99"
KeyboardHighValue = 50
KeyboardLowValue = 0
Left = 144
Name = "MargenTOP"
SpinnerHighValue =  50.00
SpinnerLowValue =   0.00
Top = 48
Value = 0.00
Width = 60
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0VZ0PZYSD
[CLASS] ts3dshape
[CLASSLOC] tsbase.vcx
[BASECLASS] shape
[OBJNAME] Ts3dshape1
[PARENT] opcionesimpresion
[START PROPERTIES]
Height = 96
Left = 13
Name = "Ts3dshape1"
Top = 14
Width = 348
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] Tslabel1
[PARENT] opcionesimpresion
[START PROPERTIES]
BackStyle = 1
Caption = "Opciones de Impresión"
FontBold = .F.
Height = 16
Left = 25
Name = "Tslabel1"
Top = 8
Width = 113
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] Tslabel2
[PARENT] opcionesimpresion
[START PROPERTIES]
Alignment = 0
BackStyle = 1
Caption = "Márgen Izquierdo (mm)"
FontBold = .F.
Height = 16
Left = 21
Name = "Tslabel2"
Top = 33
Width = 113
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0VZ0RD42T
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] Tslabel3
[PARENT] opcionesimpresion
[START PROPERTIES]
BackStyle = 1
Caption = "Para impresoras LASER utilize 25, para otras impresoras utilize 5"
FontBold = .F.
Height = 16
Left = 25
Name = "Tslabel3"
Top = 80
Width = 315
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1RD0RBB6D
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] Tslabel4
[PARENT] opcionesimpresion
[START PROPERTIES]
Alignment = 0
BackStyle = 1
Caption = "Márgen Superior (mm)"
FontBold = .F.
Height = 16
Left = 21
Name = "Tslabel4"
Top = 57
Width = 113
[END PROPERTIES]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] opcionesimpresion
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _02M0O5NT6
[CLASS] olecontrol
[BASECLASS] olecontrol
[OBJNAME] statusbar
[START PROPERTIES]
Height = 61
Name = "statusbar"
Width = 412
[END PROPERTIES]
[BINSTART OLE]
CHECKSUM=27235
[BINEND OLE]
[BINSTART OLE2]
CHECKSUM=28227
[BINEND OLE2]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED8]
..\include\strings.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] statusbar

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZUF9W
[CLASS] shape
[BASECLASS] shape
[OBJNAME] ts3dshape
[START PROPERTIES]
BackStyle = 0
Height = 73
Name = "ts3dshape"
SpecialEffect = 0
Width = 234
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
**
** ReFox - este procedimiento es vacío **
**
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED4]
..\bitmaps\shape.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\shape.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Shape de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] ts3dshape

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R0O0UWM30
[CLASS] form
[BASECLASS] form
[OBJNAME] tsbaseform
[START PROPERTIES]
AutoCenter = .T.
BindControls = .T.
BorderStyle = 3
BufferMode = 2
Caption = "Formulario1"
DataSession = 2
DoCreate = .T.
DrawStyle = 5
FillColor = 255,0,0
FillStyle = 0
FontSize = 8
Height = 300
MDIForm = .T.
MinButton = .T.
Name = "tsbaseform"
ScrollBars = 0
ShowTips = .T.
ShowWindow = 0
Width = 633
WindowState = 0
areaprincipal = 
auditmarcahora = 
auditusuario = 
camponro = 
camponroorden = N
campos = 
ctoolbar = tstoolbar
enlaces = 
gridactivo = 
grupoimpresion = 
idobjeto = 
lallowconsultar = .T.
lallowdelete = .T.
lallowedits = .T.
lallownew = .T.
mensajenovalido = 
navegador = .T.
repetirvalores = 
tabla1 = 
tabla2 = 
tabla3 = 
tabla4 = 
tabla5 = 
tabla6 = 
ultimonro = 
valido = .T.
valores = 
[END PROPERTIES]
[START PROTECTED]
ultimonro_access^
[END PROTECTED]
[START METHODS]
PROCEDURE Activate
LOCAL LCALIAS
LCALIAS = THIS.TABLA1
IF  .NOT. EMPTY(LCALIAS)
SELECT (LCALIAS)
ENDIF
IF  .NOT. EMPTY(THISFORM.CTOOLBAR) .AND. TYPE("oApp.oToolbar")=="O"
OAPP.OTOOLBAR.REFRESH()
ENDIF
ACTIVATE MENU _MSYSMENU NOWAIT
SET MESSAGE TO THISFORM.CAPTION
IF DELETED()
GOTO TOP
ENDIF
ENDPROC
PROCEDURE Destroy
Thisform.Visible = .F.
If Type('oApp')=="O"
	If Type("this.ctoolbar")<>"U" .And.  .Not. Empty(This.CTOOLBAR)
		This.REMOVEFROMMENU()
		OAPP.RELEASENAVTOOLBAR()
	Endif
Endif
Thisform.SAVEWINDOWPOS()
ENDPROC
PROCEDURE Error
LPARAMETERS NERROR, CMETHOD, NLINE
IF TYPE('gaError(1)')<>"U"
AERROR(GAERROR)
RETURN
ENDIF
IF _VFP.STARTMODE<>4
MENSAJE = "ATENCION : "+MESSAGE()+CHR(13)
MENSAJE = MENSAJE+"ERROR: "+ALLTRIM(STR(NERROR))+CHR(13)
MENSAJE = MENSAJE+"METODO: "+CMETHOD+CHR(13)
MENSAJE = MENSAJE+"LINEA: ("+ALLTRIM(STR(NLINE))+") "+MESSAGE(1)
ELSE
MENSAJE = "ATENCION: "+MESSAGE()
ENDIF
MESSAGEBOX(MENSAJE, 48, "Futura Software")
ENDPROC
PROCEDURE Init
DODEFAULT()
LOCAL LCFILE, LNMENUNUM, LCFORMNAME, LCUSUARIO, LCFORMNAME
THIS.ADDOBJECT('ToWRITEBUFFER', 'COMMANDBUTTON')
THIS.TOWRITEBUFFER.LEFT = 3000
THISFORM.RESTOREWINDOWPOS()
IF  .NOT. EMPTY(THISFORM.CTOOLBAR) .AND. TYPE("oApp")=="O"
	THISFORM.ADDTOMENU()
	OAPP.SHOWNAVTOOLBAR(THISFORM.CTOOLBAR)
ENDIF
IF EMPTY(THIS.ICON)
	THIS.ICON = "DEFAULT.ICO"
ENDIF
IF  .NOT. EMPTY(THIS.TABLA1) .AND. CURSORGETPROP("SourceType", THIS.TABLA1)=2
	THIS.HNDCONN = CURSORGETPROP('ConnectHandle', THIS.TABLA1)
ENDIF
IF TYPE('THISFORM.DATAENVIRONMENT')='O'
	IF EMPTY(THIS.TABLA1) .AND.  .NOT. EMPTY(THISFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS)
		THIS.TABLA1 = THISFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS
	ENDIF
	IF  .NOT. EMPTY(THIS.TABLA1) .AND. EMPTY(THISFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS)
		THISFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS = THIS.TABLA1
	ENDIF
	IF EMPTY(THIS.AREAPRINCIPAL)
		THIS.AREAPRINCIPAL = THISFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS
	ENDIF
ENDIF
IF  .NOT. EMPTY(THIS.IDOBJETO)
	LNPOSICION = ASCAN(OAPP.ARRAYPERMISOS, THIS.IDOBJETO)
	IF LNPOSICION>0
		THIS.PERMISOS(1) = OAPP.ARRAYPERMISOS(LNPOSICION+1)
		THIS.PERMISOS(2) = OAPP.ARRAYPERMISOS(LNPOSICION+2)
		THIS.PERMISOS(3) = OAPP.ARRAYPERMISOS(LNPOSICION+3)
		THIS.PERMISOS(4) = OAPP.ARRAYPERMISOS(LNPOSICION+4)
		THIS.PERMISOS(5) = OAPP.ARRAYPERMISOS(LNPOSICION+5)
	ENDIF
	THIS.LALLOWNEW = THIS.LALLOWNEW .AND. THIS.PERMISOS(2)
	THIS.LALLOWEDITS = THIS.LALLOWEDITS .AND. THIS.PERMISOS(3)
	THIS.LALLOWDELETE = THIS.LALLOWDELETE .AND. THIS.PERMISOS(4)
	THIS.LALLOWANULAR = THIS.LALLOWANULAR .AND. THIS.PERMISOS(4)
	THIS.NAVEGADOR = THIS.NAVEGADOR .AND. THIS.PERMISOS(5)
ENDIF
THISFORM.AERRORMSG[1] = "Falló el desencadenante Insert."
THISFORM.AERRORMSG[2] = "Falló el desencadenante Update."
THISFORM.AERRORMSG[3] = "Falló el desencadenante Delete."
SET DATABASE TO datos
SET SYSFORMATS ON
SET DATE short
SET DELETED ON
SET POINT TO ','
SET SEPARATOR TO '.'
SET CENTURY ON
SET NULLDISPLAY TO ' '
SET TALK OFF
SET SAFETY OFF
ENDPROC
PROCEDURE Load
DO SETEO

ENDPROC
PROCEDURE QueryUnload
If Empty(Thisform.CTOOLBAR)
	Return .T.
Endif
If  .Not. Thisform.WRITEBUFFER()
	Nodefault
	Return .F.
Endif
If Empty(Alias())
	Set DataSession To (This.DataSessionId)
	If Empty(Alias()) .And.  .Not. Empty(This.DataEnvironment.InitialSelectedAlias) .And. Used(This.DataEnvironment.InitialSelectedAlias)
		Select (This.DataEnvironment.InitialSelectedAlias)
	Endif
Endif
If  .Not. Empty(Alias())
	If Thisform.ISNEWANDEMPTY()
		Thisform.Restore()
	Else
		If Thisform.DATACHANGED() .And. Thisform.ASKTOSAVE()=2
			Nodefault
			Return .F.
		Endif
	Endif
Endif
Return .T.
ENDPROC
PROCEDURE Unload
SET MESSAGE TO
ENDPROC
PROCEDURE addnew
LOCAL LCALIAS, GRILLA, LCREPETIRVALORES, LLCONREGISTROS
LCALIAS = IIF(EMPTY(THIS.TABLA1), THISFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS, THIS.TABLA1)
LCREPETIRVALORES = THIS.REPETIRVALORES
IF THISFORM.WRITEBUFFER()
IF THISFORM.ISNEWANDEMPTY()
THISFORM.RESTORE()
ELSE
ENDIF
OAPP.OTOOLBAR.CMDNEW.ENABLED = .F.
ACTIVATE MENU _MSYSMENU NOWAIT
SELECT (LCALIAS)
LLCONREGISTROS = (RECCOUNT()>0)
IF  .NOT. EMPTY(LCREPETIRVALORES)
SCATTER MEMVAR MEMO FIELDS &LCREPETIRVALORES
ENDIF
IF  .NOT. EMPTY(THIS.CAMPOS) .AND.  .NOT. EMPTY(THIS.VALORES)
LCCOMANDO = 'Insert into '+LCALIAS+' ('+THIS.CAMPOS+') VALUES('+THIS.VALORES+')'
&LCCOMANDO
ELSE
APPEND BLANK
ENDIF
IF  .NOT. EMPTY(LCREPETIRVALORES) .AND. LLCONREGISTROS
GATHER MEMVAR MEMO FIELDS &LCREPETIRVALORES
ENDIF
IF THIS.CAMPONROORDEN="N"
IF  .NOT. EMPTY(THIS.CAMPONRO)
IF AT(",", THIS.CAMPONRO, 1)>0
LCAUX = SUBSTR(THIS.CAMPONRO, 1, AT(",", THIS.CAMPONRO, 1)-1)
ELSE
LCAUX = THIS.CAMPONRO
ENDIF
REPLACE &LCAUX WITH THIS.ULTIMONRO
ENDIF
ENDIF
IF THIS.DETALLE
FOR I = 1 TO 4
IF TYPE('this.grids(i)')='O'
GRILLA = THIS.GRIDS(I)
IF  .NOT. EMPTY(GRILLA.VARIABLEVISTA)
CVARIABLE = GRILLA.VARIABLEVISTA
LOCAL &CVARIABLE,LCVALOR
LCVALOR = GRILLA.VALORVARIABLE
&CVARIABLE=&LCVALOR
IF  .NOT. EMPTY(GRILLA.VALORVARIABLE2)
CVARIABLE2 = GRILLA.VARIABLEVISTA2
LOCAL &CVARIABLE2,LCVALOR2	
LCVALOR2 = GRILLA.VALORVARIABLE2
&CVARIABLE2=&LCVALOR2
ENDIF
CVISTA = GRILLA.RECORDSOURCE
= REQUERY(CVISTA)
ENDIF
ELSE
EXIT
ENDIF
ENDFOR
ENDIF
THIS.AFTERADDNEW()
THIS.EDITAR()
ENDIF
ENDPROC
PROCEDURE addtomenu
LOCAL LNBAR
*SET COVERAGE TO c:\sistemas\futura.log ADDITIVE 
*SET COVERAGE TO futura.log ADDITIVE 
IF TYPE("oApp")=="O"
	IF  .NOT. POPUP("Window")
		DO MENUS\WINDOW.mpr
	ENDIF
	IF  .NOT. POPUP("Detalle") .AND. THIS.DETALLE
		DO MENUS\DETALLE.mpr
	ENDIF
	IF CNTBAR("Window")=0 .OR. GETBAR("Window", CNTBAR("Window"))<0
		LNBAR = CNTBAR("Window")+1
	ELSE
		LNBAR = GETBAR("Window", CNTBAR("Window"))+1
	ENDIF
	DEFINE BAR LNBAR OF WINDOW PROMPT THISFORM.CAPTION
	LCFORMNAME = THISFORM.NAME
	ON SELECTION BAR LNBAR OF WINDOW ACTIVATE WINDOW &LCFORMNAME
ENDIF

*SET COVERAGE TO
ENDPROC
PROCEDURE agregaritem
LPARAMETERS LLINSERTAR
LOCAL LCGRIDACTIVO
LCGRIDACTIVO = THIS.GRIDACTIVO
IF TYPE('lcGridActivo')='O'
LCGRIDACTIVO.AGREGARITEM(LLINSERTAR)
ENDIF
ENDPROC
PROCEDURE asktosave
LOCAL LNANSWER
LNANSWER = MESSAGEBOX("¿Desea guardar primero sus cambios?", 035, "Futura Software")
DO CASE
CASE LNANSWER=6
IF  .NOT. THISFORM.SAVE()
LNANSWER = 2
ENDIF
CASE LNANSWER=7
THISFORM.RESTORE()
ENDCASE
RETURN LNANSWER
ENDPROC
PROCEDURE borraritem
THIS.GRIDACTIVO.BORRARITEM()
ENDPROC
PROCEDURE controlerror
LPARAMETERS NERROR
LOCAL LLHANDLEDERROR, LAERROR[7], LCMESSAGE, LNANSWER
IF THISFORM.LSETERROROFF
THIS.LHADERROR = .T.
RETURN
ENDIF
= AERROR(LAERROR)
DO CASE
CASE NERROR=1539
?? CHR(7)
= MESSAGEBOX(THISFORM.AERRORMSG(LAERROR(5)), 48, "Futura Software")
IF LAERROR(5)=3
THISFORM.RESTORE()
ENDIF
LLHANDLEDERROR = .T.
CASE NERROR=1583
IF .F.
WAIT WINDOW NOWAIT "Falló la regla de la tabla."
ENDIF
LLHANDLEDERROR = .T.
CASE NERROR=1582
?? CHR(7)
LCMESSAGE = DBGETPROP(ALIAS()+"."+LAERROR(3), "Field", "RuleText")
LCMESSAGE = STRTRAN(LCMESSAGE, '"', '')
= MESSAGEBOX(LCMESSAGE, 48, "Futura Software")
OTHERWISE
?? CHR(7)
LCMESSAGE = MESSAGE()+CHR(13)+"Método: "+CMETHOD+CHR(13)+"Línea: "+ALLTRIM(STR(NLINE))
LNANSWER = MESSAGEBOX(LCMESSAGE, 018, "Ha ocurrido un error")
DO CASE
CASE LNANSWER=3
IF .F.
SUSPEND
ELSE
OAPP.CLEANUP
CANCEL
RETURN
ENDIF
CASE LNANSWER=4
RETRY
OTHERWISE
RETURN
ENDCASE
ENDCASE
RETURN LLHANDLEDERROR
ENDPROC
PROCEDURE datachanged
PARAMETER LCTABLA
LOCAL LLDATACHANGED, LCALIAS
LLDATACHANGED = .F.
LCALIAS = ALIAS()
IF PARAMETERS()>0
LTABLA = LCTABLA
SELECT (LTABLA)
IF ISNULL(GETFLDSTATE(-1))
LLDATACHANGED = .F.
ELSE
LLDATACHANGED = ("2"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1))
ENDIF
RETURN LLDATACHANGED
ENDIF
IF  .NOT. EMPTY(THIS.TABLA1) .AND.  .NOT. LLDATACHANGED
LTABLA = THIS.TABLA1
SELECT (LTABLA)
IF ISNULL(GETFLDSTATE(-1))
LLDATACHANGED = .F.
ELSE
LLDATACHANGED = ("2"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1))
ENDIF
ENDIF
IF  .NOT. EMPTY(THIS.TABLA2) .AND.  .NOT. LLDATACHANGED
LTABLA = THIS.TABLA2
SELECT (LTABLA)
IF ISNULL(GETFLDSTATE(-1))
LLDATACHANGED = .F.
ELSE
LLDATACHANGED = ("2"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1))
ENDIF
ENDIF
IF  .NOT. EMPTY(THIS.TABLA3) .AND.  .NOT. LLDATACHANGED
LTABLA = THIS.TABLA3
SELECT (LTABLA)
IF ISNULL(GETFLDSTATE(-1))
LLDATACHANGED = .F.
ELSE
LLDATACHANGED = ("2"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1))
ENDIF
ENDIF
IF  .NOT. EMPTY(THIS.TABLA4) .AND.  .NOT. LLDATACHANGED
LTABLA = THIS.TABLA4
SELECT (LTABLA)
IF ISNULL(GETFLDSTATE(-1))
LLDATACHANGED = .F.
ELSE
LLDATACHANGED = ("2"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1))
ENDIF
ENDIF
IF  .NOT. EMPTY(THIS.TABLA5) .AND.  .NOT. LLDATACHANGED
LTABLA = THIS.TABLA5
SELECT (LTABLA)
IF ISNULL(GETFLDSTATE(-1))
LLDATACHANGED = .F.
ELSE
LLDATACHANGED = ("2"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1))
ENDIF
ENDIF
IF  .NOT. EMPTY(THIS.TABLA6) .AND.  .NOT. LLDATACHANGED
LTABLA = THIS.TABLA6
SELECT (LTABLA)
IF ISNULL(GETFLDSTATE(-1))
LLDATACHANGED = .F.
ELSE
LLDATACHANGED = ("2"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1))
ENDIF
ENDIF
SELECT (LCALIAS)
RETURN LLDATACHANGED
ENDPROC
PROCEDURE delete
LOCAL LNRECNO, LLRETVAL, LCALIAS, HNDCONN, LAERROR[7]
LCALIAS = THIS.TABLA1
LLRETVAL = .T.
HNDCONN = 0
IF MESSAGEBOX("¿Realmente desea eliminar este registro?", 036, "Eliminar advertencia")=7
RETURN .F.
ENDIF
SELECT (LCALIAS)
IF "3"$GETFLDSTATE(-1) .OR. "4"$GETFLDSTATE(-1)
THISFORM.RESTORE()
RETURN .T.
ENDIF
IF CURSORGETPROP('SourceType', LCALIAS)=2
HNDCONN = CURSORGETPROP('ConnectHandle', LCALIAS)
ENDIF
LNRECNO = RECNO()
BEGIN TRANSACTION
DELETE
IF  .NOT. TABLEUPDATE(.T., .T.)
AERROR(LAERROR)
IF HNDCONN>0
= SQLROLLBACK(HNDCONN)
ENDIF
ROLLBACK
MESSAGEBOX('No se pudo borrar.'+CHR(13)+LAERROR(2), 048, "Futura Software")
ELSE
END TRANSACTION
IF HNDCONN>0
= SQLCOMMIT(HNDCONN)
ENDIF
SKIP
IF EOF()
SKIP -1
THISFORM.REFRESHFORM()
ELSE
IF LNRECNO=RECNO()
LLRETVAL = .F.
ELSE
THISFORM.REFRESHFORM()
ENDIF
ENDIF
ENDIF
RETURN LLRETVAL
ENDPROC
PROCEDURE editar
IF  .NOT. THIS.EDITMODE
THIS.EDITMODE = .T.
ELSE
THIS.EDITMODE = .F.
ENDIF
IF  .NOT. EMPTY(THISFORM.CTOOLBAR) .AND. TYPE("oApp.oToolbar")=="O"
OAPP.OTOOLBAR.REFRESH()
ENDIF
THIS.REFRESHFORM()
ENDPROC
PROCEDURE esnuevo_access
RETURN IIF(ISNULL(GETFLDSTATE(-1, THISFORM.TABLA1)), .F., ("3"$GETFLDSTATE(-1, THISFORM.TABLA1) .OR. "4"$GETFLDSTATE(-1, THISFORM.TABLA1)))
ENDPROC
PROCEDURE first
LOCAL LNRECNO, LNRETVAL, LCTABLA
IF  .NOT. THISFORM.WRITEBUFFER()
RETURN 3
ENDIF
LCTABLA = THIS.AREAPRINCIPAL
SELECT &LCTABLA 
IF THISFORM.ISNEWANDEMPTY()
THISFORM.RESTORE()
ELSE
ENDIF
LNRECNO = RECNO()
LOCATE
IF LNRECNO=RECNO()
RETURN 3
ENDIF
IF EOF()
RETURN 2
ENDIF
THISFORM.REFRESHFORM()
RETURN 1
ENDPROC
PROCEDURE gridactivo_access
LOCAL LOCONTROL, LNCONTROLES, I
LOCONTROL = THISFORM.ACTIVECONTROL
LNCONTROLES = 0
THIS.GRIDACTIVO = ''
IF LOCONTROL.CLASS='Tsgrid' .AND.  .NOT. LOCONTROL.READONLY .AND.  .NOT. EMPTY(LOCONTROL.CAMPO)
THIS.GRIDACTIVO = LOCONTROL
ELSE
ENDIF
IF TYPE('THIS.GRIDACTIVO')<>'O'
IF TYPE('THIS.GRIDS(1)')='O' .AND. TYPE('THIS.GRIDS(2)')='O'
DEFINE POPUP _POPSHORTCUTMENU FROM MROW(), MCOL() MARGIN RELATIVE SHORTCUT
FOR I = 1 TO 4
IF TYPE('THIS.GRIDS(i)')='O'
DEFINE BAR I OF _POPSHORTCUTMENU PROMPT THIS.GRIDS(I).TITULO
ENDIF
ENDFOR
ON SELECTION POPUP _POPSHORTCUTMENU DEACTIVATE POPUP _POPSHORTCUTMENU
ACTIVATE POPUP _POPSHORTCUTMENU
RELEASE POPUPS _POPSHORTCUTMENU
IF BAR()=0
RETURN .NULL.
ELSE
THIS.GRIDACTIVO = THIS.GRIDS(BAR())
ENDIF
ELSE
THIS.GRIDACTIVO = THIS.GRIDS(1)
ENDIF
ENDIF
RETURN THIS.GRIDACTIVO
ENDPROC
PROCEDURE hndconn_access
*To do: Modify this routine for the Access method
IF  .NOT. EMPTY(THIS.TABLA1) .AND. CURSORGETPROP("SourceType", THIS.TABLA1)=2
	THIS.HNDCONN = CURSORGETPROP('ConnectHandle', THIS.TABLA1)
ENDIF
RETURN THIS.hndconn

ENDPROC
PROCEDURE imprimir
IF EMPTY(THIS.GRUPOIMPRESION)
DO FORM arbol
ELSE
DO FORM arbol WITH THIS.GRUPOIMPRESION
ENDIF
ENDPROC
PROCEDURE isnewandempty
RETURN (MOD(VAL(GETFLDSTATE(-1)), VAL(REPLICATE("3", LEN(GETFLDSTATE(-1))))))=0
ENDPROC
PROCEDURE lallowdelete_access
RETURN THIS.LALLOWDELETE
ENDPROC
PROCEDURE lallowedits_access
RETURN THIS.LALLOWEDITS
ENDPROC
PROCEDURE last
LOCAL LNRECNO, LNRETVAL, LLNEWANDEMPTY, LCTABLA
IF  .NOT. THISFORM.WRITEBUFFER()
RETURN 3
ENDIF
LCTABLA = THIS.AREAPRINCIPAL
SELECT &LCTABLA 
IF THISFORM.ISNEWANDEMPTY()
THISFORM.RESTORE()
LLNEWANDEMPTY = .T.
ELSE
ENDIF
LNRECNO = RECNO()
GOTO BOTTOM
IF  .NOT. LLNEWANDEMPTY .AND. LNRECNO=RECNO()
RETURN 3
ENDIF
IF  .NOT. EOF()
THISFORM.REFRESHFORM()
ENDIF
RETURN 2
ENDPROC
PROCEDURE marcarrequerido
LPARAMETERS CTRL AS OBJECT
X = CTRL.LEFT+10
Y = CTRL.TOP+CTRL.HEIGHT/2
IF UPPER(CTRL.PARENT.BASECLASS)='PAGE'
Y = Y+CTRL.PARENT.PARENT.TOP+25
ENDIF
THISFORM.FILLCOLOR = 255
THIS.CIRCLE(4, X, Y)
ENDPROC
PROCEDURE next
LOCAL LNRECNO, LNRETVAL, LCTABLA
IF  .NOT. THISFORM.WRITEBUFFER()
	RETURN 3
ENDIF
LCTABLA = THIS.AREAPRINCIPAL
SELECT &LCTABLA
IF  .NOT. EOF()
	IF THISFORM.ISNEWANDEMPTY()
		THISFORM.RESTORE()
	ELSE
	ENDIF
	LNRECNO = RECNO()
	SKIP
	IF EOF()
		SKIP -1
		RETURN 2
	ENDIF
	IF LNRECNO=RECNO()
		RETURN 3
	ENDIF
	THISFORM.REFRESHFORM()
	RETURN 0
ELSE
	RETURN 2
ENDIF
ENDPROC
PROCEDURE prior
LOCAL LNRECNO, LNRETVAL, LCTABLA
IF  .NOT. THISFORM.WRITEBUFFER()
RETURN 3
ENDIF
LCTABLA = THIS.AREAPRINCIPAL
SELECT &LCTABLA 
IF  .NOT. BOF()
IF THISFORM.ISNEWANDEMPTY()
THISFORM.RESTORE()
ELSE
ENDIF
LNRECNO = RECNO()
SKIP -1
IF BOF()
RETURN 1
ENDIF
IF LNRECNO=RECNO()
RETURN 3
ENDIF
THISFORM.REFRESHFORM()
RETURN 0
ELSE
RETURN 1
ENDIF
ENDPROC
PROCEDURE refreshform
THISFORM.LOCKSCREEN = .T.
THISFORM.REFRESH()
THISFORM.LOCKSCREEN = .F.
ENDPROC
PROCEDURE removefrommenu
LPARAMETERS TCCAPTION
LOCAL LNBAR, LCCAPTION
IF PCOUNT()=0
	LCCAPTION = THISFORM.CAPTION
ELSE
	LCCAPTION = TCCAPTION
ENDIF
IF TYPE('oApp')=="O"
	FOR LNBAR = CNTBAR("Window") TO 1 STEP -1
		IF PRMBAR("Window", GETBAR("Window", LNBAR))=LCCAPTION
			RELEASE BAR GETBAR("Window", LNBAR) OF WINDOW
			EXIT
		ENDIF
	ENDFOR

	IF CNTBAR("Window")=0
		RELEASE POPUPS EXTENDED WINDOW
		RELEASE PAD WINDOW OF _MSYSMENU
		RELEASE POPUPS EXTENDED DETALLE
		RELEASE PAD DETALLE OF _MSYSMENU
	ENDIF
ENDIF
ENDPROC
PROCEDURE restore
THIS.REGISTROBORRADO = .F.
IF  .NOT. EMPTY(THIS.TABLA1)
LTABLA = THIS.TABLA1
SELECT (LTABLA)
LNRECORD = TABLEREVERT(.T., LTABLA)
ENDIF
IF  .NOT. EMPTY(THIS.TABLA2)
LTABLA = THIS.TABLA2
SELECT (LTABLA)
LNRECORD = TABLEREVERT(.T., LTABLA)
ENDIF
IF  .NOT. EMPTY(THIS.TABLA3)
LTABLA = THIS.TABLA3
SELECT (LTABLA)
LNRECORD = TABLEREVERT(.T., LTABLA)
ENDIF
IF  .NOT. EMPTY(THIS.TABLA4)
LTABLA = THIS.TABLA4
SELECT (LTABLA)
LNRECORD = TABLEREVERT(.T., LTABLA)
ENDIF
IF  .NOT. EMPTY(THIS.TABLA5)
LTABLA = THIS.TABLA5
SELECT (LTABLA)
LNRECORD = TABLEREVERT(.T., LTABLA)
ENDIF
IF  .NOT. EMPTY(THIS.TABLA6)
LTABLA = THIS.TABLA6
SELECT (LTABLA)
LNRECORD = TABLEREVERT(.T., LTABLA)
ENDIF
LTABLA = THIS.TABLA1
SELECT (LTABLA)
IF EOF()
SKIP -1
IF BOF()
ENDIF
ENDIF
THIS.EDITAR()
ACTIVATE MENU _MSYSMENU NOWAIT
THISFORM.REFRESHFORM()
ENDPROC
PROCEDURE restorewindowpos
LPARAMETERS TCENTRY
LOCAL LCBUFFER, LCOLDERROR, LNTOP, LNLEFT, LLERROR, LNCOMMAPOS, LCENTRY
IF PCOUNT()=0
LCENTRY = THISFORM.CAPTION
ELSE
LCENTRY = TCENTRY
ENDIF
LCBUFFER = SPACE(10)+CHR(0)
LCOLDERROR = ON('ERROR')
IF GETPRIVSTR("WindowPositions", LCENTRY, "", @LCBUFFER, LEN(LCBUFFER), CURDIR()+"FUTURA.INI")>0
ON ERROR LLERROR = .T.
LNCOMMAPOS = AT(",", LCBUFFER)
LNTOP = VAL(LEFT(LCBUFFER, LNCOMMAPOS-1))
LNLEFT = VAL(SUBSTR(LCBUFFER, LNCOMMAPOS+1))
ON ERROR &LCOLDERROR
IF  .NOT. LLERROR
THISFORM.TOP = LNTOP
THISFORM.LEFT = LNLEFT
ENDIF
ENDIF
ENDPROC
PROCEDURE runsql
LPARAMETERS cmdsql, lccursor,  ;
            lnconn
LOCAL _hndconn, _lnresultado,  ;
      _lcalias
_lcalias = ALIAS()
IF TYPE('lnConn') = 'N'
     _hndconn = lnconn
ELSE
     lnconn = 0
     IF TYPE('oApp') <> 'O'
          sistema = 'ND'
          _hndconn = SQLCONNECT('datos_Sql')
     ELSE
          sistema = oapp.sistema
          _hndconn = SQLCONNECT(oapp.sistema)
     ENDIF
     = SQLSETPROP(_hndconn, "Transactions", 1)
     
ENDIF
IF _hndconn <= 0
     MESSAGEBOX( ;
               'No se pudo conectar al Servidor' +  ;
               CHR(13) +  ;
               'Sistema: ' +  ;
               sistema + CHR(13) +  ;
               'BD: ' + DBC())
     RETURN -1
ENDIF
*!*	DO WHILE SQLGETPROP(_hndconn,    'ConnectBusy')
*!*	     WAIT WINDOW NOCLEAR NOWAIT            'Conexion Ocupada...'
*!*	ENDDO

= SQLSETPROP(_hndconn, 'BatchMode', .T.)
*= SQLSETPROP(_hndconn, 'Asynchronous', .T.)
*= SQLSETPROP(_hndconn, "Transactions", 1)
IF TYPE('lcCursor') = 'C'
     _lnresultado = SQLEXEC(_hndconn,  ;
                    cmdsql,  ;
                    lccursor)
ELSE
     _lnresultado = SQLEXEC(_hndconn,  ;
                    cmdsql)
ENDIF
IF _lnresultado < 0
     lnelemento = AERROR(laerror)
     lcerror = ''
     FOR i = 1 TO lnelemento
          lcerror = lcerror +  ;
                    TRANSFORM(i) +  ;
                    ') ' +  ;
                    laerror(i,3) +  ;
                    CHR(13)
     ENDFOR
     MESSAGEBOX(lcerror)
ENDIF

IF lnconn = 0
     SQLCANCEL(_hndconn)
     SQLDISCONNECT(_hndconn)
ENDIF
IF  .NOT. EMPTY(_lcalias)
     SELECT (_lcalias)
ENDIF
RETURN _lnresultado

*!*	LPARAMETERS CMDSQL, LCCURSOR, LNCONN
*!*	LOCAL _HNDCONN, _LNRESULTADO, _LCALIAS
*!*	_LCALIAS = ALIAS()
*!*	IF TYPE('lnConn')='N'
*!*	_HNDCONN = LNCONN
*!*	ELSE
*!*	LNCONN = 0
*!*	IF TYPE('oApp')<>'O'
*!*	_HNDCONN = SQLCONNECT('datos_Sql')
*!*	ELSE
*!*	_HNDCONN = SQLCONNECT(OAPP.SISTEMA)
*!*	ENDIF
*!*	ENDIF
*!*	IF _HNDCONN<=0
*!*	MESSAGEBOX('No se pudo conectar al Servidor')
*!*	RETURN -1
*!*	ENDIF
*!*	WAIT WINDOW NOCLEAR NOWAIT 'Procesando...'
*!*	DO WHILE SQLGETPROP(_HNDCONN, 'ConnectBusy')
*!*	ENDDO
*!*	= SQLSETPROP(_HNDCONN, 'BatchMode', .T.)
*!*	= SQLSETPROP(_HNDCONN, "Transactions", 1)
*!*	WAIT CLEAR
*!*	IF TYPE('lcCursor')='C'
*!*	_LNRESULTADO = SQLEXEC(_HNDCONN, CMDSQL, LCCURSOR)
*!*	ELSE
*!*	_LNRESULTADO = SQLEXEC(_HNDCONN, CMDSQL)
*!*	ENDIF
*!*	IF _LNRESULTADO<0
*!*	LNELEMENTO = AERROR(LAERROR)
*!*	LCERROR = ''
*!*	LCSQLERROR = '[Microsoft][ODBC SQL Server Driver][SQL Server]'
*!*	FOR I = 1 TO LNELEMENTO
*!*	LCERROR = LCERROR+'('+TRANSFORM(LAERROR(I, 5))+') '+STRTRAN(LAERROR(I, 3), LCSQLERROR, '')+CHR(13)
*!*	ENDFOR
*!*	MESSAGEBOX('SQL Error: '+LCERROR, 48, "Futura Software")
*!*	ENDIF
*!*	IF LNCONN=0
*!*	SQLDISCONNECT(_HNDCONN)
*!*	ENDIF
*!*	IF  .NOT. EMPTY(_LCALIAS)
*!*	SELECT (_LCALIAS)
*!*	ENDIF
*!*	RETURN _LNRESULTADO
ENDPROC
PROCEDURE save
LOCAL LAERROR[7], LLERROR, LTABLA, HNDCONN
HNDCONN = 0
LLERROR =  .NOT. THISFORM.WRITEBUFFER()
IF  .NOT. THIS.VALIDO
	RETURN .F.
ENDIF
IF  .NOT. THIS.VALIDARAUTO() .OR.  .NOT. THIS.VALIDAR()
	RETURN .F.
ENDIF
IF THIS.CAMPONROORDEN="S"
	IF  .NOT. EMPTY(THIS.CAMPONRO)
		IF AT(",", THIS.CAMPONRO, 1)>0
			LCAUX = SUBSTR(THIS.CAMPONRO, 1, AT(",", THIS.CAMPONRO, 1)-1)
		ELSE
			LCAUX = THIS.CAMPONRO
		ENDIF
		LTABLA = THIS.TABLA1
		SELECT (LTABLA)
		IF EMPTY(EVALUATE(LCAUX))
			REPLACE &LCAUX WITH THIS.ULTIMONRO
		ENDIF
	ENDIF
ENDIF
LTABLA = THIS.TABLA1
SELECT (LTABLA)
IF  .NOT. LLERROR
	BEGIN TRANSACTION
	POSICION = RECNO()
	LTABLA = THIS.TABLA1
	IF CURSORGETPROP('SourceType', LTABLA)=2
		HNDCONN = CURSORGETPROP('ConnectHandle', LTABLA)
		THIS.HNDCONN = HNDCONN
	ENDIF
	IF  .NOT. EMPTY(THIS.AUDITUSUARIO)
		REPLACE (THIS.AUDITUSUARIO) WITH OAPP.GETEMPLOYEEID()IN &LTABLA
	ENDIF
	IF  .NOT. EMPTY(THIS.AUDITMARCAHORA)
		REPLACE (THIS.AUDITMARCAHORA) WITH GETDATE() IN &LTABLA
	ENDIF
	IF  .NOT. EMPTY(THIS.CAMPOEMPRESA)
		REPLACE (THIS.CAMPOEMPRESA) WITH OAPP.EMPRESA IN &LTABLA
	ENDIF
	LLERROR =  .NOT. TABLEUPDATE(.T., .T., LTABLA, LAERROR)
	IF .NOT. LLERROR 
		LLERROR =  .NOT. THIS.AFTERUPDATETABLA1()
	ENDIF
		
	IF  .NOT. LLERROR .AND.  .NOT. EMPTY(THIS.TABLA2)
		LTABLA = THIS.TABLA2
		IF CURSORGETPROP('SourceType', LTABLA)=2
			IF HNDCONN=0
				HNDCONN = CURSORGETPROP('ConnectHandle', LTABLA)
				THIS.HNDCONN = HNDCONN
			ENDIF
			IF SQLGETPROP(HNDCONN, "ODBChdbc")<>SQLGETPROP(CURSORGETPROP('ConnectHandle', LTABLA), "ODBChdbc")
				MESSAGEBOX('La conexion debe ser compartida', 048, "Futura Software")
				RETURN .F.
			ENDIF
		ENDIF
		LLERROR =  .NOT. TABLEUPDATE(.T., .T., LTABLA, LAERROR)
		IF .NOT. LLERROR 
			LLERROR =  .NOT. THIS.AFTERUPDATETABLA2()
		ENDIF
			
	ENDIF
	IF  .NOT. LLERROR .AND.  .NOT. EMPTY(THIS.TABLA3)
		LTABLA = THIS.TABLA3
		IF CURSORGETPROP('SourceType', LTABLA)=2
			IF HNDCONN=0
				HNDCONN = CURSORGETPROP('ConnectHandle', LTABLA)
				THIS.HNDCONN = HNDCONN
			ENDIF
			IF SQLGETPROP(HNDCONN, "ODBChdbc")<>SQLGETPROP(CURSORGETPROP('ConnectHandle', LTABLA), "ODBChdbc")
				MESSAGEBOX('La conexion debe ser compartida', 048, "Futura Software")
				RETURN .F.
			ENDIF
		ENDIF
		LLERROR =  .NOT. TABLEUPDATE(.T., .T., LTABLA, LAERROR)
		IF .NOT. LLERROR 
			LLERROR =  .NOT. THIS.AFTERUPDATETABLA3()
		ENDIF
		
			
	ENDIF
	IF  .NOT. LLERROR .AND.  .NOT. EMPTY(THIS.TABLA4)
		LTABLA = THIS.TABLA4
		IF CURSORGETPROP('SourceType', LTABLA)=2
			IF HNDCONN=0
				HNDCONN = CURSORGETPROP('ConnectHandle', LTABLA)
				THIS.HNDCONN = HNDCONN
			ENDIF
			IF SQLGETPROP(HNDCONN, "ODBChdbc")<>SQLGETPROP(CURSORGETPROP('ConnectHandle', LTABLA), "ODBChdbc")
				MESSAGEBOX('La conexion debe ser compartida', 048, "Futura Software")
				RETURN .F.
			ENDIF
		ENDIF
		LLERROR =  .NOT. TABLEUPDATE(.T., .T., LTABLA, LAERROR)
		IF .NOT. LLERROR 
			LLERROR =  .NOT. THIS.AFTERUPDATETABLA4()
		ENDIF
			
	ENDIF
	IF  .NOT. LLERROR .AND.  .NOT. EMPTY(THIS.TABLA5)
		LTABLA = THIS.TABLA5
		IF CURSORGETPROP('SourceType', LTABLA)=2
			IF HNDCONN=0
				HNDCONN = CURSORGETPROP('ConnectHandle', LTABLA)
				THIS.HNDCONN = HNDCONN
			ENDIF
			IF SQLGETPROP(HNDCONN, "ODBChdbc")<>SQLGETPROP(CURSORGETPROP('ConnectHandle', LTABLA), "ODBChdbc")
				MESSAGEBOX('La conexion debe ser compartida', 048, "Futura Software")
				RETURN .F.
			ENDIF
		ENDIF
		LLERROR =  .NOT. TABLEUPDATE(.T., .T., LTABLA, LAERROR)
		IF .NOT. LLERROR 
			LLERROR =  .NOT. THIS.AFTERUPDATETABLA5()
		ENDIF
			
	ENDIF
	IF  .NOT. LLERROR .AND.  .NOT. EMPTY(THIS.TABLA6)
		LTABLA = THIS.TABLA6
		THIS.HNDCONN = HNDCONN
		IF CURSORGETPROP('SourceType', LTABLA)=2
			IF HNDCONN=0
				HNDCONN = CURSORGETPROP('ConnectHandle', LTABLA)
			ENDIF
			IF SQLGETPROP(HNDCONN, "ODBChdbc")<>SQLGETPROP(CURSORGETPROP('ConnectHandle', LTABLA), "ODBChdbc")
				MESSAGEBOX('La conexion debe ser compartida', 048, "Futura Software")
				RETURN .F.
			ENDIF
		ENDIF
		LLERROR =  .NOT. TABLEUPDATE(.T., .T., LTABLA, LAERROR)
		IF .NOT. LLERROR 
			LLERROR =  .NOT. THIS.AFTERUPDATETABLA6()
		ENDIF
			
	ENDIF
	IF LLERROR
		LNELEMENTO = AERROR(LAERROR)
		IF TYPE('gaError(1)')<>"U"
			LAERROR(2) = GAERROR(2)
		ELSE
			IF LAERROR(1)=1539
				LAERROR[2] = THIS.AERRORMSG(LAERROR(5))
			ENDIF
		ENDIF
		ROLLBACK
		LCERROR = ''
		FOR I = 1 TO LNELEMENTO
			LCERROR = LCERROR+TRANSFORM(I)+') '+LAERROR(I, 3)+CHR(13)
		ENDFOR
		IF HNDCONN>0
			= SQLROLLBACK(HNDCONN)
		ENDIF
		MESSAGEBOX('No se pudo grabar.'+CHR(13)+LCERROR, 048, "Futura Software")
		RETURN .F.
	ELSE
		THIS.REGISTROBORRADO = .F.
		END TRANSACTION
		FLUSH
		IF HNDCONN>0
			= SQLCOMMIT(HNDCONN)
		ENDIF
		LTABLA = THIS.TABLA1
		SELECT &LTABLA
		WAIT WINDOW NOWAIT "Se ha guardado la información."

		IF  .NOT. THIS.AFTERUPDATE()
			RETURN .F.
		ENDIF

	ENDIF
	THIS.EDITAR()
ENDIF
ACTIVATE MENU _MSYSMENU NOWAIT
RETURN  .NOT. LLERROR
ENDPROC
PROCEDURE savewindowpos
LPARAMETERS TCENTRY
LOCAL LCVALUE, LCENTRY
IF PCOUNT()=0
LCENTRY = THISFORM.CAPTION
ELSE
LCENTRY = TCENTRY
ENDIF
LCVALUE = ALLTRIM(STR(MAX(THISFORM.TOP, 0)))+','+ALLTRIM(STR(MAX(THISFORM.LEFT, 0)))
= WRITEPRIVSTR("WindowPositions", LCENTRY, LCVALUE, CURDIR()+"FUTURA.INI")
ENDPROC
PROCEDURE seleccionargrid
LPARAMETERS TAMENU, TCONSELECTION
LOCAL LCONSELECTION, LNMENUCOUNT, LNCOUNT, LLDOUBLEARRAY
LOCAL LCMENUITEM, LCMENUSELECTION
EXTERNAL ARRAY TAMENU
IF PARAMETERS()=0 .OR. TYPE("taMenu")<>"C"
RETURN .F.
ENDIF
LNMENUCOUNT = 0
LNMENUCOUNT = ALEN(TAMENU, 1)
IF LNMENUCOUNT=0
RETURN .F.
ENDIF
LLDOUBLEARRAY = (ALEN(TAMENU, 2)>0)
ACTIVATE SCREEN
DEACTIVATE POPUP _POPSHORTCUTMENU
DEFINE POPUP _POPSHORTCUTMENU FROM MROW(), MCOL() MARGIN RELATIVE SHORTCUT
FOR LNCOUNT = 1 TO LNMENUCOUNT
LCMENUITEM = IIF(LLDOUBLEARRAY, TAMENU(LNCOUNT, 1), TAMENU(LNCOUNT))
DEFINE BAR LNCOUNT OF _POPSHORTCUTMENU PROMPT (LCMENUITEM)
ENDFOR
ON SELECTION POPUP _POPSHORTCUTMENU DEACTIVATE POPUP _POPSHORTCUTMENU
ACTIVATE POPUP _POPSHORTCUTMENU
RELEASE POPUPS _POPSHORTCUTMENU
IF BAR()=0
RETURN .F.
ENDIF
IF LLDOUBLEARRAY
LCMENUSELECTION = TAMENU(BAR(), 2)
IF  .NOT. EMPTY(LCMENUSELECTION) .AND. TYPE("lcMenuSelection")=="C"
LCONSELECTION = ALLTRIM(LCMENUSELECTION)
ENDIF
IF EMPTY(LCONSELECTION)
LCONSELECTION = ALLTRIM(IIF(EMPTY(TCONSELECTION), "", TCONSELECTION))
ENDIF
ELSE
LCONSELECTION = ALLTRIM(IIF(EMPTY(TCONSELECTION), "", TCONSELECTION))
ENDIF
IF EMPTY(LCONSELECTION)
RETURN .F.
ENDIF
&LCONSELECTION
ENDPROC
PROCEDURE ultimonro_access
Local LCXCAMPO, LCXTABLA, LCXCONDICION, LCALIAS, LCTIPO, LCDEVUELVE
Do Case
Case At(",", This.CAMPONRO, 2)>0
	LCXCAMPO = Substr(This.CAMPONRO, 1, At(",", This.CAMPONRO, 1)-1)
	LCXTABLA = Substr(This.CAMPONRO, At(",", This.CAMPONRO, 1)+1, At(",", This.CAMPONRO, 2)-At(",", This.CAMPONRO, 1)-1)
	LCXCONDICION = Substr(This.CAMPONRO, At(",", This.CAMPONRO, 2)+1)
Case At(",", This.CAMPONRO, 1)>0
	LCXCAMPO = Substr(This.CAMPONRO, 1, At(",", This.CAMPONRO, 1)-1)
	LCXTABLA = Substr(This.CAMPONRO, At(",", This.CAMPONRO, 1)+1)
	LCXCONDICION = ''
Otherwise
	LCXCAMPO = This.CAMPONRO
	LCXTABLA = ''
	LCXCONDICION = ''
Endcase
If Empty(LCXCONDICION)
	LCXCONDICION = " isnumeric("+LCXCAMPO+")=1  "
Else
	LCXCONDICION = LCXCONDICION+" and isnumeric("+LCXCAMPO+")=1 "
Endif
LCXTABLA = Alltrim(LCXTABLA)
LCALIAS = Alias()
LCTIPO = Iif(Empty(This.CAMPOTAM), 'N', 'C')
If LCTIPO="C"
	LCXCONDICION = LCXCONDICION+" and len(RTRIM(LTRIM("+LCXCAMPO+")))<="+Str(This.CAMPOTAM)
	LCXCAMPO = "CAST("+Alltrim(LCXCAMPO)+" AS INT )"
Endif
If Sql('SELECT DISTINCT TOP 1 '+LCXCAMPO+' as numero'+' FROM '+LCXTABLA+Iif(Empty(LCXCONDICION), '', ' WHERE  '+LCXCONDICION)+' ORDER BY 1 DESC', 'xDevuelveNro')>0
	If Reccount('xDevuelveNro')>0
		If LCTIPO="N"
			This.ULTIMONRO = XDEVUELVENRO.NUMERO+1
		Else
			LCDEVUELVE = Alltrim(Str(XDEVUELVENRO.NUMERO+1))
			If  .Not. Empty(This.CAMPOTAM) .And. Len(LCDEVUELVE)<This.CAMPOTAM
				LCDEVUELVE = Right(Replicate("0", This.CAMPOTAM)+LCDEVUELVE, This.CAMPOTAM)
			Endif
			This.ULTIMONRO = LCDEVUELVE
		Endif
	Else
		If LCTIPO="N"
			This.ULTIMONRO = 1
		Else
			LCDEVUELVE = "1"
			If  .Not. Empty(This.CAMPOTAM)
				LCDEVUELVE = Right(Replicate("0", This.CAMPOTAM)+LCDEVUELVE, This.CAMPOTAM)
			Endif
			This.ULTIMONRO = LCDEVUELVE
		Endif
	Endif
	Use In XDEVUELVENRO
	If  .Not. Empty(LCALIAS)
		Select (LCALIAS)
	Endif
Endif
Return This.ULTIMONRO
ENDPROC
PROCEDURE validar
THIS.LBLREQUERIDO.VISIBLE = .F.
RETURN .T.
ENDPROC
PROCEDURE validarauto
LOCAL LLERROR
LLERROR = .F.
IF ALEN(THIS.VALIDARCONTROLES)=1
RETURN .T.
ENDIF
THISFORM.CLS()
FOR I = 1 TO ALEN(THIS.VALIDARCONTROLES)-1
IF THIS.VALIDARCONTROLES(I).VALIDARAUTO()=.F.
LLERROR = .T.
IF EMPTY(THIS.VALIDARCONTROLES(I).MENSAJEVALIDACION)
THIS.MARCARREQUERIDO(THIS.VALIDARCONTROLES(I))
ELSE
MESSAGEBOX(THIS.VALIDARCONTROLES(I).MENSAJEVALIDACION, 64, "Futura Software")
THIS.VALIDARCONTROLES(I).SETFOCUS()
RETURN .F.
ENDIF
ENDIF
ENDFOR
IF LLERROR
MESSAGEBOX("Complete los datos requeridos.", 64, "Futura Software")
ENDIF
RETURN  .NOT. LLERROR
ENDPROC
PROCEDURE waitmode
LPARAMETERS TLWAITMODE
LNMOUSEPOINTER = IIF(TLWAITMODE, 11, 0)
THISFORM.MOUSEPOINTER = LNMOUSEPOINTER
THISFORM.SETALL('MousePointer', LNMOUSEPOINTER)
ENDPROC
PROCEDURE writebuffer
LOCAL LLRETVAL
LLRETVAL = .T.
THIS.TOWRITEBUFFER.VISIBLE = .T.
THIS.TOWRITEBUFFER.SETFOCUS()
THIS.TOWRITEBUFFER.VISIBLE = .F.
RETURN LLRETVAL
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
2[END RESERVED2]
[START RESERVED3]
*addnew Prepara el formulario para la entrada de un registro nuevo y anexa un registro al alias actual.
*addtomenu Agrega el título del formulario al menú Ventana.
*afteraddnew 
*afterupdate Ocurre despues de grabar correctamente.
*afterupdatetabla1 
*afterupdatetabla2 
*afterupdatetabla3 
*afterupdatetabla4 
*afterupdatetabla5 
*afterupdatetabla6 
*agregaritem Agrega un item al detalle.
*anular 
*asktosave Pide al usuario que guarde los cambios si es necesario.
*borraritem Elimina un Item del Detalle
*consultar 
*controlerror 
*datachanged Devuelve .T. si se han cambiado datos en el formulario actual.
*delete Elimina el registro actual.
*devuelvenro Devuelve el ultimo disponible para el campo especificado de la tabla correspondiente.
*editar Poner en modo de edición.
*esnuevo_access 
*first Mueve el puntero de registro del alias actual al primer registro.
*gridactivo_access 
*hndconn_access 
*imprimir Imprime informes relacionados al formulario.
*isnewandempty Devuelve .T. si el usuario ha agregado un nuevo registro pero no ha hecho ningún cambio.
*lallowdelete_access 
*lallowedits_access 
*last Mueve el puntero de registro del alias actual al último registro.
*marcarrequerido 
*next Mueve el puntero de registro del alias actual al siguiente registro.
*prior Mueve el puntero de registro del alias actual al registro anterior.
*refreshform Método Refresh personalizado. 
*removefrommenu Quita el título del formulario del menú Ventana.
*restore Restaura todos los cambios realizados al formulario actual. (También cancela la anterior operación Nuevo, si es aplicable.) 
*restorewindowpos Lee del archivo INI la última posición de la ventana y establece las propiedades adecuadas de la ventana.
*runsql Ejecuta sentencia SQL
*save Guarda la información del formulario en el alias actual. 
*savewindowpos Guarda la posición de la ventana en el archivo INI.
*seleccionargrid 
*ultimonro_access 
*validar Función para valiadar los datos del formularios
*validarauto 
*versiones En este lugar se describe el historico de versiones del objeto
*waitmode Activa y desactiva el cursor de espera para todos los controles de la pantalla.
*writebuffer Se llama cuando necesitamos escribir el contenido del control actual desde el búfer a disco. 
^aerrormsg[3,0] Contiene mensajes de error. Se usa en el método de evento Error.
^grids[4,0] Es una matriz que contiene los Grids Activos.
^permisos[5,0] Contiene los permisos del usuario para el objeto, (1) Ejecutar, (2) Nuevo, (3) Modificar, (4) Borrar, (5) Consultar
^validarcontroles[1,0] 
areaprincipal Area de Trabajo Principal
auditmarcahora Nombre del campo para almacenar la fecha y hora en que se modificó el registro.
auditusuario Nombre del campo para almacenar el usuario que modificó el registro.
campoempresa Contiene el campo en donde se guarda el codigo de la empresa
camponro Indica en campo de donde se obtendrá el Ultimo Nro.
camponroorden Indica en que momento asigna el nuevo valor. S=Al Grabar, N= Al Agregar.
campos
campotam Tamaño del campo que el nro devuelto se va a rellenar con ceros iniciales.
colderror
ctoolbar El nombre de la barra de herramientas que se va a crear cuando se ejecute el formulario. 
detalle Indica si contiene un Grid de Detalle
editmode Indica el estado de edición del formulario activo.
enlaces Indica los enlaces que posee el formulario actual.
esnuevo Indica si un registro es nuevo.
etiquetamenu
gridactivo Contiene el Grid activo del formulario.
grupoimpresion Indica el grupo de impresion que va a mostrar.
hndconn
idobjeto
lallowanular Indica si puede anular 
lallowconsultar
lallowdelete Es True si se permite eliminar en el formulario actual.
lallowedits Es True si se permiten modificaciones al formulario actual.
lallownew Es True si se permiten agregar registros nuevos al formulario actual.
lhaderror Ocurrió un error mientras estaba deshabilitado el tratamiento de errores.
lseterroroff Deshabilita el tratamiento de errores
mensajenovalido
navegador Indica si se usa los botones de desplazamiento.
registroborrado Indica si hay un registro borrado.
repetirvalores Indica los campos que se repiten el valor en el registro agregado.
tabla1
tabla2
tabla3
tabla4
tabla5
tabla6
ultimonro Contiene el Ultimo Nro disponible del campo indicado en la tabla solicitada.
valido
valores
[END RESERVED3]
[START RESERVED4]
..\bitmaps\form.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\form.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Form de base[END RESERVED7]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1MZ0MBHMI
[CLASS] tslabel
[CLASSLOC] tsbase.vcx
[BASECLASS] label
[OBJNAME] lblRequerido
[PARENT] tsbaseform
[START PROPERTIES]
AutoSize = .F.
Caption = "* Requerido"
FontBold = .F.
ForeColor = 255,0,0
Height = 16
Left = 1500
Name = "lblRequerido"
Top = 108
Width = 58
[END PROPERTIES]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsbaseform
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZUV8C
[CLASS] checkbox
[BASECLASS] checkbox
[OBJNAME] tscheckbox
[START PROPERTIES]
Alignment = 0
BackStyle = 0
Caption = "Casilla1"
FontSize = 8
Height = 15
Name = "tscheckbox"
Width = 148
editable = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
**
** ReFox - este procedimiento es vacío **
**
ENDPROC
**
PROCEDURE Refresh
IF THIS.EDITABLE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
DODEFAULT()
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
editable
[END RESERVED3]
[START RESERVED4]
..\bitmaps\checkbx.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\checkbx.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
CheckBox de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tscheckbox
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QZ919MZF4
[CLASS] combobox
[BASECLASS] combobox
[OBJNAME] tscombobox
[START PROPERTIES]
BackColor = 255,255,254
DisabledForeColor = 0,0,0
FontBold = .F.
FontSize = 8
Height = 22
Name = "tscombobox"
Style = 2
TabIndex = 1
Width = 200
cmdsql = 
condicionvalidacion = 
cursor = 
editable = .T.
mensajevalidacion = 
origen = R
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
IF TYPE("BORDER_COLOR")="N"
IF  .NOT. EMPTY("13875625")
THIS.BORDERCOLOR = VAL("13875625")
ELSE
THIS.RESETTODEFAULT("BorderColor")
ENDIF
ENDIF
IF  .NOT. EMPTY(THIS.CMDSQL)
IF SQL(THIS.CMDSQL, THIS.CURSOR)>0
this.RowSource=""
THIS.ROWSOURCETYPE = 0
THIS.ROWSOURCETYPE = 2
THIS.ROWSOURCE = THIS.CURSOR
ENDIF
ENDIF
IF THIS.REQUERIDO .AND. EMPTY(THIS.CONDICIONVALIDACION)
THIS.CONDICIONVALIDACION = "!Empty("+THIS.CONTROLSOURCE+")"
ENDIF
IF  .NOT. EMPTY(THIS.CONDICIONVALIDACION)
I = ALEN(THISFORM.VALIDARCONTROLES)
DIMENSION THISFORM.VALIDARCONTROLES(I+1)
THISFORM.VALIDARCONTROLES(I) = THIS
ENDIF
ENDPROC
PROCEDURE Refresh
IF THIS.EDITABLE
IF THIS.SOLONUEVO
THIS.ENABLED = THISFORM.EDITMODE .AND. IIF(ISNULL(GETFLDSTATE(-1, THISFORM.TABLA1)), .F., ("3"$GETFLDSTATE(-1, THISFORM.TABLA1) .OR. "4"$GETFLDSTATE(-1, THISFORM.TABLA1)))
ELSE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
ENDIF
DODEFAULT()
ENDPROC
PROCEDURE Requery
THIS.INIT()
ENDPROC
PROCEDURE RightClick
THIS.REQUERY()
ENDPROC
PROCEDURE validarauto
RETURN EVALUATE(THIS.CONDICIONVALIDACION)
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*validarauto 
cmdsql
condicionvalidacion
cursor
editable
mensajevalidacion
origen
requerido Indica si es un campo requerido.
solonuevo Indica si esta disponible solo cuando se agrega un nuevo registro.
[END RESERVED3]
[START RESERVED4]
..\bitmaps\combo.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\combo.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
ComboBox de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tscombobox
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZV9O9
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] tscommandbutton
[START PROPERTIES]
Caption = "Comando1"
FontBold = .T.
FontSize = 8
Height = 26
Name = "tscommandbutton"
TabIndex = 1
Width = 76
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
**
** ReFox - este procedimiento es vacío **
**
ENDPROC
**
PROCEDURE Refresh
IF THIS.EDITABLE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
DODEFAULT()
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
editable
[END RESERVED3]
[START RESERVED4]
..\bitmaps\pushb.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\pushb.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
CommandButton de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tscommandbutton
[START PROPERTIES]
Arial, 1, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _2IE0PFAHK
[CLASS] dataenvironment
[BASECLASS] dataenvironment
[OBJNAME] tsdataenvironment
[START PROPERTIES]
DataSource = .NULL.
Name = "tsdataenvironment"
[END PROPERTIES]
[START METHODS]
PROCEDURE BeforeOpenTables
DO seteo
oApp.SetDataBase(this)
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsdataenvironment

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QZ919NECA
[CLASS] editbox
[BASECLASS] editbox
[OBJNAME] tseditbox
[START PROPERTIES]
BorderColor = 128,128,255
ColorSource = 0
FontBold = .F.
FontSize = 8
Name = "tseditbox"
SpecialEffect = 1
TabIndex = 1
[END PROPERTIES]
[START METHODS]
PROCEDURE Refresh
IF THIS.EDITABLE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
editable
[END RESERVED3]
[START RESERVED4]
..\bitmaps\editbox.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\editbox.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
EditBox de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tseditbox
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QZ50KNCBX
[CLASS] form
[BASECLASS] form
[OBJNAME] tsformretval
[START PROPERTIES]
AutoCenter = .T.
BorderStyle = 2
Caption = "Formulario1"
Comment = "(c) Microsoft Corporation 1995"
ControlBox = .F.
DoCreate = .T.
FontSize = 8
MaxButton = .F.
MinButton = .F.
Name = "tsformretval"
WindowType = 1
uretval = .T.
[END PROPERTIES]
[START METHODS]
PROCEDURE Activate
ACTIVATE MENU _MSYSMENU NOWAIT
SET MESSAGE TO THISFORM.CAPTION
ENDPROC
**
FUNCTION Init
IF TYPE("m.gTTrade")<>'L' .OR.  .NOT. M.GTTRADE
= MESSAGEBOX(CLASSBROWERR_LOC)
RETURN .F.
ENDIF
ENDFUNC
**
PROCEDURE Unload
SET MESSAGE TO
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
lallowdelete
uretval Propiedad para almacenar el valor de retorno del formulario. Puede ser cualquier tipo de datos.
[END RESERVED3]
[START RESERVED4]
..\bitmaps\form.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\form.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Formulario de base utilizado para crear formularios que devuelven un valor. Los formularios basados en esta clase deben crearse como una clase (es decir, deben almacenarse en un VCX, no en un SCX).[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsformretval
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 30, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020VQ2Y6
[CLASS] grid
[BASECLASS] grid
[OBJNAME] tsgrid
[START PROPERTIES]
AllowHeaderSizing = .F.
AllowRowSizing = .F.
ColumnCount = -1
DeleteMark = .F.
FontBold = .F.
FontSize = 8
GridLineColor = 128,128,255
Highlight = .F.
HighlightForeColor = 0,0,0
HighlightStyle = 2
Name = "tsgrid"
RecordMark = .F.
RecordSource = ""
RowHeight = 17
SelectedItemBackColor = 247,223,187
SelectedItemForeColor = 0,64,128
TabIndex = 1
Width = 319
cfieldtosum = 
titulo = Detalle
valorvariable = 
valorvariable2 = 
variablevista = 
variablevista2 = 
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
IF TYPE("BORDER_COLOR")="N"
IF  .NOT. EMPTY("13875625")
THIS.GRIDLINECOLOR = VAL("13875625")
ELSE
THIS.RESETTODEFAULT("GridLineColor")
ENDIF
ENDIF
DODEFAULT()
THIS.TOTALES = 0
FOR I = 1 TO 4
IF TYPE('thisform.grids(i)')<>'O' .AND.  .NOT. EMPTY(THIS.CAMPO)
THISFORM.GRIDS(I) = THIS
THISFORM.DETALLE = .T.
EXIT
ENDIF
ENDFOR
ENDPROC
PROCEDURE Refresh
If This.EDITABLE
	This.SetAll('enabled', Thisform.EDITMODE, 'Column')
Endif
If  .Not. Empty(This.VARIABLEVISTA) .And. Empty(This.Tag) .And. ( .Not. Thisform.EDITMODE)
	CVARIABLE = This.VARIABLEVISTA
	CVARIABLE2 = This.VARIABLEVISTA2
	Local &CVARIABLE,LCVALOR
	LCVALOR = This.VALORVARIABLE
	&CVARIABLE=&LCVALOR
	If  .Not. Empty(This.VALORVARIABLE2)
		Local &CVARIABLE2,LCVALOR2
		LCVALOR2 = This.VALORVARIABLE2
		&CVARIABLE2=&LCVALOR2
	Endif
	CVISTA = This.RecordSource
	= Requery(CVISTA)
Endif
This.Tag = ''
DoDefault()
ENDPROC
PROCEDURE agregaritem
Lparameters LLINSERTAR
Local CTABLA, CVALOR, CCAMPO, CCODIGO, LNRECNO, LCREPETIRVALORES, LCALIAS
= Thisform.WRITEBUFFER()
LCALIAS = Alias()
CCAMPO = This.CAMPO
CTABLA = This.RecordSource
CVALOR = This.VALOR
CCODIGO = This.CODIGO
LCREPETIRVALORES = This.REPETIRVALORES

LNRECNO = Recno(CTABLA)
*SET STEP ON

Select (CTABLA)
If LNRECNO<=0
	LNRECNO = 1
Endif
Goto Bottom
If  .Not. Empty(LCREPETIRVALORES)
	Scatter Memvar Memo Fields &LCREPETIRVALORES
Endif
If  .Not. Empty(CCODIGO)
	CCODIGO = CTABLA+'.'+CCODIGO
	If Empty(&CCODIGO) And !Eof(CTABLA) And !LLINSERTAR
		Return
	Endif
	Delete All For Empty(&CCODIGO)In &CTABLA
Endif
If LLINSERTAR
	Goto LNRECNO
	Copy To Array LADETALLE Rest
Endif
Insert Into &CTABLA(&CCAMPO) Value(&CVALOR)
If LLINSERTAR
	Scatter Memo Memvar
	Goto LNRECNO
	Gather Memo Memvar
	Skip
	Replace From Array LADETALLE Rest
	Goto LNRECNO
Endif
If  .Not. Empty(LCREPETIRVALORES)
	Gather Memvar Memo Fields &LCREPETIRVALORES
ENDIF



If  .Not. Empty(LCALIAS)
	Select (LCALIAS)
Endif
This.SetFocus()

If LLINSERTAR
	This.ActivateCell(LNRECNO, 1)
ELSE
	This.ActivateCell(This.ActiveRow, 1)

ENDIF
This.Refresh()
ENDPROC
PROCEDURE borraritem
SELECT (THIS.RECORDSOURCE)
IF  .NOT. EOF() .AND.  .NOT. BOF()
DELETE
THIS.TAG = 'B'
SKIP
IF EOF()
SKIP -1
ENDIF
SELECT (THISFORM.TABLA1)
GOTO RECNO()
THISFORM.REGISTROBORRADO = .T.
ENDIF
THIS.REFRESH()
ENDPROC
PROCEDURE sumcolumn
IF EMPTY(THIS.CFIELDTOSUM)
	RETURN
ENDIF
LOCAL LNOLDAREA, LNOLDRECNO, LUKEY, LCFIELDTOSUM, LCORDER
LNOLDAREA = SELECT()
THIS.TOTALES = 0
LCFIELDTOSUM = ""
IF EMPTY(THIS.RECORDSOURCE)
	RETURN
ENDIF
SELECT (THIS.RECORDSOURCE)
LCORDER = ORDER()
LUKEY = IIF( .NOT. EMPTY(LCORDER), EVALUATE(LCORDER), "")
LNOLDRECNO = IIF(EOF(), 0, RECNO())
*LNOLDRECNO =this.ActiveRow
*lnNroCol= this.ActiveColumn
DEBUGOUT 'Inicial'
DEBUGOUT ALIAS()
DEBUGOUT LNOLDRECNO
LCFIELDTOSUM = THIS.CFIELDTOSUM
IF  .NOT. EMPTY(LCORDER) .AND. SEEK(LUKEY)
	SUM &LCFIELDTOSUM.  WHILE LUKEY = EVAL(LCORDER) TO ARRAY THIS.TOTALES
ELSE
	IF CURSORGETPROP("SOURCETYPE")=1 .OR. CURSORGETPROP("SOURCETYPE")=2 OR CURSORGETPROP("SOURCETYPE")>100	&&VG CursorAdapters 18/07/07
		SUM &LCFIELDTOSUM.  TO ARRAY THIS.TOTALES
	ENDIF
ENDIF
IF LNOLDRECNO<>0 &&AND lnNroCol<>0
	*this.ActivateCell(LNOLDRECNO,lnNroCol)
	GO (LNOLDRECNO)
ENDIF
DEBUGOUT 'Final'
DEBUGOUT ALIAS()
DEBUGOUT LNOLDRECNO
*DEBUGOUT lnNroCol

SELECT (LNOLDAREA)
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*agregaritem Agrega un nuevo Item en el Detalle.
*borraritem 
*sumcolumn Procedimiento para sumar la columna.
^totales[4,0] Almacena la suma de las columnas especificadas en la propiedad cFieldToSum.
campo Indica el campo que se actualiza cuando se agrega un nuevo registro en el detalle.
cfieldtosum El nombre del campo que se va a sumar. 
codigo
editable
repetirvalores Indica los Campos que repiten su valor cuando se agrega un nuevo detalle.
teclaagregar Indica si puede agregar un registro con la tecla Fecha Abajo.
titulo Indica el Titulo de la grilla.
valor Indica el origen del valor para actualizar los campos en el registro agregado.
valorvariable Indica el origen de la variable para recuperar la vista.
valorvariable2 Indica el origen de la segunda variable para recuperar la  vista.
variablevista Es la variable utilizada para recuperar la vista.
variablevista2 Es la segunda variable utilizada para recuperar la vista.
[END RESERVED3]
[START RESERVED4]
..\bitmaps\datagrid.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\datagrid.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Grid de base[END RESERVED7]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsgrid
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _04J0O8CNO
[CLASS] tstextbox
[CLASSLOC] tsbase.vcx
[BASECLASS] textbox
[OBJNAME] tshora
[START PROPERTIES]
Height = 21
InputMask = "99:99"
Name = "tshora1"
Width = 77
[END PROPERTIES]
[START METHODS]
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tshora
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 30, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R060RRVS3
[CLASS] combobox
[BASECLASS] combobox
[OBJNAME] tsifcombo
[START PROPERTIES]
DisabledBackColor = 192,192,192
DisplayValue = 
FontSize = 8
Height = 21
IncrementalSearch = .F.
Name = "tsifcombo"
RowSourceType = 0
Style = 0
TabIndex = 1
Width = 200
calias = 
cdestino = 
cfield = 
csearchstring = 
llimittolist = .T.
[END PROPERTIES]
[START PROTECTED]
RowSourceType
Style
[END PROTECTED]
[START METHODS]
PROCEDURE Init
LOCAL LCROWSOURCE, LNPOSFROM, LCALIAS, LCTAGNAME, LCCONTROLSOURCE, LCSQL
LCSQL = 'select '+THIS.CAMPOS+' from '+THIS.ARCHIVO+' order by '+THIS.ORDEN+' into cursor ccursor'
&LCSQL
THIS.ADDITEM('(TODOS)')
IF _TALLY>0
DO WHILE  .NOT. EOF('cCursor')
THIS.ADDITEM(EVALUATE(THIS.CAMPOS))
SKIP IN CCURSOR
ENDDO
ENDIF
LCCONTROLSOURCE = THIS.CONTROLSOURCE
LCROWSOURCE = LCSQL
LNPOSFROM = ATC("FROM", LCROWSOURCE)
LCALIAS = ALLTRIM(SUBSTR(LCROWSOURCE, LNPOSFROM+4))
LCALIAS = TRIM(LEFT(LCALIAS, AT(" ", LCALIAS)))
IF ","$LCALIAS
LCALIAS = LEFT(LCALIAS, LEN(LCALIAS)-1)
ENDIF
THIS.CALIAS = LCALIAS
IF  .NOT. EMPTY(THIS.CDESTINO)
LCTAGNAME = ALLTRIM(THIS.CDESTINO)
ELSE
LCTAGNAME = ALLTRIM(SUBSTR(LCROWSOURCE, AT(" ", LCROWSOURCE)))
LCTAGNAME = ALLTRIM(LEFT(LCTAGNAME, AT(" ", LCTAGNAME)))
IF ","$LCTAGNAME
LCTAGNAME = SUBSTR(LCTAGNAME, 1, AT(",", LCTAGNAME)-1)
ENDIF
ENDIF
IF "."$LCTAGNAME
LCTAGNAME = SUBSTR(LCTAGNAME, AT(".", LCTAGNAME)+1)
ENDIF
THIS.CFIELD = LCALIAS+"."+LCTAGNAME
LCTAGNAME = LEFT(LCTAGNAME, 10)
IF EMPTY(THIS.CDESTINO)
THIS.CDESTINO = LCTAGNAME
ENDIF
THIS.ISTAG = ISTAG(LCTAGNAME, LCALIAS)
IF  .NOT. THIS.ISTAG
WAIT WINDOW NOWAIT "La etiqueta de índice no se ha encontrado."+CHR(13)+LCTAGNAME
ENDIF
THIS.CONTROLSOURCE = LCCONTROLSOURCE
ENDPROC
**
PROCEDURE InteractiveChange
LOCAL LCFIELD
THIS.CSEARCHSTRING = ""
LCFIELD = THIS.CFIELD
IF THIS.ISTAG
=LOOKUP(&LCFIELD,  UPPER(THIS.DISPLAYVALUE), &LCFIELD,  THIS.CDESTINO)
ELSE
LOCATE FOR EVALUATE(THIS.ORDEN)=UPPER(THIS.DISPLAYVALUE)
ENDIF
ENDPROC
**
PROCEDURE KeyPress
LPARAMETERS NKEYCODE, NSHIFTALTCTRL
LOCAL LNRECNO, LCOLDALIAS
LCOLDALIAS = ALIAS()
SELECT (THIS.CALIAS)
IF BITAND(4, NSHIFTALTCTRL)==4
RETURN
ENDIF
IF INLIST(NKEYCODE, 4, 19) .OR. (INLIST(NKEYCODE, 52, 54) .AND. BITAND(1, NSHIFTALTCTRL)==1) .OR. (INLIST(2, 26) .AND. BITAND(2, NSHIFTALTCTRL)==2) .OR. NKEYCODE=127
RETURN
ENDIF
LNRECNO = RECNO(THIS.CALIAS)
DO CASE
CASE NKEYCODE=24
IF EMPTY(THIS.DISPLAYVALUE)
GOTO TOP IN (THIS.CALIAS)
ELSE
IF  .NOT. EOF(THIS.CALIAS)
SKIP IN (THIS.CALIAS)
ENDIF
IF EOF(THIS.CALIAS)
GOTO BOTTOM IN (THIS.CALIAS)
ENDIF
ENDIF
CASE NKEYCODE=5
IF EMPTY(THIS.DISPLAYVALUE)
GOTO TOP IN (THIS.CALIAS)
ELSE
IF  .NOT. BOF(THIS.CALIAS)
SKIP -1 IN (THIS.CALIAS)
ENDIF
IF BOF(THIS.CALIAS)
GOTO TOP IN (THIS.CALIAS)
ENDIF
ENDIF
CASE BETWEEN(NKEYCODE, 32, 126)
THIS.CSEARCHSTRING = THIS.CSEARCHSTRING+CHR(NKEYCODE)
OTHERWISE
RETURN
ENDCASE
NODEFAULT
IF NKEYCODE<>5 .AND. NKEYCODE<>24 .AND.  .NOT. EMPTY(THIS.CSEARCHSTRING)
IF THIS.ISTAG
= SEEK(UPPER(THIS.CSEARCHSTRING), THIS.CALIAS, THIS.CDESTINO)
ELSE
LOCATE FOR EVALUATE(THIS.ORDEN)=UPPER(THIS.CSEARCHSTRING)
ENDIF
ENDIF
IF (EMPTY(THIS.CSEARCHSTRING) .OR. EOF(THIS.CALIAS)) .AND. NKEYCODE<>5 .AND. NKEYCODE<>24
IF LNRECNO>RECCOUNT(THIS.CALIAS)
GOTO TOP IN (THIS.CALIAS)
ELSE
GOTO LNRECNO IN (THIS.CALIAS)
ENDIF
IF  .NOT. THIS.LLIMITTOLIST
THIS.DISPLAYVALUE = THIS.CSEARCHSTRING
THIS.SELLENGTH = 0
ELSE
THIS.CSEARCHSTRING = LEFT(THIS.CSEARCHSTRING, LEN(THIS.CSEARCHSTRING)-1)
ENDIF
ELSE
THIS.DISPLAYVALUE = EVALUATE(THIS.ORDEN)
THIS.SELLENGTH = LEN(THIS.DISPLAYVALUE)
ENDIF
THIS.SELSTART = LEN(THIS.CSEARCHSTRING)
SELECT (LCOLDALIAS)
ENDPROC
**
PROCEDURE LostFocus
THIS.CSEARCHSTRING = ""
THIS.SELSTART = 0
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
archivo
calias Contiene el alias donde hacer la búsqueda. 
campos
cdestino
cfield Campo al que aplicar EVAL() cuando se muestre la parte de cuadro de texto.
csearchstring Contiene el texto que el usuario está escribiendo. 
istag Indica si existe o no la etiqueta de indice.
llimittolist Es True si el usuario está limitado a agregar elementos que ya están en la lista. 
orden
[END RESERVED3]
[START RESERVED4]
..\bitmaps\intell_s.bmp[END RESERVED4]
[START RESERVED5]
..\..\tesoreria[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Cuadro combinado especial para "búsquedas inteligentes". Realiza "búsquedas" incrementales a medida que el usuario escribe texto.  [END RESERVED7]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsifcombo
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 30, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZYVNR
[CLASS] label
[BASECLASS] label
[OBJNAME] tslabel
[START PROPERTIES]
Alignment = 1
BackStyle = 0
Caption = "Etiqueta1"
Comment = ""
FontBold = .T.
FontSize = 8
Height = 22
Name = "tslabel"
Style = 4
TabIndex = 1
Width = 77
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
**
** ReFox - este procedimiento es vacío **
**
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED4]
..\bitmaps\label.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\label.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Label de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tslabel

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QZ919RBBM
[CLASS] listbox
[BASECLASS] listbox
[OBJNAME] tslistbox
[START PROPERTIES]
DisabledBackColor = 192,192,192
FontBold = .F.
FontSize = 8
Height = 104
Name = "tslistbox"
Width = 125
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
**
** ReFox - este procedimiento es vacío **
**
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED4]
..\bitmaps\listbox.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\listbox.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
ListBox de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tslistbox
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 20, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R030WRT46
[CLASS] tsbaseform
[CLASSLOC] tsbase.vcx
[BASECLASS] form
[OBJNAME] tsmaintform
[START PROPERTIES]
DoCreate = .T.
Height = 271
MDIForm = .F.
Name = "tsmaintform"
ScaleMode = 3
Width = 381
lblRequerido.Name = "lblRequerido"
[END PROPERTIES]
[START PROTECTED]
addtomenu
removefrommenu
restorewindowpos
savewindowpos
[END PROTECTED]
[START METHODS]
PROCEDURE AfterDock
THIS.PAGEFRAME1.WIDTH = THIS.WIDTH
THIS.PAGEFRAME1.HEIGHT = THIS.HEIGHT
ENDPROC
PROCEDURE Init
DODEFAULT()
THISFORM.PAGEFRAME1.PAGE2.ENABLED = THISFORM.NAVEGADOR
*THIS.HEIGHT = THIS.PAGEFRAME1.HEIGHT
*THIS.WIDTH = THIS.PAGEFRAME1.WIDTH
ENDPROC
PROCEDURE addnew
THISFORM.PAGEFRAME1.ACTIVEPAGE = 1
TSBASEFORM::ADDNEW()
ENDPROC
PROCEDURE editar
DODEFAULT()
THISFORM.PAGEFRAME1.ACTIVEPAGE = 1
THISFORM.PAGEFRAME1.PAGE1.SETFOCUS()
KEYBOARD CHR(9)
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
3[END RESERVED2]
[START RESERVED4]
..\bitmaps\form.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\form.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
El formulario de base en el que se basan todos los formularios de tipo mantenimiento.[END RESERVED7]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RWY14DL2V
[CLASS] pageframe
[BASECLASS] pageframe
[OBJNAME] Pageframe1
[PARENT] tsmaintform
[START PROPERTIES]
Anchor = 15
ErasePage = .T.
Height = 271
Left = 0
Name = "Pageframe1"
Page1.Caption = "En\<trada de datos"
Page1.FontSize = 8
Page1.Name = "Page1"
Page2.Caption = "\<Lista"
Page2.FontSize = 8
Page2.Name = "Page2"
PageCount = 2
Tabs = .T.
Top = 0
Width = 382
[END PROPERTIES]
[START METHODS]
PROCEDURE Page1.Activate
THISFORM.REFRESHFORM()
ENDPROC
PROCEDURE Page2.Activate
LOCAL LCALIAS, IREC
SET DATASESSION TO THISFORM.DATASESSIONID
LCALIAS = THISFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS
IF  .NOT. EMPTY(LCALIAS)
SELECT (LCALIAS)
ENDIF
IF THISFORM.ISNEWANDEMPTY()
THISFORM.RESTORE()
IREC = RECNO()
IF BOF()
GOTO TOP
ELSE
IF IREC>RECCOUNT()
GOTO BOTTOM
ELSE
GOTO IREC
ENDIF
ENDIF
THIS.GRDLIST.REFRESH
ELSE
IF THISFORM.DATACHANGED() .AND. THISFORM.ASKTOSAVE()=2
THISFORM.PAGEFRAME1.ACTIVEPAGE = 1
RETURN
ENDIF
THIS.REFRESH()
ENDIF
THIS.GRDLIST.SETFOCUS()
ENDPROC
PROCEDURE Page2.Init
THIS.GRDLIST.TOP = 0
THIS.GRDLIST.LEFT = 0
THIS.GRDLIST.WIDTH = THIS.PARENT.PAGEWIDTH
THIS.GRDLIST.HEIGHT = THIS.PARENT.PAGEHEIGHT
THIS.ENABLED = THISFORM.NAVEGADOR
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _RWY14DL4B
[CLASS] tsgrid
[CLASSLOC] tsbase.vcx
[BASECLASS] grid
[OBJNAME] grdList
[PARENT] tsmaintform.Pageframe1.Page2
[START PROPERTIES]
Left = 0
Name = "grdList"
ReadOnly = .T.
RecordSource = ""
TabIndex = 1
Top = 0
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
THIS.SETALL("ReadOnly", .T., "Column")
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsmaintform
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0RU0W6HZ5
[CLASS] pageframe
[BASECLASS] pageframe
[OBJNAME] tsmarco_pag
[START PROPERTIES]
ErasePage = .T.
Height = 169
Name = "tsmarco_pag"
Page1.Caption = "Page1"
Page1.Name = "Page1"
Page10.Caption = "Page10"
Page10.Name = "Page10"
Page11.Caption = "Page11"
Page11.Name = "Page11"
Page12.Caption = "Page12"
Page12.Name = "Page12"
Page13.Caption = "Page13"
Page13.Name = "Page13"
Page14.Caption = "Page14"
Page14.Name = "Page14"
Page15.Caption = "Page15"
Page15.Name = "Page15"
Page2.Caption = "Page2"
Page2.Name = "Page2"
Page3.Caption = "Page3"
Page3.Name = "Page3"
Page4.Caption = "Page4"
Page4.Name = "Page4"
Page5.Caption = "Page5"
Page5.Name = "Page5"
Page6.Caption = "Page6"
Page6.Name = "Page6"
Page7.Caption = "Page7"
Page7.Name = "Page7"
Page8.Caption = "Page8"
Page8.Name = "Page8"
Page9.Caption = "Page9"
Page9.Name = "Page9"
PageCount = 15
Width = 241
[END PROPERTIES]
[START METHODS]
PROCEDURE Page1.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page1.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page10.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page10.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page11.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page11.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page12.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page12.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page13.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page13.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page14.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page14.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page15.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page15.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page2.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page2.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page3.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page3.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page4.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page4.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page5.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page5.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page6.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page6.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page7.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page7.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page8.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page8.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
PROCEDURE Page9.Activate
THIS.PARENT.FILTRAR()
THIS.FORECOLOR = RGB(19, 47, 236)
ENDPROC
**
PROCEDURE Page9.Deactivate
THIS.FORECOLOR = RGB(0, 0, 0)
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*filtrar Filtro de integrantes por CAR
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsmarco_pag

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0P20LQ870
[CLASS] tsmaintform
[CLASSLOC] tsbase.vcx
[BASECLASS] form
[OBJNAME] tsmovform
[START PROPERTIES]
DoCreate = .T.
HalfHeightCaption = .T.
Name = "tsmovform"
Pageframe1.ErasePage = .T.
Pageframe1.Name = "Pageframe1"
Pageframe1.Page1.Name = "Page1"
Pageframe1.Page2.Enabled = .F.
Pageframe1.Page2.Name = "Page2"
Pageframe1.Page2.grdList.Name = "grdList"
areaprincipal = _xcConsulta
asientorecordsource = 
asientorecordsource2 = 
idasiento = 
idasiento2 = 
lblRequerido.Name = "lblRequerido"
navegador = .F.
proyecto = 
[END PROPERTIES]
[START METHODS]
PROCEDURE Destroy
DODEFAULT()
ENDPROC
PROCEDURE Init
DODEFAULT()
IF  .NOT. EMPTY(THIS.IDASIENTO) .AND. OAPP.ASENTAR
	LOCAL NPAGINA, OPAGE AS PAGE, LCSUFIJO
	LCSUFIJO = "1"
	THISFORM.PAGEFRAME1.PAGECOUNT = THISFORM.PAGEFRAME1.PAGECOUNT+1
	NPAGINA = THISFORM.PAGEFRAME1.PAGECOUNT
	THISFORM.PAGEFRAME1.PAGES(NPAGINA).ADDOBJECT('Asiento', 'Asiento', LCSUFIJO)
	OPAGE = THISFORM.PAGEFRAME1.PAGES(NPAGINA)
	OPAGE.ASIENTO.VISIBLE = .T.
	OPAGE.ASIENTO.LEFT = 10
	OPAGE.ASIENTO.TOP = 10
	OPAGE.ASIENTO.CONTROLSOURCE = THIS.ASIENTORECORDSOURCE
	OPAGE.CAPTION = 'Asiento '
	OPAGE.FONTSIZE = 8
ENDIF
IF  .NOT. EMPTY(THIS.IDASIENTO2) .AND. OAPP.ASENTAR
	LOCAL NPAGINA, OPAGE AS PAGE, LCSUFIJO
	LCSUFIJO = "2"
	THISFORM.PAGEFRAME1.PAGECOUNT = THISFORM.PAGEFRAME1.PAGECOUNT+1
	NPAGINA = THISFORM.PAGEFRAME1.PAGECOUNT
	THISFORM.PAGEFRAME1.PAGES(NPAGINA).ADDOBJECT('Asiento', 'Asiento', LCSUFIJO)
	OPAGE = THISFORM.PAGEFRAME1.PAGES(NPAGINA)
	OPAGE.ASIENTO.VISIBLE = .T.
	OPAGE.ASIENTO.LEFT = 10
	OPAGE.ASIENTO.TOP = 10
	OPAGE.ASIENTO.CONTROLSOURCE = THIS.ASIENTORECORDSOURCE2
	OPAGE.CAPTION = 'Asiento 2'
	OPAGE.FONTSIZE = 8
ENDIF

*!*	IF  .NOT. EMPTY(THIS.proyecto) .AND. OAPP.PROYECTO='S'
*!*		THISFORM.PAGEFRAME1.PAGECOUNT = THISFORM.PAGEFRAME1.PAGECOUNT+1
*!*		NPAGINA = THISFORM.PAGEFRAME1.PAGECOUNT
*!*		OPAGE = THISFORM.PAGEFRAME1.PAGES(NPAGINA)
*!*		OPAGE.CAPTION = 'Proyectos'
*!*		OPAGE.FONTSIZE = 8

*!*	ENDIF


ENDPROC
PROCEDURE afteraddnew
IF USED('_xcConsulta')
USE IN _XCCONSULTA
THIS.NAVEGADOR = .F.
OAPP.OTOOLBAR.REFRESH()
THISFORM.PAGEFRAME1.PAGE2.ENABLED = .F.
ENDIF
DODEFAULT()
ENDPROC
PROCEDURE afterupdate
IF OAPP.ASENTAR .AND.  .NOT. EMPTY(THIS.IDASIENTO) .AND. EMPTY(NVL(EVALUATE(THIS.ASIENTORECORDSOURCE), 0))
	IF MESSAGEBOX('Desea asentar esta operación', 0292, "Futura Software")=6
		THISFORM.PAGEFRAME1.PAGES(THISFORM.PAGEFRAME1.PAGECOUNT).ASIENTO.ASENTAR(THIS.IDASIENTO)
		RETURN .F.
	ENDIF
ENDIF
ENDPROC
PROCEDURE afterupdatetabla1
IF ! OAPP.ASENTAR 
	return
ENDIF


IF  .NOT. EMPTY(THIS.IDASIENTO) .AND.  .NOT. EMPTY(EVALUATE(THIS.ASIENTORECORDSOURCE))
	IF !THISFORM.PAGEFRAME1.PAGES(THISFORM.PAGEFRAME1.PAGECOUNT).ASIENTO.validar()
		RETURN .f.
	ENDIF
		

	IF EMPTY(VXASIENTOS1.NÚMERO)
		LCCAMPONRO = THISFORM.CAMPONRO
		LCCAMPOTAM = THISFORM.CAMPOTAM
		THISFORM.CAMPONRO = 'número,CN_Asientos,idempresa = ?oApp.Empresa and ejercicio = ' + STR(YEAR(VXASIENTOS1.fecha))
		THISFORM.CAMPOTAM = 0
		REPLACE VXASIENTOS1.NÚMERO WITH THIS.ULTIMONRO IN VXASIENTOS1
		THISFORM.CAMPONRO = LCCAMPONRO
		THISFORM.CAMPOTAM = LCCAMPOTAM
	ENDIF
ENDIF

IF  .NOT. EMPTY(THIS.IDASIENTO2) .AND.  .NOT. EMPTY(EVALUATE(THIS.ASIENTORECORDSOURCE2))
	IF EMPTY(VXASIENTOS2.NÚMERO)

		LCCAMPONRO = THISFORM.CAMPONRO
		LCCAMPOTAM = THISFORM.CAMPOTAM
		THISFORM.CAMPONRO = 'número,CN_Asientos,idempresa = ?oApp.Empresa and ejercicio = ' + STR(YEAR(VXASIENTOS2.fecha))
		THISFORM.CAMPOTAM = 0
		
		IF YEAR(VXASIENTOS1.fecha)=YEAR(VXASIENTOS2.fecha)
			REPLACE VXASIENTOS2.NÚMERO WITH THIS.ULTIMONRO+1 IN VXASIENTOS2
		ELSE
			REPLACE VXASIENTOS2.NÚMERO WITH THIS.ULTIMONRO IN VXASIENTOS2
		ENDIF
			
		THISFORM.CAMPONRO = LCCAMPONRO
		THISFORM.CAMPOTAM = LCCAMPOTAM

	ENDIF
ENDIF


ENDPROC
PROCEDURE consultar
Parameter LCSQL
Local CSQL, LNRESULTADO, LCALIAS
LCALIAS = Alias()
If Pcount()=1
	CSQL = LCSQL
Else
	Do Form sysconsultar To CSQL With This.TABLACONSULTA
Endif
If  .Not. Empty(CSQL)
	If Thisform.PAGEFRAME1.PAGE2.GRDLIST.RecordSource='_xcConsulta'
		Thisform.PAGEFRAME1.PAGE2.GRDLIST.RecordSource = ''
	Endif
	LNRESULTADO = Sql(CSQL, '_xcConsulta')
	If LNRESULTADO>0
		If Reccount('_xcConsulta')>0
			Thisform.PAGEFRAME1.PAGE2.GRDLIST.RecordSource = '_xcConsulta'
			This.NAVEGADOR = .T.
			Select _XCCONSULTA
			OAPP.OTOOLBAR.Refresh()
			Thisform.PAGEFRAME1.PAGE2.Enabled = .T.
		Else
			Messagebox('No se ha encontrado ninguna coincidencia', 64, "Futura Software")
		Endif
	Else
		= Aerror(LAERROR)
		Messagebox('El servidor devolvió un error en la ejecución de la sentencia.'+Chr(13)+LAERROR(2))
	Endif
Endif
If  .Not. Empty(LCALIAS)
	Select (LCALIAS)
Endif
ENDPROC
PROCEDURE delete
***07-03-2007
* Elimina tambien el 2do. asiento 

LOCAL M.IDASIENTO,M.IDASIENTO2
m.IDASIENTO = ''
m.IDASIENTO2 = ''

IF EMPTY(THIS.ASIENTORECORDSOURCE)
	DODEFAULT()
	RETURN
ENDIF


IF  .NOT. EMPTY(NVL(EVALUATE(THIS.ASIENTORECORDSOURCE), 0))
	m.IDASIENTO = STR(EVALUATE(THIS.ASIENTORECORDSOURCE), 10, 0)
ENDIF
IF !EMPTY(THIS.ASIENTORECORDSOURCE2) AND  .NOT. EMPTY(NVL(EVALUATE(THIS.ASIENTORECORDSOURCE2), 0))
	m.IDASIENTO2 = STR(EVALUATE(THIS.ASIENTORECORDSOURCE2), 10, 0)
ENDIF





IF DODEFAULT()
	IF OAPP.ASENTAR .AND.  .NOT. EMPTY(THIS.IDASIENTO) .AND.  .NOT. EMPTY(M.IDASIENTO)
		IF MESSAGEBOX('Desea eliminar tambien el asiento de esta operación?', 0292, "Futura Software")=6

			THIS.RUNSQL("Delete cn_Asientos where idAsiento = "+M.IDASIENTO, 'cn_Borrar')

			***Elimina 2do. asiento
			IF !EMPTY(M.IDASIENTO2) 
				THIS.RUNSQL("Delete cn_Asientos where idAsiento = "+M.IDASIENTO2, 'cn_Borrar')
			ENDIF 	
		ENDIF
	ENDIF
ENDIF
ENDPROC
PROCEDURE refreshform
Parameter _IDENTIDAD
Local LCOLDID, LCNEWID, LCESTADO
If  .Not. Thisform.EDITMODE .And.  .Not. This.ESNUEVO
	LCOLDID = Thisform.TABLA1
	LCOLDID = LCOLDID+'.'+Thisform.IDENTIDAD
	LCOLDID = &LCOLDID
	LCESTADO = 0
	If Pcount()>0
		LCNEWID = '_Identidad'
	Else
		LCNEWID = '_xcConsulta.'+Thisform.IDENTIDAD
	Endif
	If Type(LCNEWID)<>'U'
		LCNEWID = &LCNEWID
		If LCOLDID<>LCNEWID
			LCOLDID = 'm.'+Thisform.IDENTIDAD
			&LCOLDID = LCNEWID
			Requery(Thisform.TABLA1)
			LCESTADO = Reccount(Thisform.TABLA1)
		Endif
	Endif
Endif
DoDefault()
Return LCESTADO
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
asientorecordsource Representa la columna del asiento para relacionar con Contabilidad
asientorecordsource2 Representa la columna del asiento para relacionar con Contabilidad, 2da. columna.
idasiento Codigo del Generador de Asientos.
idasiento2 Codigo del Generador del 2do. asiento, si corresponde.
identidad Indica en campo indentificador del registro.
proyecto
tablaconsulta Indica el nombre del cursor donde devuelta la consulta.
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsmovform
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] optiongroup
[BASECLASS] optiongroup
[OBJNAME] tsoptiongroup
[START PROPERTIES]
BackStyle = 0
ButtonCount = 2
Height = 48
Name = "tsoptiongroup"
OPTION1.Caption = "Opción1"
OPTION1.FontSize = 8
OPTION1.Height = 18
OPTION1.Left = 5
OPTION1.Top = 5
OPTION1.Value = 1
OPTION1.Width = 75
OPTION2.Caption = "Opción2"
OPTION2.FontSize = 8
OPTION2.Height = 18
OPTION2.Left = 5
OPTION2.Top = 25
OPTION2.Value = 0
OPTION2.Width = 75
Option1.BackStyle = 0
Option1.Name = "Option1"
Option2.BackStyle = 0
Option2.Name = "Option2"
Value = 1
Width = 85
[END PROPERTIES]
[START METHODS]
PROCEDURE Init
**
** ReFox - este procedimiento es vacío **
**
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
OptionGroup de base[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsoptiongroup
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 20, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0PR0QZWEL
[CLASS] spinner
[BASECLASS] spinner
[OBJNAME] tsspinner
[START PROPERTIES]
FontSize = 8
Height = 24
Name = "tsspinner"
Width = 120
[END PROPERTIES]
[START METHODS]
PROCEDURE Refresh
IF THIS.EDITABLE
THIS.ENABLED = THISFORM.EDITMODE
ENDIF
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
editable
[END RESERVED3]
[START RESERVED6]
Pixels[END RESERVED6]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tsspinner
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 30, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QZ919RZC7
[CLASS] textbox
[BASECLASS] textbox
[OBJNAME] tstextbox
[START PROPERTIES]
Anchor = 0
DateFormat = 11
DisabledForeColor = 0,0,0
Enabled = .T.
FontSize = 8
Format = "K"
Hours = 24
InputMask = ""
Name = "tstextbox"
NullDisplay = " "
TabIndex = 1
Width = 100
cambio = .F.
camposec = 
condicionvalidacion = 
datoayuda = 
editable = .T.
inputmaskdinamico = 
mensajevalidacion = 
parametroayuda = 
retayuda = 
validar = .F.
[END PROPERTIES]
[START METHODS]
PROCEDURE GotFocus
DO CASE
CASE TYPE('this.value')="C"
THIS.TAG = IIF(ISNULL(THIS.VALUE), '', THIS.VALUE)
CASE TYPE('this.value')="N" .OR. TYPE('this.value')="Y"
THIS.TAG = STR(IIF(ISNULL(THIS.VALUE), 0, THIS.VALUE))
CASE TYPE('this.value')="D"
THIS.TAG = DTOC(IIF(ISNULL(THIS.VALUE), {}, THIS.VALUE))
ENDCASE
ENDPROC
PROCEDURE Init
If Type("BORDER_COLOR")="N"
	If  .Not. Empty("13875625")
		This.BorderColor = Val("13875625")
	Else
		This.ResetToDefault("BorderColor")
	Endif
Endif
If Type(This.ControlSource)="C" .And. Empty(This.InputMask)
	This.InputMask = Replicate("X", Fsize(Substr(This.ControlSource, At(".", This.ControlSource)+1)))
Endif
If Empty(This.StatusBarText)
	This.StatusBarText = Alltrim(This.Comment)+Iif(Empty(This.DATOAYUDA), "", " Presione F8 para ver una lista de "+This.DATOAYUDA+".")
Endif
If This.REQUERIDO .And. Empty(This.CONDICIONVALIDACION)
	This.CONDICIONVALIDACION = "!Empty("+This.ControlSource+")"
Endif
If  .Not. Empty(This.CONDICIONVALIDACION)
	I = Alen(Thisform.VALIDARCONTROLES)
	Dimension Thisform.VALIDARCONTROLES(I+1)
	Thisform.VALIDARCONTROLES(I) = This
ENDIF

ENDPROC
PROCEDURE KeyPress
LPARAMETERS NKEYCODE, NSHIFTALTCTRL
LOCAL VALORANT
IF LASTKEY()=-7
IF EMPTY(THIS.DATOAYUDA)
MESSAGEBOX('No hay ayuda disponible sobre este tema.')
ELSE
= THIS.AYUDA()
ENDIF
ENDIF
ENDPROC
PROCEDURE Refresh
If This.EDITABLE
	If This.SOLONUEVO
		This.Enabled = Thisform.EDITMODE .And. Iif(Isnull(Getfldstate(-1, Thisform.TABLA1)), .F., ("3"$Getfldstate(-1, Thisform.TABLA1) .Or. "4"$Getfldstate(-1, Thisform.TABLA1)))
	Else
		This.Enabled = Thisform.EDITMODE
	Endif
Endif
If  .Not. Empty(This.INPUTMASKDINAMICO)
	This.InputMask = Evaluate(This.INPUTMASKDINAMICO)
Endif
ENDPROC
PROCEDURE ayuda
LOCAL CTABLA
VALORANT = THIS.VALUE
THIS.VAL_PRE = THIS.VALUE
THIS.VAL_POS = THIS.VALUE
USE SHARED datos!ayudaDat IN 0
IF SEEK(UPPER(THIS.DATOAYUDA), 'AyudaDat', 'archivo')
CTABLA = THIS.DATOAYUDA
THIS.VALUE = ''
THIS.VALIDAR = .F.
IF  .NOT. EMPTY(THIS.PARAMETROAYUDA)
DO FORM buscar TO THIS.RETAYUDA WITH RECNO('AyudaDat'), THIS.PARAMETROAYUDA
ELSE
DO FORM buscar TO THIS.RETAYUDA WITH RECNO('AyudaDat')
ENDIF
IF  .NOT. EMPTY(THIS.RETAYUDA)
THIS.VALIDAR = .T.
THIS.CAMBIO = .T.
THIS.VALUE = THIS.RETAYUDA
THIS.VAL_POS = THIS.RETAYUDA
THIS.VALID()
KEYBOARD CHR(13)
ELSE
THIS.VALUE = VALORANT
ENDIF
ELSE
MESSAGEBOX('No hay ayuda disponible sobre este tema.')
ENDIF
USE IN AYUDADAT
ENDPROC
PROCEDURE parametroayuda_access
LOCAL LCPARAMETRO
IF  .NOT. EMPTY(THIS.PARAMETROAYUDA)
LCPARAMETRO = EVALUATE(THIS.PARAMETROAYUDA)
ELSE
LCPARAMETRO = ' '
ENDIF
RETURN LCPARAMETRO
ENDPROC
PROCEDURE validarauto
RETURN EVALUATE(THIS.CONDICIONVALIDACION)
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
*ayuda Programa de ayuda para este objeto.
*parametroayuda_access 
*validarauto 
cambio Indica si ha cambiado el valor del control.
camposec campo secundaria que desee desplegar con el campo principal
condicionvalidacion
datoayuda Nombre del archivo de datos al cual se mostrará la ayuda. 
editable Indica si se puede editar el control.
inputmaskdinamico Indica si se vuelve a configurar el InputMask cada vez que cambia el valor del control.
mensajevalidacion
parametroayuda Parametro que se envia a la ayuda.
requerido Indica si es un campo requerido.
retayuda Valor devuelto por la ayuda.
solonuevo Indica si se puede editar solo cuando se agrega un nuevo registro.
val_pos valor despues de ejecutar la ayuda
val_pre valor antes de ejecutar la ayuda
validar Indica si se puede o no validar el control
[END RESERVED3]
[START RESERVED4]
..\bitmaps\textbox.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\textbox.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
TextBox de base[END RESERVED7]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tstextbox
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020JYRO3
[CLASS] tsbaseform
[CLASSLOC] tsbase.vcx
[BASECLASS] form
[OBJNAME] tstextform
[START PROPERTIES]
AutoCenter = .F.
BorderStyle = 3
BufferMode = 0
Caption = "Formulario 1"
ControlBox = .F.
DataSession = 2
DoCreate = .T.
HalfHeightCaption = .T.
Height = 341
Left = 25
MaxButton = .T.
MinHeight = 200
MinWidth = 400
Name = "tstextform"
ScaleMode = 3
Top = 54
Width = 422
WindowType = 1
ctoolbar = 
lallowdelete = .F.
lallowedits = .F.
lallownew = .F.
lblRequerido.Name = "lblRequerido"
[END PROPERTIES]
[START PROTECTED]
addtomenu
removefrommenu
restorewindowpos
savewindowpos
[END PROTECTED]
[START METHODS]
PROCEDURE Resize
THISFORM.LOCKSCREEN = .T.
THISFORM.EDTTEXT.WIDTH = THISFORM.WIDTH
THISFORM.EDTTEXT.HEIGHT = THISFORM.HEIGHT-54
THISFORM.CMDCLOSE.LEFT = INT(THISFORM.WIDTH/4)
THISFORM.CMDPRINT.LEFT = INT(THISFORM.WIDTH/1.75 )
THISFORM.CMDCLOSE.TOP = THISFORM.HEIGHT-42
THISFORM.CMDPRINT.TOP = THISFORM.CMDCLOSE.TOP
THISFORM.LOCKSCREEN = .F.
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
5[END RESERVED2]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Clase de base para todos los formularios que ven campos memo o archivos de texto. [END RESERVED7]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdClose
[PARENT] tstextform
[START PROPERTIES]
Cancel = .T.
Caption = "\<Cancelar"
Height = 23
Left = 300
Name = "cmdClose"
TabIndex = 2
Top = 304
Width = 111
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
THISFORM.COMMENT = "C"
THISFORM.HIDE()
ENDPROC
**
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020JYRN9
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdPrint
[PARENT] tstextform
[START PROPERTIES]
Caption = "\<Imprimir"
Height = 31
Left = 24
Name = "cmdPrint"
TabIndex = 3
Top = 300
Visible = .F.
Width = 111
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020JYRKR
[CLASS] tseditbox
[CLASSLOC] tsbase.vcx
[BASECLASS] editbox
[OBJNAME] edtText
[PARENT] tstextform
[START PROPERTIES]
ControlSource = ""
Height = 288
Left = 0
Name = "edtText"
TabIndex = 1
Top = 0
Width = 420
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1UL0RPYFY
[CLASS] tscommandbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] Tscommandbutton1
[PARENT] tstextform
[START PROPERTIES]
Cancel = .F.
Caption = "\<Aceptar"
Height = 23
Left = 180
Name = "Tscommandbutton1"
TabIndex = 2
Top = 304
Width = 111
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
THISFORM.HIDE()
ENDPROC
**
[END METHODS]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tstextform
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
Arial, 1, 8, 5, 14, 11, 29, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K4VL1
[CLASS] toolbar
[BASECLASS] toolbar
[OBJNAME] tstoolbar
[START PROPERTIES]
Caption = "Herramientas de desplazamiento"
ControlBox = .F.
DataSession = 1
Height = 47
Left = 33
Name = "tstoolbar"
ScaleMode = 3
Top = 8
Visible = .F.
Width = 823
ultimoenlace = 
[END PROPERTIES]
[START PROTECTED]
restorewindowpos
savewindowpos
ultimoenlace
[END PROTECTED]
[START METHODS]
PROCEDURE Destroy
THIS.SAVEWINDOWPOS()
THIS.VISIBLE = .F.
ENDPROC
PROCEDURE Init
IF  .NOT. THIS.RESTOREWINDOWPOS()
THIS.DOCK(0)
ENDIF
ENDPROC
PROCEDURE Refresh
LPARAMETERS TCCONDITION
LOCAL LLBOF, LLEOF, LLALLOWEDITS, LLALLOWNEW, LLSAVEANDRESTORE, LLEDITMODE, LLDETALLE, LLALLOWDELETE, LALLOWANULAR, LALLOWCONSULTAR
IF PARAMETERS()=0
TCCONDITION = ""
ENDIF
LLBOF = BOF() .OR. (TCCONDITION="BOF")
LLEOF = EOF() .OR. (TCCONDITION="EOF")
IF FORMISOBJECT()
SINAVEG = _SCREEN.ACTIVEFORM.NAVEGADOR
LLEDITMODE = _SCREEN.ACTIVEFORM.EDITMODE
THIS.CARGARENLACE()
ELSE
SINAVEG = .F.
ENDIF
IF SINAVEG .AND.  .NOT. LLEDITMODE
THIS.CMDFIRST.ENABLED =  .NOT. LLBOF
THIS.CMDPRIOR.ENABLED =  .NOT. LLBOF
THIS.CMDNEXT.ENABLED =  .NOT. LLEOF
THIS.CMDLAST.ENABLED =  .NOT. LLEOF
ELSE
THIS.CMDFIRST.ENABLED = .F.
THIS.CMDPRIOR.ENABLED = .F.
THIS.CMDNEXT.ENABLED = .F.
THIS.CMDLAST.ENABLED = .F.
ENDIF
IF FORMISOBJECT()
IF TYPE("_screen.Activeform.lAllowEdits")<>"U"
LLALLOWEDITS = _SCREEN.ACTIVEFORM.LALLOWEDITS
LLALLOWNEW = _SCREEN.ACTIVEFORM.LALLOWNEW
LLALLOWDELETE = _SCREEN.ACTIVEFORM.LALLOWDELETE
LLEDITMODE = _SCREEN.ACTIVEFORM.EDITMODE
LLDETALLE = _SCREEN.ACTIVEFORM.DETALLE
LALLOWANULAR = _SCREEN.ACTIVEFORM.LALLOWANULAR
LALLOWCONSULTAR = _SCREEN.ACTIVEFORM.LALLOWCONSULTAR
THIS.CMDNEW.ENABLED = LLALLOWNEW .AND.  .NOT. LLEDITMODE
THIS.CMDBORRAR.ENABLED = LLALLOWDELETE .AND.  .NOT. LLEDITMODE
THIS.CMDSAVE.ENABLED = LLEDITMODE
THIS.CMDRESTORE.ENABLED = LLEDITMODE
THIS.CMDEDIT.ENABLED =  .NOT. LLEDITMODE .AND. LLALLOWEDITS
THIS.CMDPRINT.ENABLED =  .NOT. LLEDITMODE
THIS.CMDCLOSE.ENABLED = _SCREEN.ACTIVEFORM.CLOSABLE
THIS.CMDBUSCAR.ENABLED =  .NOT. LLEDITMODE .AND. LALLOWCONSULTAR
THIS.CMDQBFMODE.ENABLED =  .NOT. LLEDITMODE
THIS.CMDADDITEM.ENABLED = LLEDITMODE
THIS.CMDDELITEM.ENABLED = LLEDITMODE
THIS.CMDADDITEM.VISIBLE = LLDETALLE
THIS.CMDDELITEM.VISIBLE = LLDETALLE
THIS.CMDANULAR.VISIBLE = LALLOWANULAR
ENDIF
ENDIF
RETURN
ENDPROC
PROCEDURE cargarenlace
IF THIS.ULTIMOENLACE=_SCREEN.ACTIVEFORM.CAPTION
RETURN
ENDIF
THIS.CBOENLACES.ROWSOURCETYPE = 0
THIS.CBOENLACES.CLEAR()
IF  .NOT. EMPTY(_SCREEN.ACTIVEFORM.ENLACES)
NELEM = ALINES(AENLACES, _SCREEN.ACTIVEFORM.ENLACES, .T., ",")
CELEMENTOS = ""
FOR I = 1 TO NELEM
IF  .NOT. EMPTY(CELEMENTOS)
CELEMENTOS = CELEMENTOS+","
ENDIF
CELEMENTOS = CELEMENTOS+"'"+AENLACES(I)+"'"
ENDFOR
THIS.CBOENLACES.ROWSOURCETYPE = 3
THIS.CBOENLACES.ROWSOURCE="Select Titulo,Comando from vinculos WHERE Titulo in(&cElementos) INTO CURSOR cEnlaces"
IF USED('vinculo')
USE IN VINCULO
ENDIF
ENDIF
THIS.ULTIMOENLACE = _SCREEN.ACTIVEFORM.CAPTION
ENDPROC
PROCEDURE oktosend
RETURN (FORMISOBJECT() .AND. TYPE("_screen.ActiveForm.cToolBar")<>"U" .AND.  .NOT. EMPTY(_SCREEN.ACTIVEFORM.CTOOLBAR))
ENDPROC
PROCEDURE parsecondition
LPARAMETERS CCONDITION, CCONTROLSOURCE
LOCAL LCRETCONDITION, LCFIELDNAME
IF TYPE('cCondition')='C'
CCONDITION = ALLTRIM(CCONDITION)
ENDIF
LCFIELDNAME = SUBSTRC(CCONTROLSOURCE, (RATC(".", CCONTROLSOURCE)+1))
IF  .NOT. EMPTY(CCONDITION)
IF TYPE('cCondition')$"CM"
IF ("<"$CCONDITION .OR. "=="$CCONDITION .OR. "LIKE"$CCONDITION .OR. "<>"$CCONDITION .OR. "!="$CCONDITION .OR. "#"$CCONDITION .OR. "="$CCONDITION .OR. ">"$CCONDITION)
LCRETCONDITION = LCFIELDNAME+CCONDITION
ENDIF
ENDIF
IF EMPTY(LCRETCONDITION)
DO CASE
CASE TYPE(CCONTROLSOURCE)$"CM"
LCRETCONDITION = LCFIELDNAME+" = "+CHR(34)+CCONDITION+CHR(34)
CASE TYPE(CCONTROLSOURCE)$"DT"
LCRETCONDITION = LCFIELDNAME+" = {"+DTOC(CCONDITION)+"}"
OTHERWISE
LCRETCONDITION = LCFIELDNAME+" = "+STR(CCONDITION)
ENDCASE
ENDIF
ELSE
LCRETCONDITION = ""
ENDIF
RETURN LCRETCONDITION
ENDPROC
PROCEDURE restorewindowpos
LOCAL LCBUFFER, LCOLDERROR, LNTOP, LNLEFT, LLERROR, LNCOMMAPOS, LNDOCKPOSITION
LCBUFFER = SPACE(10)+CHR(0)
LCOLDERROR = ON('ERROR')
LNDOCKPOSITION = 0
IF GETPRIVSTR("WindowPositions", THIS.CAPTION, "", @LCBUFFER, LEN(LCBUFFER), CURDIR()+"FUTURA.INI")>0
ON ERROR LLERROR = .T.
LNCOMMAPOS = AT(",", LCBUFFER)
IF LNCOMMAPOS>0
LNTOP = VAL(LEFT(LCBUFFER, LNCOMMAPOS-1))
LNLEFT = VAL(SUBSTR(LCBUFFER, LNCOMMAPOS+1))
ELSE
LNDOCKPOSITION = VAL(LCBUFFER)
ENDIF
ON ERROR &LCOLDERROR
IF  .NOT. LLERROR
IF LNCOMMAPOS>0
THIS.TOP = LNTOP
THIS.LEFT = LNLEFT
ELSE
THIS.DOCK(LNDOCKPOSITION)
ENDIF
ENDIF
ELSE
RETURN .F.
ENDIF
ENDPROC
PROCEDURE savewindowpos
LOCAL LCVALUE
IF THIS.DOCKED
LCVALUE = ALLTRIM(STR(THIS.DOCKPOSITION))
ELSE
LCVALUE = ALLTRIM(STR(THISFORM.TOP))+','+ALLTRIM(STR(THISFORM.LEFT))
ENDIF
= WRITEPRIVSTR("WindowPositions", THIS.CAPTION, LCVALUE, CURDIR()+"FUTURA.INI")
ENDPROC
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
23[END RESERVED2]
[START RESERVED3]
*cargarenlace 
*estadonav Actualiza el estado del navegador.
*oktosend Devuelve .T. si el formulario activo puede recibir mensajes de esta barra de herramientas. 
*parsecondition 
*restorewindowpos Restaura la posición de la ventana del archivo INI.
*savewindowpos Guarda la posición de la barra de herramientas en el archivo INI.
qbf_table
ultimoenlace
[END RESERVED3]
[START RESERVED4]
..\..\backup\mainsamp\bitmaps\toolbar.bmp[END RESERVED4]
[START RESERVED5]
..\..\backup\mainsamp\bitmaps\toolbar.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Clase estánda de barra de herramientas[END RESERVED7]
[START RESERVED8]
..\include\tastrade.h[END RESERVED8]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _1O9148PFW
[CLASS] combobox
[BASECLASS] combobox
[OBJNAME] cboEnlaces
[PARENT] tstoolbar
[START PROPERTIES]
FontSize = 8
Height = 41
Left = 798
Name = "cboEnlaces"
RowSourceType = 1
SpecialEffect = 1
ToolTipText = "Formularios relacionados"
Top = 3
Width = 20
[END PROPERTIES]
[START METHODS]
PROCEDURE InteractiveChange
CCOMANDO = CENLACES.COMANDO
THIS.VALUE = ""
= EXECSCRIPT(CCOMANDO)
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0C418CB4Z
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdAddItem
[PARENT] tstoolbar
[START PROPERTIES]
Caption = "+ Item"
FontName = "Arial"
FontSize = 8
Height = 40
Left = 498
Name = "cmdAddItem"
Picture = ..\bitmaps\wzplus.bmp
SpecialEffect = 2
ToolTipText = "Agregar Detalle (CTRL+ Ins) "
Top = 3
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.AGREGARITEM()
ENDPROC
PROCEDURE RightClick
_SCREEN.ACTIVEFORM.AGREGARITEM(.T.)
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] cmdAnular
[PARENT] tstoolbar
[START PROPERTIES]
AutoSize = .F.
Caption = "Anular"
ColorScheme = 1
Enabled = .T.
FontBold = .F.
FontName = "Arial"
FontSize = 8
Height = 40
Left = 750
Name = "cmdAnular"
SpecialEffect = 2
Style = 0
TabIndex = 23
ToolTipText = "Anular (CTRL+A)"
Top = 3
Visible = .T.
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.ANULAR()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] cmdBorrar
[PARENT] tstoolbar
[START PROPERTIES]
AutoSize = .F.
Caption = "Eliminar"
ColorScheme = 1
Enabled = .T.
FontBold = .F.
FontName = "Arial"
FontSize = 8
Height = 40
Left = 344
Name = "cmdBorrar"
Picture = ..\bitmaps\delete.bmp
SpecialEffect = 2
Style = 0
TabIndex = 23
ToolTipText = "Eliminar (CTRL+E)"
Top = 3
Visible = .T.
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.DELETE()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _S5W0GLT0H
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdbuscar
[PARENT] tstoolbar
[START PROPERTIES]
Caption = "Consultar"
FontName = "Arial"
FontSize = 8
Height = 40
Left = 449
Name = "cmdbuscar"
Picture = ..\bitmaps\findhs.bmp
SpecialEffect = 2
ToolTipText = "Buscar (CTRL+B)"
Top = 3
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.CONSULTAR()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0240PVQZW
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] cmdClearFilter
[PARENT] tstoolbar
[START PROPERTIES]
AutoSize = .F.
Caption = "Sin Filtro"
Enabled = .F.
FontBold = .F.
FontName = "Arial"
FontSize = 8
Height = 40
Left = 694
Name = "cmdClearFilter"
Picture = ..\bitmaps\textbox.bmp
SpecialEffect = 2
TabIndex = 25
ToolTipText = "Borrar Filtro"
Top = 3
Visible = .F.
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
SET FILTER TO
GOTO TOP
THIS.ENABLED = .F.
_SCREEN.ACTIVEFORM.REFRESH
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZYVNR
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdClose
[PARENT] tstoolbar
[START PROPERTIES]
Caption = "Cerrar"
FontSize = 8
Height = 40
Left = 393
Name = "cmdClose"
Picture = ..\bitmaps\close.bmp
SpecialEffect = 2
Style = 0
ToolTipText = "Cerrar (CTRL+F4)"
Top = 3
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
IF _SCREEN.ACTIVEFORM.QUERYUNLOAD()
IF FORMISOBJECT()
_SCREEN.ACTIVEFORM.RELEASE()
ENDIF
ENDIF
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0C418CB5T
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdDelItem
[PARENT] tstoolbar
[START PROPERTIES]
Caption = "- Item"
FontName = "Arial"
FontSize = 8
Height = 40
Left = 547
Name = "cmdDelItem"
Picture = ..\bitmaps\wzdelete.bmp
SpecialEffect = 2
ToolTipText = "Eliminar Detalle (CTRL+Supr)"
Top = 3
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.BORRARITEM()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _02M0JN8BY
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdEdit
[PARENT] tstoolbar
[START PROPERTIES]
AutoSize = .F.
Caption = "Modificar"
Enabled = .T.
FontSize = 8
Height = 40
Left = 246
Name = "cmdEdit"
Picture = ..\bitmaps\wzedit.bmp
SpecialEffect = 2
TabIndex = 6
ToolTipText = "Modificar (CTRL+M)"
Top = 3
Visible = .T.
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.EDITAR()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0240PVR09
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] cmdExecuteQBF
[PARENT] tstoolbar
[START PROPERTIES]
Caption = "Aplicar"
Enabled = .F.
FontBold = .F.
FontName = "Arial"
FontSize = 8
Height = 40
Left = 645
Name = "cmdExecuteQBF"
Picture = ..\bitmaps\locate.bmp
SpecialEffect = 2
TabIndex = 24
ToolTipText = "Aplicar Filtro (CTRL + A)"
Top = 3
Visible = .F.
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
LOCAL CFILTER
CFILTER = ""
FOR NCNT = 1 TO _SCREEN.ACTIVEFORM.PAGEFRAME1.PAGE1.CONTROLCOUNT
IF TYPE('_screen.ActiveForm.PageFrame1.Page1.Controls(nCnt).controlSource')<>"U"
IF  .NOT. EMPTY(_SCREEN.ACTIVEFORM.PAGEFRAME1.PAGE1.CONTROLS(NCNT).CONTROLSOURCE) .AND. TYPE('_screen.ActiveForm.PageFrame1.Page1.Controls(nCnt).value')<>"U"
CCONDITION = THIS.PARENT.PARSECONDITION(_SCREEN.ACTIVEFORM.PAGEFRAME1.PAGE1.CONTROLS(NCNT).VALUE, _SCREEN.ACTIVEFORM.PAGEFRAME1.PAGE1.CONTROLS(NCNT).CONTROLSOURCE)
IF  .NOT. EMPTY(CCONDITION)
CFILTER = CFILTER+" AND "+CCONDITION
ENDIF
ENDIF
ENDIF
ENDFOR
ROLLBACK
THIS.ENABLED = .F.
THIS.PARENT.CMDQBFMODE.ENABLED = .T.
IF  .NOT. EMPTY(CFILTER)
CFILTER = ALLTRIM(SUBSTRC(CFILTER, 5))
ENDIF
SET FILTER TO &CFILTER
THIS.PARENT.CMDCLEARFILTER.ENABLED = .T.
GOTO TOP
_SCREEN.ACTIVEFORM.REFRESH
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K4QDT
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdFirst
[PARENT] tstoolbar
[START PROPERTIES]
Caption = ""
Enabled = .F.
Height = 40
Left = 5
Name = "cmdFirst"
Picture = ..\bitmaps\frsrec_s.bmp
SpecialEffect = 2
TabIndex = 1
ToolTipText = "Primero (CTRL+INICIO)"
Top = 3
Width = 22
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
LOCAL LNRESULT
LNRESULT = _SCREEN.ACTIVEFORM.FIRST()
DO CASE
CASE LNRESULT=1
THIS.PARENT.REFRESH("BOF")
ENDCASE
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K4S45
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdLast
[PARENT] tstoolbar
[START PROPERTIES]
Caption = ""
Enabled = .F.
Height = 40
Left = 71
Name = "cmdLast"
Picture = ..\bitmaps\lstrec_s.bmp
SpecialEffect = 2
TabIndex = 4
ToolTipText = "Último (CTRL+FIN)"
Top = 3
Width = 22
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
LOCAL LNRESULT
LNRESULT = _SCREEN.ACTIVEFORM.LAST()
DO CASE
CASE LNRESULT=2
THIS.PARENT.REFRESH("EOF")
ENDCASE
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K4SPK
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdNew
[PARENT] tstoolbar
[START PROPERTIES]
AutoSize = .F.
Caption = "Nuevo"
FontSize = 8
Height = 40
Left = 100
Name = "cmdNew"
Picture = ..\bitmaps\new.bmp
SpecialEffect = 2
Style = 0
TabIndex = 5
ToolTipText = "Nuevo (F9)"
Top = 3
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.ADDNEW()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K4RIZ
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdNext
[PARENT] tstoolbar
[START PROPERTIES]
Caption = ""
Enabled = .F.
Height = 40
Left = 49
Name = "cmdNext"
Picture = ..\bitmaps\nxtrec_s.bmp
SpecialEffect = 2
TabIndex = 3
ToolTipText = "Siguiente (CTRL+AV PÁG)"
Top = 3
Width = 22
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
LOCAL LNRESULT
LNRESULT = _SCREEN.ACTIVEFORM.NEXT()
DO CASE
CASE LNRESULT=2
THIS.PARENT.REFRESH("EOF")
CASE LNRESULT=0
THIS.PARENT.REFRESH()
ENDCASE
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _S5W0GLT04
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdprint
[PARENT] tstoolbar
[START PROPERTIES]
Caption = "Imprimir"
FontSize = 8
Height = 40
Left = 295
Name = "cmdprint"
Picture = ..\bitmaps\wzprint.bmp
SpecialEffect = 2
ToolTipText = "Imprimir (CTRL+P)"
Top = 3
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.IMPRIMIR()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K4QYE
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdPrior
[PARENT] tstoolbar
[START PROPERTIES]
Caption = ""
Enabled = .F.
Height = 40
Left = 27
Name = "cmdPrior"
Picture = ..\bitmaps\prvrec_s.bmp
SpecialEffect = 2
TabIndex = 2
ToolTipText = "Anterior (CTRL+RE PÁG)"
Top = 3
Width = 22
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
LOCAL LNRESULT
LNRESULT = _SCREEN.ACTIVEFORM.PRIOR()
DO CASE
CASE LNRESULT=1
THIS.PARENT.REFRESH("BOF")
CASE LNRESULT=0
THIS.PARENT.REFRESH()
ENDCASE
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZZW5V
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] cmdQBFMode
[PARENT] tstoolbar
[START PROPERTIES]
AutoSize = .F.
Caption = "Filtro"
Enabled = .T.
FontBold = .F.
FontName = "Arial"
FontSize = 8
Height = 40
Left = 596
Name = "cmdQBFMode"
Picture = ..\bitmaps\filter.bmp
SpecialEffect = 2
TabIndex = 23
ToolTipText = "Filtrar (CTRL + F)"
Top = 3
Visible = .F.
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
SET DATASESSION TO _SCREEN.ACTIVEFORM.DATASESSIONID
IF EMPTY(THIS.PARENT.QBF_TABLE)
THIS.PARENT.QBF_TABLE = _SCREEN.ACTIVEFORM.DATAENVIRONMENT.INITIALSELECTEDALIAS
ENDIF
SELECT (THIS.PARENT.QBF_TABLE)
BEGIN TRANSACTION
APPEND BLANK
THIS.ENABLED = .F.
THIS.PARENT.CMDEXECUTEQBF.ENABLED = .T.
THIS.PARENT.CMDCLEARFILTER.ENABLED = .F.
_SCREEN.ACTIVEFORM.REFRESH
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K4TU6
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdRestore
[PARENT] tstoolbar
[START PROPERTIES]
AutoSize = .F.
Caption = "Restaurar"
Enabled = .T.
FontName = "Arial"
FontSize = 8
Height = 40
Left = 149
Name = "cmdRestore"
Picture = ..\bitmaps\undo.bmp
SpecialEffect = 2
TabIndex = 7
ToolTipText = "Restaurar (CTRL+Z)"
Top = 3
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.RESTORE()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZYVNR
[CLASS] tstoolbarbutton
[CLASSLOC] tsbase.vcx
[BASECLASS] commandbutton
[OBJNAME] cmdSave
[PARENT] tstoolbar
[START PROPERTIES]
Caption = "Grabar"
Enabled = .T.
FontSize = 8
Height = 40
Left = 197
Name = "cmdSave"
Picture = ..\bitmaps\save.bmp
SpecialEffect = 2
TabIndex = 6
ToolTipText = "Grabar (F12)"
Top = 3
Visible = .T.
Width = 49
[END PROPERTIES]
[START METHODS]
PROCEDURE Click
_SCREEN.ACTIVEFORM.SAVE()
ENDPROC
[END METHODS]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _QYW0ZYVNR
[CLASS] separator
[BASECLASS] separator
[OBJNAME] Separator3
[PARENT] tstoolbar
[START PROPERTIES]
Height = 0
Left = 449
Name = "Separator3"
Top = 3
Width = 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0230H3CN5
[CLASS] separator
[BASECLASS] separator
[OBJNAME] Separator5
[PARENT] tstoolbar
[START PROPERTIES]
Height = 0
Left = 100
Name = "Separator5"
Top = 3
Width = 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _0240PVR1N
[CLASS] separator
[BASECLASS] separator
[OBJNAME] Separator6
[PARENT] tstoolbar
[START PROPERTIES]
Height = 0
Left = 750
Name = "Separator6"
Top = 3
Width = 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tstoolbar
[START PROPERTIES]
Arial, 0, 8, 5, 14, 11, 29, 3, 0
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]

[ RECORD]
[PLATFORM] WINDOWS 
[UNIQUEID] _R020K6I5W
[CLASS] commandbutton
[BASECLASS] commandbutton
[OBJNAME] tstoolbarbutton
[START PROPERTIES]
Caption = " "
Height = 34
Name = "tstoolbarbutton"
SpecialEffect = 0
TabIndex = 1
Width = 37
[END PROPERTIES]
[START PROTECTED]
lcancelclick
[END PROTECTED]
[START METHODS]
PROCEDURE MouseDown
LPARAMETERS NBUTTON, NSHIFT, NXCOORD, NYCOORD
THIS.LCANCELCLICK = .F.
IF  .NOT. THIS.PARENT.OKTOSEND()
THIS.LCANCELCLICK = .T.
?? CHR(7)
NODEFAULT
ENDIF
ENDPROC
**
PROCEDURE MouseUp
LPARAMETERS NBUTTON, NSHIFT, NXCOORD, NYCOORD
IF THIS.LCANCELCLICK
THIS.LCANCELCLICK = .F.
NODEFAULT
ENDIF
ENDPROC
**
[END METHODS]
[START RESERVED1]
Class[END RESERVED1]
[START RESERVED2]
1[END RESERVED2]
[START RESERVED3]
lcancelclick Es True si el código de MouseDown() desea cancelar el clic. 
[END RESERVED3]
[START RESERVED4]
..\bitmaps\pushb.bmp[END RESERVED4]
[START RESERVED5]
..\bitmaps\pushb.bmp[END RESERVED5]
[START RESERVED6]
Pixels[END RESERVED6]
[START RESERVED7]
Clase de base CommandButton para todos los botones de barra de herramientas[END RESERVED7]

[ RECORD]
[PLATFORM] COMMENT 
[UNIQUEID] RESERVED  
[OBJNAME] tstoolbarbutton
[START PROPERTIES]
Arial, 0, 9, 5, 15, 12, 32, 3, 0
[END PROPERTIES]
[EOF]
